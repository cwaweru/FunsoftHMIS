/*
 * companyprflintfr.java
 *
 * Created on August 13, 2002, 11:36 AM
 */
package com.afrisoftech.hospital;

/**
 *
 * @author root
 */
public class MortAdmmissnIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public MortAdmmissnIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        nameSearchDialog = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        nameSearchTxt = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        serialNumberTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        intNameTxt = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        intGenderTxt = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        datePicker21 = new com.afrisoftech.lib.DatePicker();
        jLabel12 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        tagNumberTxt = new javax.swing.JTextField();
        jLabel171 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        intBodyResidenceTxt = new javax.swing.JTextField();
        jLabel611 = new javax.swing.JLabel();
        intAgetxt = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        intPatientNoTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel311 = new javax.swing.JPanel();
        opdChkbx = new javax.swing.JCheckBox();
        ipdChkbx = new javax.swing.JCheckBox();
        noSearchChkbx = new javax.swing.JCheckBox();
        nameSearchChkbx = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        intNOKNameTxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        intNOKAddressTxt = new javax.swing.JTextPane();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        intNOKTelNoTxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        intNOKIDNumberTxt = new javax.swing.JTextField();
        nokRelationShipCmbx = new javax.swing.JComboBox();
        jLabel62 = new javax.swing.JLabel();
        unitRateTxt = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        datePicker22 = new com.afrisoftech.lib.DatePicker();
        categoryNumberCmbx = new javax.swing.JComboBox();
        fringeNumberCmbx = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        homeCountyCmbx = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        permitNumberTxt = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        burialCountyCmbx = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        burialPlaceTxt = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        bodyCategoryCmbx = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        wardorclinicAttendedTxt = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        saveInternalBodiesBtn = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        clearFormIntBtn = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        bidSerialNoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bidNameTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        bidAgeTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        bidVehicleNumberTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bidPoliceOfficerTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bidPlaceofDeathTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        bidForceNumberTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        bidPoliceStationTxt = new javax.swing.JTextField();
        bidResidenceTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        bidMaleChkbx = new javax.swing.JCheckBox();
        bidFemaleChkbx = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        bidCategoryNumberCmbx = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        bidFringeNumberCmbx = new javax.swing.JComboBox();
        bidTagNumberTxt = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        homeCountyCmbx1 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        bidUnitRateTxt = new javax.swing.JTextField();
        burialCountyCmbx1 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        bidPermitNumberTxt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        bidBurialPlaceTxt = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        bodyCategoryBIDCmbx = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        bidWardorclinicAttendedTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        bidNOKNameTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        bidNOKAddressTxt = new javax.swing.JTextPane();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bidNOKTelNumberTxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        bidNOKIDNumberTxt = new javax.swing.JTextField();
        bidNokRelationShipCmbx = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        saveBIDdataBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        clearFormBIDBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();

        nameSearchDialog.setModal(true);
        nameSearchDialog.setUndecorated(true);
        nameSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        nameSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nameSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(nameSearchTxt, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Cancel");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        nameSearchDialog.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Farewell Home - Records Register");
        setToolTipText("Company profile form");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Deceased details. Please note that all highlighted fields in RED are mandatory.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 0, 51));
        jLabel31.setText("Serial No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel31, gridBagConstraints);

        serialNumberTxt.setEditable(false);
        serialNumberTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        serialNumberTxt.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(serialNumberTxt, gridBagConstraints);

        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("Deceased Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel21, gridBagConstraints);

        intNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(intNameTxt, gridBagConstraints);

        jLabel61.setForeground(new java.awt.Color(255, 0, 0));
        jLabel61.setText("Unit Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel61, gridBagConstraints);

        intGenderTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(intGenderTxt, gridBagConstraints);

        jLabel111.setForeground(new java.awt.Color(255, 0, 0));
        jLabel111.setText("Date of Death");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel111, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(datePicker21, gridBagConstraints);

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel12, gridBagConstraints);

        jLabel41.setText("Unit Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel41, gridBagConstraints);

        jLabel51.setForeground(new java.awt.Color(255, 0, 0));
        jLabel51.setText("Tag Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel51, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(tagNumberTxt, gridBagConstraints);

        jLabel171.setText("Fringe Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel171, gridBagConstraints);

        jLabel161.setText("Residence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel161, gridBagConstraints);

        intBodyResidenceTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(intBodyResidenceTxt, gridBagConstraints);

        jLabel611.setText("Age(years)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel611, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(intAgetxt, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        intPatientNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(intPatientNoTxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jPanel41, gridBagConstraints);

        jPanel311.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        jPanel311.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(opdChkbx);
        opdChkbx.setForeground(new java.awt.Color(51, 51, 255));
        opdChkbx.setMnemonic('o');
        opdChkbx.setText("Out Patients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(opdChkbx, gridBagConstraints);

        buttonGroup2.add(ipdChkbx);
        ipdChkbx.setForeground(new java.awt.Color(255, 0, 51));
        ipdChkbx.setMnemonic('i');
        ipdChkbx.setSelected(true);
        ipdChkbx.setText("InPatients");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel311.add(ipdChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 10);
        jPanel11.add(jPanel311, gridBagConstraints);

        buttonGroup3.add(noSearchChkbx);
        noSearchChkbx.setSelected(true);
        noSearchChkbx.setText("Search By  No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel11.add(noSearchChkbx, gridBagConstraints);

        buttonGroup3.add(nameSearchChkbx);
        nameSearchChkbx.setText("Search By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel11.add(nameSearchChkbx, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Details of the of next of Kin"));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel8.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(intNOKNameTxt, gridBagConstraints);

        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Address"));
        jScrollPane3.setViewportView(intNOKAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel8.add(jScrollPane3, gridBagConstraints);

        jLabel18.setText("Relation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel8.add(jLabel18, gridBagConstraints);

        jLabel19.setText("Telephone No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel8.add(jLabel19, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(intNOKTelNoTxt, gridBagConstraints);

        jLabel20.setText("ID No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel8.add(jLabel20, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(intNOKIDNumberTxt, gridBagConstraints);

        nokRelationShipCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT DISTINCT relation_description FROM nok_relationship"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(nokRelationShipCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel11.add(jPanel8, gridBagConstraints);

        jLabel62.setText("Gender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel62, gridBagConstraints);

        unitRateTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(unitRateTxt, gridBagConstraints);

        jLabel112.setForeground(new java.awt.Color(255, 0, 0));
        jLabel112.setText("Date Registered");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel112, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(datePicker22, gridBagConstraints);

        categoryNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT category_name FROM hp_mort_category order by category_name"));
        categoryNumberCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryNumberCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(categoryNumberCmbx, gridBagConstraints);

        fringeNumberCmbx.setEditable(true);
        fringeNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT unit_no FROM hp_mort_units_inventory order by unit_no"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(fringeNumberCmbx, gridBagConstraints);

        jLabel24.setText("Home County");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel24, gridBagConstraints);

        homeCountyCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county order by county_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(homeCountyCmbx, gridBagConstraints);

        jLabel13.setText("Permit Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(permitNumberTxt, gridBagConstraints);

        jLabel23.setText("County of Burial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel23, gridBagConstraints);

        burialCountyCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county order by county_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(burialCountyCmbx, gridBagConstraints);

        jLabel26.setText("Burial Place");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel26, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(burialPlaceTxt, gridBagConstraints);

        jLabel30.setText("Body Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel11.add(jLabel30, gridBagConstraints);

        bodyCategoryCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "D1", "B1", "602A", "320" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(bodyCategoryCmbx, gridBagConstraints);

        jLabel32.setText("Place of death/Ward or Clinic ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel11.add(jLabel32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(wardorclinicAttendedTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel7.add(jPanel11, gridBagConstraints);

        jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel31.setLayout(new java.awt.GridBagLayout());

        saveInternalBodiesBtn.setMnemonic('O');
        saveInternalBodiesBtn.setText("Save Internal Bodies data");
        saveInternalBodiesBtn.setToolTipText("click to store data");
        saveInternalBodiesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInternalBodiesBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(saveInternalBodiesBtn, gridBagConstraints);

        jButton21.setMnemonic('E');
        jButton21.setText("Edit");
        jButton21.setToolTipText("click to edit&update");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jButton21, gridBagConstraints);

        clearFormIntBtn.setMnemonic('n');
        clearFormIntBtn.setText("Clear Form");
        clearFormIntBtn.setToolTipText("click to clear fields");
        clearFormIntBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormIntBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(clearFormIntBtn, gridBagConstraints);

        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click to close");
        jButton41.setSelected(true);
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jButton41, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jLabel35, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel31, gridBagConstraints);

        jTabbedPane1.addTab("Internal Bodies", jPanel7);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Deceased details. Please note that all highlighted fields in RED are mandatory.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText(" Serial No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        bidSerialNoTxt.setEditable(false);
        bidSerialNoTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bidSerialNoTxt.setForeground(new java.awt.Color(255, 0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bidSerialNoTxt, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Deceased Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bidNameTxt, gridBagConstraints);

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Date Received");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker1, gridBagConstraints);

        jLabel6.setText("Age(years)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bidAgeTxt, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Date of Death");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(datePicker2, gridBagConstraints);

        jLabel1.setText("Residence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidVehicleNumberTxt, gridBagConstraints);

        jLabel4.setText("Police Officer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidPoliceOfficerTxt, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Place of Death");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidPlaceofDeathTxt, gridBagConstraints);

        jLabel17.setText("Force No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel17, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidForceNumberTxt, gridBagConstraints);

        jLabel16.setText("Police Station");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidPoliceStationTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidResidenceTxt, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Select gender here."));

        buttonGroup1.add(bidMaleChkbx);
        bidMaleChkbx.setText("Male");
        jPanel4.add(bidMaleChkbx);

        buttonGroup1.add(bidFemaleChkbx);
        bidFemaleChkbx.setText("Female");
        jPanel4.add(bidFemaleChkbx);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel4, gridBagConstraints);
        jPanel1.add(jPanel5, new java.awt.GridBagConstraints());

        jLabel22.setText("Vehicle No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel22, gridBagConstraints);

        bidCategoryNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT category_name FROM hp_mort_category order by category_name"));
        bidCategoryNumberCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidCategoryNumberCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidCategoryNumberCmbx, gridBagConstraints);

        jLabel42.setForeground(new java.awt.Color(255, 0, 0));
        jLabel42.setText("Unit Category");
        jLabel42.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel42AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel42, gridBagConstraints);

        jLabel172.setText("Fringe Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel172, gridBagConstraints);

        bidFringeNumberCmbx.setEditable(true);
        bidFringeNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT unit_no FROM hp_mort_units_inventory order by unit_no"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidFringeNumberCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidTagNumberTxt, gridBagConstraints);

        jLabel52.setForeground(new java.awt.Color(255, 0, 0));
        jLabel52.setText("Tag Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel52, gridBagConstraints);

        homeCountyCmbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county order by county_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(homeCountyCmbx1, gridBagConstraints);

        jLabel25.setText("Home County");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel25, gridBagConstraints);

        jLabel63.setForeground(new java.awt.Color(255, 0, 0));
        jLabel63.setText("Unit Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel63, gridBagConstraints);

        bidUnitRateTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bidUnitRateTxt, gridBagConstraints);

        burialCountyCmbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT county_name FROM pb_county order by county_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(burialCountyCmbx1, gridBagConstraints);

        jLabel27.setText("County of Burial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel27, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidPermitNumberTxt, gridBagConstraints);

        jLabel28.setText("Permit Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel28, gridBagConstraints);

        jLabel29.setText("Burial Place");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel29, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidBurialPlaceTxt, gridBagConstraints);

        jLabel33.setText("Body Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel1.add(jLabel33, gridBagConstraints);

        bodyCategoryBIDCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "D1", "B1", "602A", "320" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bodyCategoryBIDCmbx, gridBagConstraints);

        jLabel34.setText("Ward/Clinic Attended");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel34, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bidWardorclinicAttendedTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel6.add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Details of the person who brought the body"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("Brought In By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel2.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(bidNOKNameTxt, gridBagConstraints);

        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Address of person who brought the body"));
        jScrollPane2.setViewportView(bidNOKAddressTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jLabel14.setText("Relation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel14, gridBagConstraints);

        jLabel8.setText("Telephone No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(bidNOKTelNumberTxt, gridBagConstraints);

        jLabel15.setText("ID No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel2.add(jLabel15, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(bidNOKIDNumberTxt, gridBagConstraints);

        bidNokRelationShipCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT DISTINCT relation_description FROM nok_relationship"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(bidNokRelationShipCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        saveBIDdataBtn.setMnemonic('O');
        saveBIDdataBtn.setText("Save BID data");
        saveBIDdataBtn.setToolTipText("click to store data");
        saveBIDdataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBIDdataBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(saveBIDdataBtn, gridBagConstraints);

        jButton2.setMnemonic('E');
        jButton2.setText("Edit entries");
        jButton2.setToolTipText("click to edit&update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton2, gridBagConstraints);

        clearFormBIDBtn.setMnemonic('n');
        clearFormBIDBtn.setText("Clear form");
        clearFormBIDBtn.setToolTipText("click to clear fields");
        clearFormBIDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormBIDBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(clearFormBIDBtn, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close form");
        jButton4.setToolTipText("Click to close");
        jButton4.setSelected(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel36, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel3, gridBagConstraints);

        jTabbedPane1.addTab("BID Form", jPanel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 750, 536);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
       // this.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton41ActionPerformed

    private void saveInternalBodiesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInternalBodiesBtnActionPerformed
        //     if (intNOKNameTxt.getText().length() > 1 || intNOKTelNoTxt.getText().length() > 1) {
        if (tagNumberTxt.getText().length() > 1) {
            if (intPatientNoTxt.getText().length() > 1) {
                if (unitRateTxt.getText().length() > 1) {
                    if (categoryNumberCmbx.getSelectedItem().toString().length() > 1) {
                        String cmBox = null;
                        if (bidMaleChkbx.isSelected()) {
                            cmBox = bidMaleChkbx.getText();
                        } else {
                            cmBox = bidFemaleChkbx.getText();
                        }
                        String user = "";
                        java.sql.Date inputDate = null;

                        try {
                            java.sql.Statement ps11 = connectDB.createStatement();
                            java.sql.ResultSet rst11 = ps11.executeQuery("select current_user,current_date::date");
                            while (rst11.next()) {
                                user = rst11.getObject(1).toString();
                                inputDate = rst11.getDate(2);
                            }
                            java.sql.Statement pss1x = connectDB.createStatement();
                            java.sql.Statement pss1 = connectDB.createStatement();

                            java.sql.ResultSet rss1x = pss1x.executeQuery("select nextval('internal_no_seq')");
                            while (rss1x.next()) {

                                java.sql.ResultSet rss1 = pss1.executeQuery("select 'INT'||lpad('" + rss1x.getInt(1) + "'," + 5 + ",'0')");
                                while (rss1.next()) {
                                    // patientNo2 = rss1.getObject(1).toString();
                                    serialNumberTxt.setText(rss1.getObject(1).toString());
                                }
                            }
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO hp_mortuary VALUES(?, ?, ?, ?,"
                                    + " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt.setString(1, intPatientNoTxt.getText());
                            pstmt.setString(2, intNameTxt.getText());
                            pstmt.setString(3, intBodyResidenceTxt.getText());
                            pstmt.setString(5, intGenderTxt.getText());
                            pstmt.setString(4, String.valueOf(Integer.parseInt(intAgetxt.getText())));
                            pstmt.setString(6, serialNumberTxt.getText());
                            pstmt.setString(7, "");
                            pstmt.setString(8, user);
                            pstmt.setDate(9, inputDate);
                            pstmt.setDate(10, null);
                            pstmt.setBoolean(11, false);
                            pstmt.setString(12, "Internal");
                            pstmt.setDouble(13, 0);
                            pstmt.setString(14, tagNumberTxt.getText());
                            pstmt.setString(15, wardorclinicAttendedTxt.getText());
                            pstmt.setString(16, "-");
                            pstmt.setString(17, "-");
                            pstmt.setString(18, "-");
                            pstmt.setString(19, intNOKNameTxt.getText());
                            pstmt.setString(20, this.intNOKAddressTxt.getText());
                            pstmt.setObject(21, this.nokRelationShipCmbx.getSelectedItem());
                            pstmt.setString(22, intNOKTelNoTxt.getText());
                            pstmt.setObject(23, intNOKIDNumberTxt.getText());
                            pstmt.setDate(24, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker22.getDate()));
                            pstmt.setDate(25, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker21.getDate()));
                            pstmt.setString(26, "");
                            pstmt.setObject(27, "");
                            pstmt.setString(28, null);
                            pstmt.setBoolean(29, false);
                            pstmt.setString(30, "");
                            pstmt.setString(31, categoryNumberCmbx.getSelectedItem().toString());
                            pstmt.setDouble(32, Double.parseDouble(unitRateTxt.getText()));
                            pstmt.setObject(33, fringeNumberCmbx.getSelectedItem());
                            pstmt.setString(34, homeCountyCmbx.getSelectedItem().toString());
                            pstmt.setString(35, tagNumberTxt.getText());
                            pstmt.setString(36, burialCountyCmbx.getSelectedItem().toString());
                            pstmt.setString(37, burialPlaceTxt.getText());
                            pstmt.setString(38, permitNumberTxt.getText());
                            pstmt.setString(39, bodyCategoryCmbx.getSelectedItem().toString());
                            pstmt.setString(40, wardorclinicAttendedTxt.getText());

                            pstmt.executeUpdate();
                            //Generate registration billing information for mandatory charges

                            javax.swing.JOptionPane.showMessageDialog(this, "Data saved Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                           
                            com.afrisoftech.hmis.automatedoperations.AutomatedIPCharges autoMortCharges = new com.afrisoftech.hmis.automatedoperations.AutomatedIPCharges();
                            autoMortCharges.billRegistrationMortCharges(connectDB, serialNumberTxt.getText());

//                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE hp_admission set discharge = true WHERE patient_no = ?");
//                            pstmt1.setString(1, intPatientNoTxt.getText());
//                            pstmt1.executeUpdate();
                            clearForm();
                        } catch (java.sql.SQLException sq) {
                            sq.printStackTrace();
                            System.out.println(sq.getMessage());
                            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage());
                            //jLabel12.setForeground(java.awt.Color.red);
                            //jLabel12.setText("Sorry. Another  Code already exists");
                        }

                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "Unit Category MUST be set.");
                    }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Unit rate MUST be set via selection of Unit Category options.");
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "You MUST select a patient file by setting the patient number.");
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "You MUST set the tag number.");
        }
        //   } else {
        //       javax.swing.JOptionPane.showMessageDialog(this, "You MUST Next of Kin details i.e. Name, Relationship, Address, Telephone and NOK ID Number.");
        //   }
        // Add your handling code here:
    }//GEN-LAST:event_saveInternalBodiesBtnActionPerformed

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        intPatientNoTxt.setText("");
        intNameTxt.setText("");
        intBodyResidenceTxt.setText("");
        intGenderTxt.setText("");
        intAgetxt.setText("");
        serialNumberTxt.setText("");
//        jTextField51.setText("");

        tagNumberTxt.setText("");
        unitRateTxt.setText("");

        intNOKNameTxt.setText("");
        intNOKAddressTxt.setText("");
        intNOKTelNoTxt.setText("");
        intNOKIDNumberTxt.setText("");

//        jTextField131.setText("");
        intNameTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        intPatientNoTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());

        if (this.opdChkbx.isSelected()) {
            try {

                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("SELECT test,age::int,gender,department,date from hp_patient_visit WHERE patient_no  ='" + intPatientNoTxt.getText() + "' ORDER BY date DESC LIMIT 1");
                while (rset1.next()) {
                    intBodyResidenceTxt.setText(rset1.getObject(1).toString());
                    intAgetxt.setText(rset1.getObject(2).toString());
                    intGenderTxt.setText(rset1.getObject(3).toString());
                    unitRateTxt.setText("");
                    datePicker22.setDate(rset1.getDate(5));
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        } else {

            try {

                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select residence,pat_age::int,gender,ward,date_admitted from hp_admission where patient_no  ='" + intPatientNoTxt.getText() + "' ORDER BY date_admitted DESC LIMIT 1");
                while (rset1.next()) {
                    intBodyResidenceTxt.setText(rset1.getObject(1).toString());
                    intAgetxt.setText(rset1.getObject(2).toString());
                    intGenderTxt.setText(rset1.getObject(3).toString());
                    unitRateTxt.setText("");
                    datePicker22.setDate(rset1.getDate(5));
                    wardorclinicAttendedTxt.setText(rset1.getString(4));

                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }
        //        this.populateTable1(this.jTextField9.getText());
        this.nameSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.nameSearchDialog.dispose();       // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void nameSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nameSearchTxtCaretUpdate

        if (this.opdChkbx.isSelected() && this.noSearchChkbx.isSelected()) {

            if (nameSearchTxt.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where patient_no ILIKE '" + nameSearchTxt.getText() + "%'  or patient_race ilike '%" + nameSearchTxt.getText() + "%' and last_visit > current_date - 10 order by second_name"));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);

            }
        } else {
            if (this.opdChkbx.isSelected() && this.nameSearchChkbx.isSelected()) {
                if (nameSearchTxt.getCaretPosition() < 3) {
                    System.out.println("Nothing");
                } else {
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '" + nameSearchTxt.getText() + "%'  or patient_race ilike '%" + nameSearchTxt.getText() + "%' and last_visit > current_date - 10 order by second_name"));

                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);

                }
            }
        }

        if (this.ipdChkbx.isSelected() && this.noSearchChkbx.isSelected()) {

            if (nameSearchTxt.getCaretPosition() < 3) {
                System.out.println("Nothing");
            } else {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, unit_number, visit_id from inpatient_list where patient_no ILIKE '" + nameSearchTxt.getText() + "%' or unit_number ilike '%" + nameSearchTxt.getText() + "%' order by name"));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);

            }
        } else {
            if (this.ipdChkbx.isSelected() && this.nameSearchChkbx.isSelected()) {
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, name, unit_number, visit_id from inpatient_list where name ILIKE '" + nameSearchTxt.getText() + "%' or unit_number ilike '%" + nameSearchTxt.getText() + "%' order by name"));

                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);

            }
        }       // Add your handling code here:
    }//GEN-LAST:event_nameSearchTxtCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.intNameTxt.getLocationOnScreen();

        nameSearchDialog.setSize(700, 200);

        nameSearchDialog.setLocation(point);

        nameSearchDialog.setVisible(true);

    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      //  this.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void clearFormBIDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormBIDBtnActionPerformed

        clearForm();
//        jTextField16.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_clearFormBIDBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //       javax.swing.JFrame admm = new admmission();
        // admm.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saveBIDdataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBIDdataBtnActionPerformed

        if (bidNameTxt.getText().length() > 1 && bidUnitRateTxt.getText().length() > 0
                && bidTagNumberTxt.getText().length() > 0 && bidCategoryNumberCmbx.getSelectedItem()
                != null && bidPlaceofDeathTxt.getText().length() > 1) {
            String cmBox = null;
            if (bidMaleChkbx.isSelected()) {
                cmBox = bidMaleChkbx.getText();
            } else {
                cmBox = bidFemaleChkbx.getText();
            }
            String user = "";
            java.sql.Date inputDate = null;
            try {
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select current_user,current_date::date");
                while (rst11.next()) {
                    user = rst11.getObject(1).toString();
                    inputDate = rst11.getDate(2);
                }
                java.sql.Statement pss1x = connectDB.createStatement();
                java.sql.Statement pss1 = connectDB.createStatement();

                java.sql.ResultSet rss1x = pss1x.executeQuery("select nextval('bid_no_seq')");
                while (rss1x.next()) {

                    java.sql.ResultSet rss1 = pss1.executeQuery("select 'BID'||lpad('" + rss1x.getInt(1) + "'," + 5 + ",'0')");
                    while (rss1.next()) {
                        // patientNo2 = rss1.getObject(1).toString();
                        bidSerialNoTxt.setText(rss1.getObject(1).toString());
                    }
                }
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_mortuary values(?, ?, ?, ?, ?, ?,"
                        + " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                pstmt.setString(1, bidSerialNoTxt.getText());
                pstmt.setString(2, bidNameTxt.getText());
                pstmt.setString(3, bidResidenceTxt.getText());
                pstmt.setString(4, String.valueOf(Integer.parseInt(bidAgeTxt.getText())));
                pstmt.setString(5, cmBox);
                pstmt.setString(6, bidSerialNoTxt.getText());
                pstmt.setString(7, bidPoliceOfficerTxt.getText());
                pstmt.setString(8, user);
                pstmt.setDate(9, inputDate);
                pstmt.setDate(10, null);
                pstmt.setBoolean(11, false);
                pstmt.setString(12, "BID");
                pstmt.setDouble(13, 0);
                pstmt.setString(14, "");
                pstmt.setString(15, bidPlaceofDeathTxt.getText());
                pstmt.setString(16, bidForceNumberTxt.getText());
                pstmt.setString(17, bidPoliceStationTxt.getText());
                pstmt.setString(18, bidVehicleNumberTxt.getText());
                pstmt.setString(19, bidNOKNameTxt.getText());
                pstmt.setString(20, bidNOKAddressTxt.getText());
                pstmt.setObject(21, this.bidNokRelationShipCmbx.getSelectedItem());
                pstmt.setString(22, bidNOKTelNumberTxt.getText());
                pstmt.setObject(23, bidNOKIDNumberTxt.getText());
                pstmt.setDate(24, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                pstmt.setDate(25, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate()));
                pstmt.setString(26, bidPoliceOfficerTxt.getText());
                pstmt.setObject(27, "");
                pstmt.setString(28, null);
                pstmt.setBoolean(29, false);
                pstmt.setString(30, "");
                pstmt.setString(31, bidCategoryNumberCmbx.getSelectedItem().toString());
                pstmt.setDouble(32, Double.parseDouble(bidUnitRateTxt.getText()));
                pstmt.setObject(33, bidFringeNumberCmbx.getSelectedItem());
                pstmt.setString(34, homeCountyCmbx1.getSelectedItem().toString());
                pstmt.setString(35, bidTagNumberTxt.getText());
                pstmt.setString(36, burialCountyCmbx1.getSelectedItem().toString());
                pstmt.setString(37, bidBurialPlaceTxt.getText());
                pstmt.setString(38, bidPermitNumberTxt.getText());
                pstmt.setString(39, bodyCategoryBIDCmbx.getSelectedItem().toString());
                pstmt.setString(40, bidWardorclinicAttendedTxt.getText());

                pstmt.executeUpdate();
                //Generate billing information for mandatory charges
                com.afrisoftech.hmis.automatedoperations.AutomatedIPCharges autoMortCharges = new com.afrisoftech.hmis.automatedoperations.AutomatedIPCharges();
                autoMortCharges.billRegistrationMortCharges(connectDB, bidSerialNoTxt.getText());

                clearForm();
                javax.swing.JOptionPane.showMessageDialog(this, "Data saved Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } catch (java.sql.SQLException sq) {
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage());
                sq.printStackTrace();
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "ALL HIGHLIGHTED fields in RED MUST be filled.", "ERROR MESSAGE!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }

        // Add your handling code here:
    }//GEN-LAST:event_saveBIDdataBtnActionPerformed

    private void clearFormIntBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormIntBtnActionPerformed

        clearForm();

//        jTextField131.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_clearFormIntBtnActionPerformed

    private void categoryNumberCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryNumberCmbxActionPerformed

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select category_name, normal_rate from hp_mort_category WHERE category_name = '" + categoryNumberCmbx.getSelectedItem().toString() + "' order by category_name");
            while (rset.next()) {
                //     targetCategoryTxt.setText(rset.getObject(1).toString());
                unitRateTxt.setText(String.valueOf(rset.getDouble(2)));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }

        fringeNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select unit_no from hp_mort_units_inventory where unit_category ILIKE '" + categoryNumberCmbx.getSelectedItem() + "%' and unit_occupied = 'f' order by unit_no asc"));
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryNumberCmbxActionPerformed

    private void bidCategoryNumberCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidCategoryNumberCmbxActionPerformed

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select category_name, normal_rate from hp_mort_category where category_name = '" + bidCategoryNumberCmbx.getSelectedItem().toString() + "' order by category_name");
            while (rset.next()) {
                //     targetCategoryTxt.setText(rset.getObject(1).toString());
                bidUnitRateTxt.setText(String.valueOf(rset.getDouble(2)));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }

        bidFringeNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select unit_no from hp_mort_units_inventory where unit_category ILIKE '" + bidCategoryNumberCmbx.getSelectedItem() + "%' order by unit_no asc"));

        // TODO add your handling code here:
    }//GEN-LAST:event_bidCategoryNumberCmbxActionPerformed

    private void jLabel42AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel42AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel42AncestorAdded
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bidAgeTxt;
    private javax.swing.JTextField bidBurialPlaceTxt;
    private javax.swing.JComboBox bidCategoryNumberCmbx;
    private javax.swing.JCheckBox bidFemaleChkbx;
    private javax.swing.JTextField bidForceNumberTxt;
    private javax.swing.JComboBox bidFringeNumberCmbx;
    private javax.swing.JCheckBox bidMaleChkbx;
    private javax.swing.JTextPane bidNOKAddressTxt;
    private javax.swing.JTextField bidNOKIDNumberTxt;
    private javax.swing.JTextField bidNOKNameTxt;
    private javax.swing.JTextField bidNOKTelNumberTxt;
    private javax.swing.JTextField bidNameTxt;
    private javax.swing.JComboBox bidNokRelationShipCmbx;
    private javax.swing.JTextField bidPermitNumberTxt;
    private javax.swing.JTextField bidPlaceofDeathTxt;
    private javax.swing.JTextField bidPoliceOfficerTxt;
    private javax.swing.JTextField bidPoliceStationTxt;
    private javax.swing.JTextField bidResidenceTxt;
    private javax.swing.JTextField bidSerialNoTxt;
    private javax.swing.JTextField bidTagNumberTxt;
    private javax.swing.JTextField bidUnitRateTxt;
    private javax.swing.JTextField bidVehicleNumberTxt;
    private javax.swing.JTextField bidWardorclinicAttendedTxt;
    private javax.swing.JComboBox bodyCategoryBIDCmbx;
    private javax.swing.JComboBox bodyCategoryCmbx;
    private javax.swing.JComboBox burialCountyCmbx;
    private javax.swing.JComboBox burialCountyCmbx1;
    private javax.swing.JTextField burialPlaceTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox categoryNumberCmbx;
    private javax.swing.JButton clearFormBIDBtn;
    private javax.swing.JButton clearFormIntBtn;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker21;
    private com.afrisoftech.lib.DatePicker datePicker22;
    private javax.swing.JComboBox fringeNumberCmbx;
    private javax.swing.JComboBox homeCountyCmbx;
    private javax.swing.JComboBox homeCountyCmbx1;
    private javax.swing.JTextField intAgetxt;
    private javax.swing.JTextField intBodyResidenceTxt;
    private javax.swing.JTextField intGenderTxt;
    private javax.swing.JTextPane intNOKAddressTxt;
    private javax.swing.JTextField intNOKIDNumberTxt;
    private javax.swing.JTextField intNOKNameTxt;
    private javax.swing.JTextField intNOKTelNoTxt;
    private javax.swing.JTextField intNameTxt;
    private javax.swing.JTextField intPatientNoTxt;
    private javax.swing.JCheckBox ipdChkbx;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton52;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel611;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel311;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox nameSearchChkbx;
    private javax.swing.JDialog nameSearchDialog;
    private javax.swing.JTextField nameSearchTxt;
    private javax.swing.JCheckBox noSearchChkbx;
    private javax.swing.JComboBox nokRelationShipCmbx;
    private javax.swing.JCheckBox opdChkbx;
    private javax.swing.JTextField permitNumberTxt;
    private javax.swing.JButton saveBIDdataBtn;
    private javax.swing.JButton saveInternalBodiesBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField serialNumberTxt;
    private javax.swing.JTextField tagNumberTxt;
    private javax.swing.JTextField unitRateTxt;
    private javax.swing.JTextField wardorclinicAttendedTxt;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        intPatientNoTxt.setText("");
        intNameTxt.setText("");
        intBodyResidenceTxt.setText("");
        intGenderTxt.setText("");
        intAgetxt.setText("");
        serialNumberTxt.setText("");
        tagNumberTxt.setText("");
        unitRateTxt.setText("");
        intNOKNameTxt.setText("");
        intNOKAddressTxt.setText("");
        intNOKTelNoTxt.setText("");
        intNOKIDNumberTxt.setText("");
        //   homeCountyCmbx.setSelectedItem(null);
        //   burialCountyCmbx.setSelectedItem(null);
        tagNumberTxt.setText("");
        //    bodyCategoryCmbx.setSelectedItem(null);
        wardorclinicAttendedTxt.setText("");
        permitNumberTxt.setText("");
        burialPlaceTxt.setText("");
        //   fringeNumberCmbx.setSelectedItem(null);
        //    categoryNumberCmbx.setSelectedItem(null);
        unitRateTxt.setText("");
        bidSerialNoTxt.setText("");
        bidNameTxt.setText("");
        bidAgeTxt.setText("");
        bidMaleChkbx.setSelected(false);
        bidFemaleChkbx.setSelected(false);
        bidUnitRateTxt.setText("");
        bidTagNumberTxt.setText("");
        //  homeCountyCmbx1.setSelectedItem(null);;
        //  burialCountyCmbx1.setSelectedItem(null);;
        //  bodyCategoryBIDCmbx.setSelectedItem(null);;
        bidNOKNameTxt.setText("");
        bidNOKAddressTxt.setText("");
        //  bidNokRelationShipCmbx.setSelectedItem(null);;
        bidNOKTelNumberTxt.setText("");
        bidNOKIDNumberTxt.setText("");
        bidWardorclinicAttendedTxt.setText("");
        bidPermitNumberTxt.setText("");
        bidBurialPlaceTxt.setText("");
        //  bidFringeNumberCmbx.setSelectedItem(null);;
        //  bidCategoryNumberCmbx.setSelectedItem(null);;
        bidVehicleNumberTxt.setText("");
        bidPoliceStationTxt.setText("");
        bidForceNumberTxt.setText("");
        bidPoliceOfficerTxt.setText("");
        bidResidenceTxt.setText("");
        bidPlaceofDeathTxt.setText("");

        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
