/*
 * Members.java
 *
 * Created on August 13, 2002, 3:36 PM
 */

package com.afrisoftech.hospital;

import java.sql.SQLException;

//import com.sun.star.lib.uno.environments.java.java_environment;

/**
 *
 * @author  root
 */
public class OpenCloseAccPeriodsIntfr extends javax.swing.JInternalFrame {
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public OpenCloseAccPeriodsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        try {
            crset3 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset1 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset2 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crset4 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crsetusertables = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        try {
            crsetdataccess = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jTabbedPane1 = new javax.swing.JTabbedPane();
        newAccPeriods = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        registerActivePeriodBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        closeFormBtn = new javax.swing.JButton();
        beginDate = new javax.swing.JLabel();
        endDateLbl = new javax.swing.JLabel();
        beginDatePicker = new com.afrisoftech.lib.DatePicker();
        endDatePicker = new com.afrisoftech.lib.DatePicker();
        closingAccPeriods = new javax.swing.JPanel();
        operationPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        activePeriodsTable = new com.afrisoftech.dbadmin.JTable();
        buttonPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        crset3.setConnectionSource(pConnDB);
        crset1.setConnectionSource(pConnDB);
        crset2.setConnectionSource(pConnDB);
        crset4.setConnectionSource(pConnDB);
        crsetusertables.setConnectionSource(pConnDB);
        crsetdataccess.setConnectionSource(pConnDB);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Open/Close Accounting periods");
        setFont(new java.awt.Font("SansSerif", 0, 10));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        newAccPeriods.setLayout(new java.awt.GridBagLayout());

        newAccPeriods.setBorder(javax.swing.BorderFactory.createTitledBorder("Manage the active accounting periods"));
        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14));
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("List of system logon accounts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        newAccPeriods.add(jLabel3, gridBagConstraints);

        registerActivePeriodBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/note[1].gif")));
        registerActivePeriodBtn.setMnemonic('e');
        registerActivePeriodBtn.setText("Register Active Period");
        registerActivePeriodBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerActivePeriodBtnMouseClicked(evt);
            }
        });
        registerActivePeriodBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActivePeriodBtnActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(registerActivePeriodBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        newAccPeriods.add(jSeparator1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Name of new accounting period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        newAccPeriods.add(jLabel5, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        newAccPeriods.add(jTextField1, gridBagConstraints);

        jList11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList11.setDragEnabled(true);
        jList11.setValueIsAdjusting(true);
        jList11.setVisibleRowCount(20);
        jScrollPane2.setViewportView(jList11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        newAccPeriods.add(jScrollPane2, gridBagConstraints);

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(jButton2, gridBagConstraints);

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(jButton3, gridBagConstraints);

        jLabel31.setFont(new java.awt.Font("SansSerif", 1, 14));
        jLabel31.setForeground(new java.awt.Color(0, 0, 204));
        jLabel31.setText("Accounts set to use the active period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        newAccPeriods.add(jLabel31, gridBagConstraints);

        jList1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList1.setModel(com.afrisoftech.lib.ListModel.listModel(connectDB, "select usename from pg_user where usename !='postgres' ORDER BY usename"));
        jList1.setDragEnabled(true);
        jList1.setValueIsAdjusting(true);
        jList1.setVisibleRowCount(20);
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        newAccPeriods.add(jScrollPane1, gridBagConstraints);

        closeFormBtn.setText("Close form");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        newAccPeriods.add(closeFormBtn, gridBagConstraints);

        beginDate.setText("Begin Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(beginDate, gridBagConstraints);

        endDateLbl.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(endDateLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(beginDatePicker, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        newAccPeriods.add(endDatePicker, gridBagConstraints);

        jTabbedPane1.addTab("Registering active accounting periods", newAccPeriods);

        closingAccPeriods.setLayout(new java.awt.GridBagLayout());

        closingAccPeriods.setBorder(javax.swing.BorderFactory.createTitledBorder("Close active accounting periods"));
        operationPanel.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14));
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("List of active accounting periods");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        operationPanel.add(jLabel6, gridBagConstraints);

        activePeriodsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        activePeriodsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT accc_period_id, open_acc_period_begin_date, open_acc_period_end_date, period_status as Close FROM open_acc_periods"));
        jScrollPane3.setViewportView(activePeriodsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        operationPanel.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.weightx = 400.0;
        gridBagConstraints.weighty = 1.0;
        closingAccPeriods.add(operationPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Update accounting periods");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 200.0;
        buttonPanel.add(jLabel1, gridBagConstraints);

        jButton4.setText("Close form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        closingAccPeriods.add(buttonPanel, gridBagConstraints);

        jTabbedPane1.addTab("Closing active accounting periods", closingAccPeriods);

        jTabbedPane1.addTab("Set the current accounting period", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 750, 450);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
            
    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed
                            
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        java.lang.Object[] listSel = null;
        
        listSel = jList11.getSelectedValues();
        
        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel)jList11.getModel();
        
        for (int i = 0; i < listSel.length; i++) {
            
            newdfListModel.removeElement(listSel[i]);
            
        }
        
        this.jList11.setModel(newdfListModel);
        // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        java.lang.Object[] listSel = null;
        
        listSel = jList1.getSelectedValues();
        
        javax.swing.ListModel list11Model = jList11.getModel();
        
        int nofItemsList11 = list11Model.getSize();
        
        javax.swing.DefaultListModel newdfListModel = new javax.swing.DefaultListModel();
        
        for (int j = 0; j < list11Model.getSize(); j++) {
            
            newdfListModel.addElement(list11Model.getElementAt(j));
            
        }
        //        javax.swing.DefaultListModel newdfListModel = (javax.swing.DefaultListModel)jList11.getModel();
        
        for (int i = 0; i < listSel.length; i++) {
            
            if (!newdfListModel.contains(listSel[i])) {
                
                newdfListModel.addElement(listSel[i].toString());
                
            }
        }
        
        this.jList11.setModel(newdfListModel);
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
            
    private void registerActivePeriodBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerActivePeriodBtnMouseClicked
        /* try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }
         
         try {
            java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/insurance","postgres","pilsiner");
         
            java.lang.Object[] lists = null;
            lists = jList1.getSelectedValues();
            java.lang.String[] list_str = null;
           // list_str = lists.toString();
            for (int i = 0; i < lists.length; i++){
            java.sql.PreparedStatement pstmt = con.prepareStatement("insert into ab values(?)");
            //  for (int i = 0; i < anArray.length; i++){
         
          //  System.out.println(lists[i].toString());
          //  list_str = lists[i].toString();
         
         
            pstmt.setObject(1,lists[i].toString());
             //pstmt.setString(9,jComboBox13.getSelectedItem().toString());
         
            pstmt.executeUpdate();
            }
              }   catch(java.sql.SQLException sq){
                     javax.swing.JOptionPane.showMessageDialog(this,"ERROR: "+ sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
         
            System.out.println(sq.getMessage());
         
              }
         */   // Add your handling code here:
    }//GEN-LAST:event_registerActivePeriodBtnMouseClicked
    
    private void registerActivePeriodBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActivePeriodBtnActionPerformed
        
        java.util.Vector item2add = new java.util.Vector(1, 1);
        
        javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();
        
        listModel = (javax.swing.DefaultListModel)jList11.getModel();
        
        java.lang.Object[] selectedValues = null;
        
        java.util.Enumeration listEnum =  listModel.elements();
        
         java.sql.Array sqlArray = null;
        
        while(listEnum.hasMoreElements()) {
            
            item2add.addElement(listEnum.nextElement());
            
        }
        
        selectedValues = item2add.toArray();
        try {
            
            sqlArray = connectDB.createArrayOf("varchar",selectedValues);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        for (int k = 0; k < selectedValues.length; k++) {
            
            System.out.print("Values : "+"\t"+selectedValues[k]+"\t");
            
        }
        
        java.sql.Array menuSqlArray;
        
        //   java.sql.Statement pstmtArray = connectDB.createStatement();
        //   java.sql.PreparedStatement pmstmtArray = connectDB.prepareStatement("SELECT menu_list FROM secure_menu_access WHERE login_name = ? AND sys_name ilike 'hospital_main'");
        //   pmstmtArray.setString(1,jComboBox1.getSelectedItem().toString());
        //  java.sql.ResultSet rsetArray = pmstmtArray.executeQuery();
        //  while(rsetArray.next()){
        //    menuSqlArray = rsetArray.getArray(1);
        // }
        
        //  menuSqlArray.
        java.lang.String str = this.getSqlString(selectedValues);
        
        str = "{"+str+"}";
        
        
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.PreparedStatement pmstmt = connectDB.prepareStatement("begin work;INSERT INTO open_acc_periods(" +
            "accc_period_id, open_acc_period_begin_date, open_acc_period_end_date," +
            "users_list," +
            "period_status) VALUES (?, ?, ?, ?,?) ;commit work");
            pmstmt.setArray(4, sqlArray);//setString(4,str);
            pmstmt.setDate(2,com.afrisoftech.lib.SQLDateFormat.getSQLDate(beginDatePicker.getDate()));//.toString());
            pmstmt.setDate(3,com.afrisoftech.lib.SQLDateFormat.getSQLDate(endDatePicker.getDate()));//.toString());
            pmstmt.setBoolean(5,true);
            pmstmt.setObject(1,beginDatePicker.getDate().toString()+"-"+endDatePicker.getDate().toString());
            pmstmt.executeUpdate();
            System.out.println("----------------------------------------------------------------");
            connectDB.commit();
            connectDB.setAutoCommit(true);
            activePeriodsTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT accc_period_id, open_acc_period_begin_date, open_acc_period_end_date, period_status as close FROM open_acc_periods"));
            javax.swing.JOptionPane.showMessageDialog(this, "Successfuly registered an active accounting period labeled : ["+beginDatePicker.getDate().toString()+"-"+endDatePicker.getDate().toString()+"]");
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            // sq.printStackTrace();
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_registerActivePeriodBtnActionPerformed
    
    private void jButton20221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20221ActionPerformed
    /*  jTextField58221.setText("");
      jTextField50221.setText("");
      jTextField53221.setText("");
      jTextField49221.setText("");
      jTextField6021.setText("");
     // jTextField4821.setText("");
      jTextField1.setText("");
      jTextField54121.setText("");
     // jTextField5721.setText("");
      jTextField56121.setText("");
     */
        // Add your handling code here:
    }//GEN-LAST:event_jButton20221ActionPerformed
    
    private void jButton15221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15221ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jButton15221ActionPerformed
                    
    public String getSqlString(java.lang.Object[] arrayfromJList) {
        
        java.lang.String strToArray = arrayfromJList[0].toString();
        
        for (int i = 1; i <arrayfromJList.length; i++) {
            
            strToArray = strToArray+", "+arrayfromJList[i].toString();
            
        }
        
        System.out.println(strToArray);
        
        return strToArray;
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activePeriodsTable;
    private javax.swing.JLabel beginDate;
    private com.afrisoftech.lib.DatePicker beginDatePicker;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JPanel closingAccPeriods;
    private org.netbeans.lib.sql.NBCachedRowSet crset1;
    private org.netbeans.lib.sql.NBCachedRowSet crset2;
    private org.netbeans.lib.sql.NBCachedRowSet crset3;
    private org.netbeans.lib.sql.NBCachedRowSet crset4;
    private org.netbeans.lib.sql.NBCachedRowSet crsetdataccess;
    private org.netbeans.lib.sql.NBCachedRowSet crsetusertables;
    private javax.swing.JLabel endDateLbl;
    private com.afrisoftech.lib.DatePicker endDatePicker;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JList jList11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel newAccPeriods;
    private javax.swing.JPanel operationPanel;
    private javax.swing.JButton registerActivePeriodBtn;
    // End of variables declaration//GEN-END:variables
    
}
