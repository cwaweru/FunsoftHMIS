/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospital;

import com.afrisoftech.lib.UserName;
import java.awt.Color;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author System Partners
 */
public class PatientRefund extends javax.swing.JInternalFrame {

    /**
     * Creates new form PatientRefund
     */
    double test = 0.0;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.lang.String transNo = null, User = null, patient_refund_vouchno = null;
    Date refund_date;
    java.lang.String visitID = null;

    public PatientRefund(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        patientsDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        searchNameTxt = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton52 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        inPatientRbtn = new javax.swing.JRadioButton();
        patientNoChk = new javax.swing.JCheckBox();
        patientNameChk = new javax.swing.JCheckBox();
        OutpatientRbtn = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        patientNumberTxt = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lpodetailstbl = new com.afrisoftech.dbadmin.JTable();
        jLabel7 = new javax.swing.JLabel();
        unUtilizedDepositTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtbill = new javax.swing.JTextField();
        btnToUtilizedac = new javax.swing.JButton();
        utiliseDepositbtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        glAccountCmbx = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        imprestHolderCmbx = new javax.swing.JComboBox();
        imprestNumberTxt = new javax.swing.JTextField();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        accountNotxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        bankTxt = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        order_notxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        supplierTxt = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        jLabel15 = new javax.swing.JLabel();
        supplierTxt1 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lpodetailstbl1 = new com.afrisoftech.dbadmin.JTable();
        LPOTotalTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ReasonSupTxtarea = new javax.swing.JTextArea();
        supTotalTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        patientsDialog.setModal(true);
        patientsDialog.setUndecorated(true);
        patientsDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        searchNameTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchNameTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(searchNameTxt, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientsDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });
        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton52.setText("Dispose");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Patient Refund");
        setToolTipText("");
        setMinimumSize(new java.awt.Dimension(1000, 550));
        setPreferredSize(new java.awt.Dimension(1000, 550));
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Search patient details"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(inPatientRbtn);
        inPatientRbtn.setSelected(true);
        inPatientRbtn.setText(" Inpatient");
        inPatientRbtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        inPatientRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inPatientRbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(inPatientRbtn, gridBagConstraints);

        patientNoChk.setSelected(true);
        patientNoChk.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(patientNoChk, gridBagConstraints);

        patientNameChk.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(patientNameChk, gridBagConstraints);

        buttonGroup1.add(OutpatientRbtn);
        OutpatientRbtn.setText("Outpatient");
        OutpatientRbtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        OutpatientRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutpatientRbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(OutpatientRbtn, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(87, 27));
        jPanel6.setPreferredSize(new java.awt.Dimension(30, 30));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        patientNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(patientNumberTxt, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel6.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel6, gridBagConstraints);

        jLabel1.setText("Search here");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel9.setText(" Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jLabel9, gridBagConstraints);

        patientNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(patientNameTxt, gridBagConstraints);

        buttonGroup1.add(jRadioButton1);
        jPanel3.add(jRadioButton1, new java.awt.GridBagConstraints());

        jButton4.setText("Patient Statement");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel3.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Receipt Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        lpodetailstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Visit Id", "Receipt No", "Description", "Payee", "Debit", "Credit"
            }
        ));
        jScrollPane1.setViewportView(lpodetailstbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jLabel7.setText("Unutilized dep:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel7, gridBagConstraints);

        unUtilizedDepositTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(unUtilizedDepositTxt, gridBagConstraints);

        jLabel10.setText("Patient Bill: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel10, gridBagConstraints);

        txtbill.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(txtbill, gridBagConstraints);

        btnToUtilizedac.setText("Move Amount To Unutilzed Deposits");
        btnToUtilizedac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToUtilizedacActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        jPanel2.add(btnToUtilizedac, gridBagConstraints);

        utiliseDepositbtn.setText("Utilize deposit");
        utiliseDepositbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utiliseDepositbtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel2.add(utiliseDepositbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel5.add(jPanel2, gridBagConstraints);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Save_Print Refund Form");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel4.add(jButton1, gridBagConstraints);

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel4.add(jButton2, gridBagConstraints);

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel4.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel4, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 255), null, null));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        glAccountCmbx.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        glAccountCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '0select' union SELECT distinct UPPER(activity) FROM pb_activity WHERE category_class ilike 'plid' and activity ilike '%deposit%' EXCEPT select main_service from pb_operating_parameters WHERE category = 'CA'  ORDER BY 1  asc"));
        glAccountCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glAccountCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 50);
        jPanel7.add(glAccountCmbx, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 51));
        jLabel8.setText("Revenue Code/Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel7.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Payee details here"));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Petty Cash Holder to pay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Petty Cash Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel4, gridBagConstraints);

        imprestHolderCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-' UNION   SELECT DISTINCT payee FROM ac_petty_cash WHERE voucher_no ilike 's%' group by payee having sum(debit-credit) > 0 order by 1"));
        imprestHolderCmbx.setEnabled(false);
        imprestHolderCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestHolderCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(imprestHolderCmbx, gridBagConstraints);

        imprestNumberTxt.setEditable(false);
        imprestNumberTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(imprestNumberTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel8.add(datePicker2, gridBagConstraints);

        jLabel6.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel8.add(jLabel6, gridBagConstraints);

        jLabel11.setText("Payee Bank/Branch");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel8.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(jTextField3, gridBagConstraints);

        jLabel12.setText("Payee Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel8.add(jLabel12, gridBagConstraints);

        jComboBox1.setEditable(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(jComboBox1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(accountNotxt, gridBagConstraints);

        jLabel18.setText("Payee Bank Acc No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel8.add(jLabel18, gridBagConstraints);

        jLabel19.setText("Payee Id No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel8.add(jLabel19, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(bankTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel8, gridBagConstraints);

        jTabbedPane1.addTab("Patient Refund", jPanel5);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Receipt No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel10.add(jLabel2, gridBagConstraints);

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel41.setLayout(new java.awt.GridBagLayout());

        order_notxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(order_notxt, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jPanel41, gridBagConstraints);

        jLabel13.setText("Patient No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jLabel13, gridBagConstraints);

        supplierTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel10.add(supplierTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel10.add(datePicker1, gridBagConstraints);

        jLabel5.setText("Date From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jLabel5, gridBagConstraints);

        jLabel14.setText("Date To");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jLabel14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel10.add(datePicker3, gridBagConstraints);

        jLabel15.setText(" Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jLabel15, gridBagConstraints);

        supplierTxt1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel10.add(supplierTxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel10, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Receipt Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel11.setLayout(new java.awt.GridBagLayout());

        lpodetailstbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Recept_no", "Item", "Payment Mode", "Acc No", "Transaction Type", "Amt", "Processed By", "Qty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lpodetailstbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lpodetailstbl1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lpodetailstbl1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jScrollPane2, gridBagConstraints);

        LPOTotalTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 3, 200);
        jPanel11.add(LPOTotalTxt, gridBagConstraints);

        jLabel16.setText("Total in the Receipt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(jLabel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel9.add(jPanel11, gridBagConstraints);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter the Reason For Refund", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel12.setLayout(new java.awt.GridBagLayout());

        ReasonSupTxtarea.setColumns(20);
        ReasonSupTxtarea.setRows(5);
        jScrollPane3.setViewportView(ReasonSupTxtarea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jScrollPane3, gridBagConstraints);

        supTotalTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 3, 200);
        jPanel12.add(supTotalTxt, gridBagConstraints);

        jLabel17.setText("Refund Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel12.add(jLabel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel9.add(jPanel12, gridBagConstraints);

        jPanel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jButton5.setText("Process Refund");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel13.add(jButton5, gridBagConstraints);

        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel13.add(jButton6, gridBagConstraints);

        jButton7.setText("Close");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        jPanel13.add(jButton7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel13, gridBagConstraints);

        jTabbedPane1.addTab("Revenue Items", jPanel9);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void searchButtonClicked2() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.order_notxt.getLocationOnScreen();

        jSearchDialog2.setSize(400, 200);

        jSearchDialog2.setLocation(point);

        jSearchDialog2.setVisible(true);



    }
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.patientNumberTxt.getLocationOnScreen();

        patientsDialog.setSize(700, 200);

        patientsDialog.setLocation(point);

        patientsDialog.setVisible(true);

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         if (Double.parseDouble(unUtilizedDepositTxt.getText().replace(",","")) == 0) {
            JOptionPane.showMessageDialog(null, "Cannot utilize 0 amount ", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else if (glAccountCmbx.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Cannot save without revenue code", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else {
        try {
            java.sql.Statement stm1211x = connectDB.createStatement();
                            java.sql.ResultSet rse1211x = stm1211x.executeQuery("SELECT activity,code FROM pb_activity WHERE activity ilike '" + glAccountCmbx.getSelectedItem().toString() + "'");
                            String rnamexs = null, rcodexs = null,accountCode=null,glType=null;
                            while (rse1211x.next()) {
                                rnamexs = rse1211x.getObject(1).toString();
                                rcodexs = rse1211x.getObject(2).toString();
                            }

                            java.sql.Statement pss = connectDB.createStatement();
                            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                            while (rss.next()) {
                                transNo = rss.getObject(1).toString();
                            }

//                           
                            //dr deposit acc
//                            java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
//                            pstmt1q1.setObject(1, rcodexs);
//                            pstmt1q1.setString(2, rnamexs);
//                            pstmt1q1.setString(3, patientNumberTxt.getText());
//                            pstmt1q1.setString(4, patientNameTxt.getText());
//                            pstmt1q1.setObject(6, "");
//                            pstmt1q1.setString(5, "Patient Refund");
//                            pstmt1q1.setString(7, "");
//                            pstmt1q1.setString(8, "CASH");
//                            pstmt1q1.setString(9, "");
//                            pstmt1q1.setString(10, "refund");
//                            pstmt1q1.setString(11, "");
//                            pstmt1q1.setString(12, "-");
//                            pstmt1q1.setString(13, "-");
//                            pstmt1q1.setString(14, "Receipt");
//                            pstmt1q1.setString(15, "Unutilized patient deposit");
//                            pstmt1q1.setDouble(16, Double.valueOf(unUtilizedDepositTxt.getText().replace(",","")));
//                            pstmt1q1.setDouble(17, 0.00);
//                            pstmt1q1.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
//                            pstmt1q1.setString(19, transNo);
//                            pstmt1q1.setBoolean(20, false);
//                            pstmt1q1.setBoolean(21, true);
//                            pstmt1q1.setBoolean(22, false);
//                            pstmt1q1.setString(23, UserName.getLoginName(connectDB));
//                            pstmt1q1.setString(24, "");//cash point
//                            pstmt1q1.setString(25, "");//shift
//                            pstmt1q1.setTimestamp(26, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));
//                            pstmt1q1.executeUpdate();
//                            
                             if (Double.parseDouble(unUtilizedDepositTxt.getText().replace(",", "")) <= 10000) {
                java.sql.Statement ps61 = connectDB.createStatement();
                java.sql.ResultSet rst61 = ps61.executeQuery("select 'PR_PETT'||nextval('patient_refund_seq')");
                while (rst61.next()) {
                    rst61.getObject(1).toString();

                    patient_refund_vouchno = rst61.getObject(1).toString();
                }
            } else if (Double.parseDouble(unUtilizedDepositTxt.getText().replace(",", "")) > 10000) {
                java.sql.Statement ps61 = connectDB.createStatement();
                java.sql.ResultSet rst61 = ps61.executeQuery("select 'PRNO'||nextval('patient_refund_seq')");
                while (rst61.next()) {
                    rst61.getObject(1).toString();

                    patient_refund_vouchno = rst61.getObject(1).toString();
                }
            }
                             java.sql.Statement stm12112x = connectDB.createStatement();
                                //    java.sql.ResultSet rse1211x = stm1211x.executeQuery("SELECT activity,code FROM pb_activity WHERE activity_category ilike 'IDP'");
                                java.sql.ResultSet rse12112x = stm12112x.executeQuery("SELECT activity,code FROM pb_activity WHERE activity ilike '" + glAccountCmbx.getSelectedItem().toString() + "'");
                                while (rse12112x.next()) {
                                    glType = rse12112x.getObject(1).toString();
                                    accountCode = rse12112x.getObject(2).toString();
                                }
                        
           if(java.lang.Double.valueOf(unUtilizedDepositTxt.getText().replace(",",""))>10000){
                                        java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_bills values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?"
                                                + ",?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                                        pstmt1.setString(1, jComboBox1.getSelectedItem().toString().toUpperCase());
                                        pstmt1.setObject(2, glType);
                                        pstmt1.setObject(3,accountCode);
                                        pstmt1.setObject(4, patient_refund_vouchno);
                                        pstmt1.setDate(5, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                                        if(accountNotxt.getText()==null || accountNotxt.getText()=="" || bankTxt.getText()==null || bankTxt.getText()==""){
                                          pstmt1.setObject(6, "Being Payment to " + jComboBox1.getSelectedItem().toString()+ " Id No:" +jTextField3.getText() + "for unutilized deposits of " + patientNameTxt.getText()+"Patient no:" + patientNumberTxt.getText());  
                                        }else{
                                        pstmt1.setObject(6, "Being Payment to " + jComboBox1.getSelectedItem().toString()+ " Id No:" +jTextField3.getText() + "for unutilized deposits of " + patientNameTxt.getText()+"Patient no:" + patientNumberTxt.getText()+"\nBank/Branch - "+ bankTxt.getText()+"\nBank Acc No -"+ accountNotxt.getText());
                                        }
                                        pstmt1.setDate(7,com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()) );
                                        pstmt1.setDouble(8, 0.00);
                                        pstmt1.setDouble(9, java.lang.Double.valueOf(unUtilizedDepositTxt.getText().replace(",","")));
                                        pstmt1.setDate(10, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
                                        pstmt1.setObject(11, patient_refund_vouchno);
                                        pstmt1.setDouble(12, 0.00);
                                        pstmt1.setString(13, patientNumberTxt.getText());
                                        pstmt1.setBoolean(14, false);
                                        pstmt1.setBoolean(15, true);
                                        pstmt1.setObject(16, "");
                                            pstmt1.setBoolean(17, false);
                                                                       pstmt1.setObject(18, null);
                                                                      pstmt1.setObject(19, null);
                                                                      pstmt1.setBoolean(20, false);
                                                                      pstmt1.setString(21, "");
                                                                       pstmt1.setObject(22, null);
                                                                      pstmt1.setObject(23, true);
                                                                       pstmt1.setObject(24, null);
                                                                      pstmt1.setObject(25, null);
                                                                       pstmt1.setObject(26, true);
                                                                      pstmt1.setObject(27, null);
                                                                       pstmt1.setObject(28, null);
                                        
                                        
                                        pstmt1.executeUpdate();
                                        
                                        
            }else{
            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into ac_petty_cash_requisition values(?, ?, ?, ?,?, ?, ?::date, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");//, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
            pstmt1.setString(1, imprestHolderCmbx.getSelectedItem().toString().toUpperCase());
            pstmt1.setObject(2, jComboBox1.getSelectedItem().toString().toUpperCase());
            pstmt1.setObject(3, jTextField3.getText());
            pstmt1.setObject(4, imprestNumberTxt.getText());
            pstmt1.setDouble(5, 0.00);
            pstmt1.setDouble(6, java.lang.Double.valueOf(unUtilizedDepositTxt.getText().replace(",","")));
            pstmt1.setDate(7, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
            pstmt1.setObject(8, "PENDING");
            pstmt1.setString(9, com.afrisoftech.lib.UserName.getLoginName(connectDB));
            pstmt1.setBoolean(10, false);
            pstmt1.setObject(11, patient_refund_vouchno);
            pstmt1.setBoolean(12, false);
            pstmt1.setString(13, accountCode);
            pstmt1.setObject(14, "Being Payment to " + jComboBox1.getSelectedItem().toString()+ " Id No:" +jTextField3.getText() + "for unutilized deposits of " + patientNameTxt.getText()+"Patient no:" + patientNumberTxt.getText());
            pstmt1.setDouble(15, 1);
            pstmt1.setString(16, patientNumberTxt.getText());
            pstmt1.setObject(17, patient_refund_vouchno);
            pstmt1.setObject(18, false);
            pstmt1.setObject(19, false);
            pstmt1.setObject(20, false);
            pstmt1.setObject(21, "UNUTILIZED DEPOSIT");
            pstmt1.setDate(22, com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker2.getDate()));
            pstmt1.setObject(23, false);
            pstmt1.executeUpdate();
            
        }   
           java.sql.PreparedStatement pstmt7 = connectDB.prepareStatement("insert into ac_dashboard values(?,?,now(),current_user,now(),current_user,?)");
                                                pstmt7.setString(1, jComboBox1.getSelectedItem().toString());
                                                pstmt7.setObject(2,  patient_refund_vouchno);
                                                pstmt7.setObject(3,  patient_refund_vouchno);
                                                pstmt7.executeUpdate();
 java.sql.PreparedStatement pstmtss = connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers(voucher_no, payee, payee_address, particulars, order_no, invoice,invoice_amt, invoice_total_amt, accounts_code, allocation, total_commitments, balance1, this_entry, balance2, date, prepared_by,witholding_amount,retention_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now()::date,?,?,?)");
            //java.sql.PreparedStatement pstmtss= connectDB.prepareStatement("INSERT INTO ac_reprinting_vouchers VALUES (?, ?, ?, ?, ?, ?, ?, ?,current_user, ?, ?, ?, ?, ?, ?, now()::date)");         
            pstmtss.setObject(1, patient_refund_vouchno);
            pstmtss.setObject(2, jComboBox1.getSelectedItem().toString());
            pstmtss.setObject(3, "-");
            pstmtss.setObject(4, "Being Payment to " + jComboBox1.getSelectedItem().toString()
                    + " Id No:" +jTextField3.getText() + " \n for unutilized deposits of\n" + patientNameTxt.getText() + ""
                    + "\n Patient no:" + patientNumberTxt.getText());
            pstmtss.setObject(5, "");
            pstmtss.setObject(6, "");
            pstmtss.setDouble(7, Double.parseDouble(unUtilizedDepositTxt.getText().replace(",", "")));
            pstmtss.setDouble(8, Double.parseDouble(unUtilizedDepositTxt.getText().replace(",", "")));
            pstmtss.setObject(9, "-");
            pstmtss.setDouble(10, 0);
            pstmtss.setDouble(11, 0);
            pstmtss.setDouble(12, 0);
            pstmtss.setDouble(13, Double.parseDouble(unUtilizedDepositTxt.getText().replace(",", "")));
            pstmtss.setDouble(14, 0);
            pstmtss.setObject(15, com.afrisoftech.lib.UserName.getLoginName(connectDB));
            pstmtss.setDouble(16, 0.0);
            pstmtss.setDouble(17, 0.0);

            pstmtss.executeUpdate();

                            
            
            JOptionPane.showMessageDialog(null, "Patient Refund Processed  SUCCESSFULY", "CONFIRMATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
             com.afrisoftech.reports.PatientRefundpdfs policy = new com.afrisoftech.reports.PatientRefundpdfs();
              policy.PatientRefundpdfs(connectDB, patient_refund_vouchno);
           jButton2.doClick();
        } catch (Exception ex) {
            ex.printStackTrace();
            ex.getMessage();
        }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < lpodetailstbl.getRowCount(); k++) {
            for (int r = 0; r < lpodetailstbl.getColumnCount(); r++) {
                lpodetailstbl.getModel().setValueAt(null, k, r);
            }
        }

       txtbill.setText("0.00");
        unUtilizedDepositTxt.setText("0.00");
        patientNumberTxt.setText("");
        patientNameTxt.setText("");


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
public double roundDownToMultiple(double number, double multiple) {
    return number - (number % multiple);
} 
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        com.afrisoftech.lib.HosPatientDatePanel dates = new com.afrisoftech.lib.HosPatientDatePanel(null, pConnDB, true, 10, connectDB);
        dates.setVisible(true);
        
//    double result = Double.parseDouble(jTextField3.getText());
//    BigDecimal result2 = new BigDecimal(result).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//    double twoDecimalPoints= Double.parseDouble(String.valueOf(result2).substring(String.valueOf(result2).indexOf(".")+1, String.valueOf(result2).length()));
//   //double x=Math.round(twoDecimalPoints / 5) * 5;
//     double x = Math.round(twoDecimalPoints);
//     x = x - (x % 5); 
//    
//    String fin=String.valueOf(result2).substring(0,String.valueOf(result2).indexOf("."))+".";
//    fin=fin.concat(String.valueOf(x).substring(0,String.valueOf(x).indexOf(".")));
//   
//    System.out.println(fin);

        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButtonClicked();
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void OutpatientRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutpatientRbtnActionPerformed
//        patientNoChk.setEnabled(false);
//        patientNameChk.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_OutpatientRbtnActionPerformed

    private void inPatientRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inPatientRbtnActionPerformed

//        patientNoChk.setEnabled(false);
//        patientNameChk.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_inPatientRbtnActionPerformed

    private void searchNameTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchNameTxtCaretUpdate
        if (searchNameTxt.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {
            if (inPatientRbtn.isSelected()) {

                if (this.patientNameChk.isSelected()) {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT patient_no, name, unit_number from all_inpatient_list where name ILIKE '" + searchNameTxt.getText() + "%' or unit_number ILIKE '" + searchNameTxt.getText() + "%' "
                            + "union SELECT annual_no as patient_no, patient_name as name, tag_no from hp_mortuary where annual_no ilike '%" + searchNameTxt.getText() + "%' or patient_name ilike '%" + searchNameTxt.getText() + "%' or tag_no ilike '%" + searchNameTxt.getText() + "%'  order by name"));

                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);

                } else {

                    if (this.patientNoChk.isSelected()) {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(
                                connectDB, "SELECT patient_no, name, unit_number from all_inpatient_list where patient_no ILIKE '" + searchNameTxt.getText() + "%' or unit_number ILIKE '" + searchNameTxt.getText() + "%' "
                                + "union SELECT annual_no as patient_no, patient_name as name, tag_no from hp_mortuary where annual_no ilike '%" + searchNameTxt.getText() + "%' or patient_name ilike '%" + searchNameTxt.getText() + "%' or tag_no ilike '%" + searchNameTxt.getText() + "%'  order by patient_no"));

                        jSearchTable.setShowHorizontalLines(false);
                        jSearchScrollPane.setViewportView(jSearchTable);

                    }
                }
            } else if (OutpatientRbtn.isSelected()) {
                if (this.patientNameChk.isSelected()) {
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT distinct patient_no, name, unit_number from patient_select where name ILIKE '%" + searchNameTxt.getText() + "%' or unit_number ILIKE '" + searchNameTxt.getText() + "%'   order by 2"));
                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);

                } else {
                    if (this.patientNoChk.isSelected()) {
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "SELECT distinct patient_no, name, unit_number from patient_select where patient_no ILIKE '%" + searchNameTxt.getText() + "%'  or unit_number ILIKE '" + searchNameTxt.getText() + "%'   order by 1"));
                        jSearchTable.setShowHorizontalLines(false);
                        jSearchScrollPane.setViewportView(jSearchTable);

                    }
                }
            } else {
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectorsCaret(connectDB, "select account_no,(scheme_name) as scheme, payer_name from ac_schemes where scheme_name ILIKE '" + searchNameTxt.getText().toString() + "%' or account_no ILIKE '" + searchNameTxt.getText().toString() + "%'"));
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
            }
        }

        // Add your handling code here:
    }//GEN-LAST:event_searchNameTxtCaretUpdate

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked

        System.out.println("Starting To Process Patient Data...");
        patientNumberTxt.setText("");
        this.patientsDialog.dispose();

        patientNumberTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        patientNameTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        System.out.println("\nQuerying required data about: [Number: " + patientNumberTxt.getText() + "] [Name: " + patientNameTxt.getText() + "]");
        populate();
        // patientsDialog.dispose();         
// Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    private void populate() {
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        imprestNumberTxt.setText("");
        imprestHolderCmbx.setSelectedIndex(0);
        boolean test2 = false;
        double r=0.0;
        try {

            java.sql.Statement ps9 = connectDB.createStatement();
            java.sql.ResultSet rst9 = ps9.executeQuery("select check_out from hp_admission where patient_no='" + patientNumberTxt.getText() + "'");
            while (rst9.next()) {
                if (test2 == false) {
                    test2 = rst9.getBoolean(1);
                }
            }
            System.out.println("checked out " + test2);
        } catch (Exception t) {
            t.printStackTrace();
        }

        if (test2 == false) {
            JOptionPane.showMessageDialog(null, "PATIENT NO:" + patientNumberTxt.getText() + " HAS NOT BEEN RELEASED ", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else {
            jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT payee FROM ac_ledger WHERE patient_no = '" + patientNumberTxt.getText() + "' and transaction_type ilike 'Unutilized patient deposit' and credit>0 order by 1 asc"));
            try {
                java.sql.Statement ps71 = connectDB.createStatement();
                java.sql.ResultSet rst71 = ps71.executeQuery("select sum(debit-credit) from hp_patient_card where patient_no='" + patientNumberTxt.getText() + "'");
                while (rst71.next()) {
                    if (rst71.getDouble(1) <= 0) {
                        utiliseDepositbtn.setEnabled(false);
                        btnToUtilizedac.setEnabled(true);
                    } else if (rst71.getDouble(1) >= 0) {
                        btnToUtilizedac.setEnabled(false);
                        utiliseDepositbtn.setEnabled(true);
                    }
                    txtbill.setText(String.valueOf(rst71.getDouble(1)));
                }

                java.sql.Statement stm1211x = connectDB.createStatement();
                java.sql.ResultSet rse1211x = stm1211x.executeQuery("SELECT date,reason as description,CASE WHEN receipt_no IS NULL THEN '-' ELSE receipt_no END as receipt_no,description as account,CASE WHEN payee IS NULL THEN '-' ELSE payee END as payee,debit,credit FROM ac_ledger WHERE patient_no = '" + patientNumberTxt.getText() + "' and transaction_type ilike 'Unutilized patient deposit' order by transaction_time asc");
                int i = 0;
                while (rse1211x.next()) {
                    System.out.println("here we are");
                    lpodetailstbl.setValueAt(rse1211x.getObject(1).toString(), i, 0);
                    lpodetailstbl.setValueAt(rse1211x.getObject(2).toString(), i, 1);
                    lpodetailstbl.setValueAt(rse1211x.getObject(3).toString(), i, 2);
                    lpodetailstbl.setValueAt(rse1211x.getObject(4).toString(), i, 3);
                    lpodetailstbl.setValueAt(rse1211x.getObject(5).toString(), i, 4);
                    lpodetailstbl.setValueAt(rse1211x.getObject(6).toString(), i, 5);
                    lpodetailstbl.setValueAt(rse1211x.getObject(7).toString(), i, 6);
                    i++;
                }
            } catch (Exception t) {
                t.printStackTrace();
            }
           r = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(lpodetailstbl, 6) - com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(lpodetailstbl, 5);
            unUtilizedDepositTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(r));
        }
        if(r<=10000.00){
            imprestHolderCmbx.setEnabled(true);
        }else{
            imprestHolderCmbx.setEnabled(false);
        }
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.patientsDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void glAccountCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glAccountCmbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_glAccountCmbxActionPerformed

    private void btnToUtilizedacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToUtilizedacActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (Double.parseDouble(txtbill.getText().replace(",","")) == 0) {
            JOptionPane.showMessageDialog(null, "Cannot transfer 0 amount ", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else if (glAccountCmbx.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Cannot save without revenue code", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int utilizeDeposit = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure to transfer to deposit?", "Confirmation", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);
            String transNo = null;
            String actCode = null;
            String actNames = null;
            if (utilizeDeposit == javax.swing.JOptionPane.YES_OPTION) {
                java.util.Date periodFrom = null;
                java.util.Date periodTo = null;

                java.sql.Savepoint registerSavePoint = null;
                try {
                    connectDB.setAutoCommit(false);
                    registerSavePoint = connectDB.setSavepoint("registration");

                
                        java.sql.Statement stm1211x = connectDB.createStatement();
                        java.sql.ResultSet rse1211x = stm1211x.executeQuery("SELECT activity,code FROM pb_activity WHERE activity ilike '" + glAccountCmbx.getSelectedItem().toString() + "'");
                        String rnamexs = null, rcodexs = null;
                        while (rse1211x.next()) {
                            rnamexs = rse1211x.getObject(1).toString();
                            rcodexs = rse1211x.getObject(2).toString();
                        }

                        java.sql.Statement pss = connectDB.createStatement();
                        java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                        while (rss.next()) {
                            transNo = rss.getObject(1).toString();
                        }

                        java.sql.Statement pss12 = connectDB.createStatement();
                        java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                        while (rsts11.next()) {
                            actCode = rsts11.getObject(1).toString();
                            actNames = rsts11.getObject(2).toString();
                        }
                        //dr deposit acc 
                        java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                        pstmt1q1.setObject(1, rcodexs);
                        pstmt1q1.setString(2, rnamexs);
                        pstmt1q1.setString(3, patientNumberTxt.getText());
                        pstmt1q1.setString(4, patientNameTxt.getText());
                        pstmt1q1.setObject(6, "");
                        pstmt1q1.setString(5, "Patient deposit");
                        pstmt1q1.setString(7, patientNameTxt.getText());
                        pstmt1q1.setString(8, "");
                        pstmt1q1.setString(9, "");
                        pstmt1q1.setString(10, "Refund transfer");
                        pstmt1q1.setString(11, "");
                        pstmt1q1.setString(12, "-");
                        pstmt1q1.setString(13, "-");
                        pstmt1q1.setString(14, "Receipt");
                        pstmt1q1.setString(15, "Unutilized patient deposit");
                        pstmt1q1.setDouble(17, 0 - Double.valueOf(txtbill.getText().replace(",","")));
                        pstmt1q1.setDouble(16, 0.00);

                        pstmt1q1.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                        pstmt1q1.setString(19, transNo);
                        pstmt1q1.setBoolean(20, false);
                        pstmt1q1.setBoolean(21, true);
                        pstmt1q1.setBoolean(22, false);
                        pstmt1q1.setString(23, UserName.getLoginName(connectDB));
                        pstmt1q1.setString(24, "");//cash point
                        pstmt1q1.setString(25, "");//shift
                        pstmt1q1.setTimestamp(26, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));
                        pstmt1q1.executeUpdate();

                        //cr bill pt card
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                        pstmt.setString(1, patientNumberTxt.getText());
                        pstmt.setObject(2, "Receipt");
                        pstmt.setString(3, "");
                        pstmt.setString(4, "");
                        pstmt.setString(5, transNo);
                        pstmt.setString(7, patientNameTxt.getText());
                        pstmt.setString(6, "");
                        pstmt.setString(8, "");
                        pstmt.setString(9, patientNameTxt.getText());
                        pstmt.setDate(10, null);
                        pstmt.setString(11, "");
                        pstmt.setDouble(12, 0 - Double.valueOf(txtbill.getText().replace(",","")));
                        pstmt.setDouble(13, 0.00);
                        pstmt.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                        pstmt.setObject(15, actCode);
                        pstmt.setString(16, "INVOICE - " + patientNameTxt.getText());
                        pstmt.setDouble(17, 1.00);
                        pstmt.setObject(18, patientNumberTxt.getText());
                        pstmt.setBoolean(19, true);
                        pstmt.setString(20, "Receipts");
                        pstmt.setBoolean(21, true);
                        pstmt.setString(22, actNames);
                        pstmt.setString(23, "-");
                        pstmt.setString(24, UserName.getLoginName(connectDB));
                        pstmt.setString(25, transNo);
                        pstmt.setString(26, "IP");
                        pstmt.setTimestamp(27, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                        pstmt.setString(28, "-");
                        pstmt.executeUpdate();

                    connectDB.commit();
                    JOptionPane.showMessageDialog(this, patientNameTxt.getText() + "'s Amount moved succesfully");
                    populate();
                    connectDB.setAutoCommit(true);

                } catch (SQLException sq) {
                    sq.printStackTrace();
                    try {
                        connectDB.rollback(registerSavePoint);
                    } catch (java.sql.SQLException sql) {
                        javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                    System.out.println(sq.getMessage());
                    javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                }

            }
        }
    }//GEN-LAST:event_btnToUtilizedacActionPerformed

    private void utiliseDepositbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utiliseDepositbtnActionPerformed
        // TODO add your handling code here:
        if (Double.parseDouble(unUtilizedDepositTxt.getText().replace(",","")) == 0) {
            JOptionPane.showMessageDialog(null, "Cannot utilize 0 amount ", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else if (glAccountCmbx.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Cannot save without revenue code", "REFUND MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        } else {

            if (Double.valueOf(unUtilizedDepositTxt.getText().replace(",","")) > 0) {
                int utilizeDeposit = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure to utilize patient deposit?", "Confirmation to utilize deposit", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);
                String transNo = null;
                String actCode = null;
                String actNames = null;
                if (utilizeDeposit == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Date periodFrom = null;
                    java.util.Date periodTo = null;

                    java.sql.Savepoint registerSavePoint = null;
                    try {
                        connectDB.setAutoCommit(false);
                        registerSavePoint = connectDB.setSavepoint("registration");

                  

                            java.sql.Statement stm1211x = connectDB.createStatement();
                            java.sql.ResultSet rse1211x = stm1211x.executeQuery("SELECT activity,code FROM pb_activity WHERE activity ilike '" + glAccountCmbx.getSelectedItem().toString() + "'");
                            String rnamexs = null, rcodexs = null;
                            while (rse1211x.next()) {
                                rnamexs = rse1211x.getObject(1).toString();
                                rcodexs = rse1211x.getObject(2).toString();
                            }

                            java.sql.Statement pss = connectDB.createStatement();
                            java.sql.ResultSet rss = pss.executeQuery("select nextval('transaction_no_seq')");
                            while (rss.next()) {
                                transNo = rss.getObject(1).toString();
                            }

                            java.sql.Statement pss12 = connectDB.createStatement();
                            java.sql.ResultSet rsts11 = pss12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                            while (rsts11.next()) {
                                actCode = rsts11.getObject(1).toString();
                                actNames = rsts11.getObject(2).toString();
                            }
                            //dr deposit acc
                            java.sql.PreparedStatement pstmt1q1 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?)");
                            pstmt1q1.setObject(1, rcodexs);
                            pstmt1q1.setString(2, rnamexs);
                            pstmt1q1.setString(3, patientNumberTxt.getText());
                            pstmt1q1.setString(4, patientNameTxt.getText());
                            pstmt1q1.setObject(6, "");
                            pstmt1q1.setString(5, "Patient deposit");
                            pstmt1q1.setString(7, "");
                            pstmt1q1.setString(8, "CASH");
                            pstmt1q1.setString(9, "");
                            pstmt1q1.setString(10, "refund");
                            pstmt1q1.setString(11, "");
                            pstmt1q1.setString(12, "-");
                            pstmt1q1.setString(13, "-");
                            pstmt1q1.setString(14, "Receipt");
                            pstmt1q1.setString(15, "Unutilized patient deposit");
                            if (Double.parseDouble(unUtilizedDepositTxt.getText().replace(",","")) >= Double.parseDouble(txtbill.getText().replace(",",""))) {
                                pstmt1q1.setDouble(16, Double.valueOf(txtbill.getText().replace(",","")));
                            } else {
                                pstmt1q1.setDouble(16, Double.valueOf(unUtilizedDepositTxt.getText().replace(",","")));
                            }

                            pstmt1q1.setDouble(17, 0.00);

                            pstmt1q1.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            pstmt1q1.setString(19, transNo);
                            pstmt1q1.setBoolean(20, false);
                            pstmt1q1.setBoolean(21, true);
                            pstmt1q1.setBoolean(22, false);
                            pstmt1q1.setString(23, UserName.getLoginName(connectDB));
                            pstmt1q1.setString(24, "");//cash point
                            pstmt1q1.setString(25, "");//shift
                            pstmt1q1.setTimestamp(26, com.afrisoftech.lib.ServerTime.getSQLTimeStamp(connectDB));
                            pstmt1q1.executeUpdate();

                            //cr bill pt card
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                            pstmt.setString(1, patientNumberTxt.getText());
                            pstmt.setObject(2, "Receipt");
                            pstmt.setString(3, "");
                            pstmt.setString(4, "Scheme");
                            pstmt.setString(5, transNo);
                            pstmt.setString(7, patientNameTxt.getText());
                            pstmt.setString(6, "");
                            pstmt.setString(8, "");
                            pstmt.setString(9, patientNameTxt.getText());
                            pstmt.setDate(10, null);
                            pstmt.setString(11, "");
                            if (Double.parseDouble(unUtilizedDepositTxt.getText().replace(",","")) >= Double.parseDouble(txtbill.getText().replace(",",""))) {
                                pstmt.setDouble(13, Double.valueOf(txtbill.getText().replace(",","")));
                            } else {
                                pstmt.setDouble(13, Double.valueOf(unUtilizedDepositTxt.getText().replace(",","")));
                            }
                            pstmt.setDouble(12, 0.00);
                            pstmt.setDate(14, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            pstmt.setObject(15, actCode);
                            pstmt.setString(16, "INVOICE - " + patientNameTxt.getText());
                            pstmt.setDouble(17, 1.00);
                            pstmt.setObject(18, patientNumberTxt.getText());
                            pstmt.setBoolean(19, true);
                            pstmt.setString(20, "Receipts");
                            pstmt.setBoolean(21, true);
                            pstmt.setString(22, actNames);
                            pstmt.setString(23, "");
                            pstmt.setString(24, UserName.getLoginName(connectDB));
                            pstmt.setString(25, transNo);
                            pstmt.setString(26, "IP");
                            pstmt.setTimestamp(27, new java.sql.Timestamp(java.util.Calendar.getInstance().getTimeInMillis()));
                            pstmt.setString(28, "");
                            pstmt.executeUpdate();

                     
                        connectDB.commit();
                        JOptionPane.showMessageDialog(this, patientNameTxt.getText() + "'s deposit utilized succesfully");
                        populate();
                        connectDB.setAutoCommit(true);

                    } catch (SQLException sq) {
                        sq.printStackTrace();
                        try {
                            connectDB.rollback(registerSavePoint);
                        } catch (java.sql.SQLException sql) {
                            javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                        }
                        System.out.println(sq.getMessage());
                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "Patient deposit is less than the bill to be cleared", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_utiliseDepositbtnActionPerformed

    private void imprestHolderCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestHolderCmbxActionPerformed
        // TODO add your handling code here:
        try {

            java.sql.Statement pstmt = connectDB.createStatement();
            java.sql.ResultSet rst = pstmt.executeQuery("select DISTINCT voucher_no,sum(debit-credit) from ac_petty_cash where payee ilike '" + imprestHolderCmbx.getSelectedItem().toString() + "' and  voucher_no ilike 's%' group by voucher_no having sum(debit-credit) > 0");
            while (rst.next()) {
                imprestNumberTxt.setText(rst.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            System.out.println(sqlex.getMessage());
        }
    }//GEN-LAST:event_imprestHolderCmbxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();         // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if (jTextField113.getCaretPosition() <3) {
            System.out.println("Nothing");
        } else {
            jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT distinct receipt_no,patient_no,dealer from ac_cash_collection WHERE date between '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate())+"' and '"+com.afrisoftech.lib.SQLDateFormat.getSQLDate(datePicker1.getDate())+"' and  (patient_no ILIKE '" + jTextField113.getText() + "%' OR receipt_no ILIKE '" + jTextField113.getText() + "%')  order by 1"));

            jSearchTable2.setShowHorizontalLines(false);
            jSearchScrollPane2.setViewportView(jSearchTable2);

        }      // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate

    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        String patient_no=null;
        ReasonSupTxtarea.setText("");
        LPOTotalTxt.setText("");
        supTotalTxt.setText("");
        patient_no=jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(),1).toString();
        
         supplierTxt1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        supplierTxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        order_notxt.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        
        lpodetailstbl1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select description,  quantity, debit as amount,payment_mode,user_name as Processed_By, false as tick,activity_code from ac_cash_collection where receipt_no='"+jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString()+"' "));
         LPOTotalTxt.setForeground(Color.red);
         LPOTotalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(lpodetailstbl1,2)));
        
           jSearchDialog2.dispose();
    }//GEN-LAST:event_jSearchTable2MouseClicked

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();          // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

       
            if(supTotalTxt.getText().length()>0){

                if(ReasonSupTxtarea.getText().length()>0){
                        if(Double.parseDouble(supTotalTxt.getText().toString().replace(",",""))<=Double.parseDouble(LPOTotalTxt.getText().toString().replace(",",""))){
                            try{

                                connectDB.setAutoCommit(false);

                                Boolean check_insert_status=false;

                                java.sql.Statement ps7 = connectDB.createStatement();
                                java.sql.ResultSet rst7 = ps7.executeQuery("select nextval('transaction_no_seq')");
                                while (rst7.next()) {
                                    rst7.getObject(1).toString();

                                    transNo = rst7.getObject(1).toString();
                                }

                               

                                java.sql.Statement pss1 = connectDB.createStatement();
                                java.sql.ResultSet rsts1 = pss1.executeQuery("select current_user,current_date::date");
                                while (rsts1.next()) {
                                    User = rsts1.getObject(1).toString();
                                    refund_date=rsts1.getDate(2);
                                }
                             
                                String glAcc=null,mdepartment=null,activity=null;  
                                for(int i=0;i<lpodetailstbl1.getRowCount();i++){
                                    if(Boolean.valueOf(lpodetailstbl1.getValueAt(i, 5).toString())==true){
                                        java.sql.PreparedStatement pstmt212 = null;
                                        pstmt212 = connectDB.prepareStatement("INSERT INTO ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt212.setObject(1, lpodetailstbl1.getValueAt(i, 6).toString());
                                        java.sql.ResultSet rse1211 = null;
                                        java.sql.Statement stm1211 = connectDB.createStatement();
                                         rse1211 = stm1211.executeQuery("select activity,code,department from pb_activity where code ='" + lpodetailstbl1.getModel().getValueAt(i, 6).toString() + "'");
                                            while (rse1211.next()) {

                                                glAcc = rse1211.getObject(1).toString();
                                                if(rse1211.getObject(3) != null){
                                                    mdepartment = rse1211.getObject(3).toString();
                                                } else {
                                                    mdepartment = "-";
                                                }
                                            }
                                        pstmt212.setString(2, glAcc);
                                        pstmt212.setString(3, supplierTxt.getText());
                                        pstmt212.setString(4, supplierTxt1.getText());
                                        pstmt212.setString(5, ReasonSupTxtarea.getText());
                                        pstmt212.setString(6, "");
                                        pstmt212.setString(7, "");
                                        pstmt212.setString(8, "OP");
                                        pstmt212.setString(9, "");
                                        pstmt212.setString(10, "");
                                        pstmt212.setString(11, "");
                                        pstmt212.setString(12, order_notxt.getText());
                                        pstmt212.setString(13, "");
                                        pstmt212.setString(14, "Receipt Refund");
                                        pstmt212.setString(15, "Revenue");
                                        pstmt212.setDouble(17, 0.00);
                                        pstmt212.setDouble(16, java.lang.Double.valueOf(lpodetailstbl1.getValueAt(i, 2).toString()));
                                        pstmt212.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(refund_date));
                                        pstmt212.setString(19, transNo);
                                        pstmt212.setBoolean(20, false);
                                        pstmt212.setBoolean(21, false);
                                        pstmt212.setBoolean(22, false);
                                        pstmt212.setString(23, User);
                                        pstmt212.setString(24, "");
                                        pstmt212.setString(25, "");
                                        pstmt212.executeUpdate();
                                        pstmt212.close();
                         
                                        
                                        java.sql.PreparedStatement pstmt2123 = null;
                                        pstmt2123 = connectDB.prepareStatement("INSERT INTO ac_ledger values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        
                                        java.sql.ResultSet rse121 = null;
                                        java.sql.Statement stm121 = connectDB.createStatement();
                                         rse121 = stm121.executeQuery("select activity,code from pb_activity where department ='AOT' and category_class='Plid' AND activity ilike '%Un-utilised Patients Deposits%'");
                                            while (rse121.next()) {

                                                glAcc = rse121.getObject(1).toString();
                                                activity= rse121.getObject(2).toString();
                                                
                                            }
                                        pstmt2123.setObject(1, activity);    
                                        pstmt2123.setString(2, glAcc);
                                        pstmt2123.setString(3, supplierTxt.getText());
                                        pstmt2123.setString(4, supplierTxt1.getText());
                                        pstmt2123.setString(5, "patient refund from revenue receipt no: "+order_notxt.getText());
                                        pstmt2123.setString(6, "");
                                        pstmt2123.setString(7, supplierTxt1.getText());
                                        pstmt2123.setString(8, "");
                                        pstmt2123.setString(9, "");
                                        pstmt2123.setString(10, "");
                                        pstmt2123.setString(11, "");
                                        pstmt2123.setString(12, order_notxt.getText());
                                        pstmt2123.setString(13, "");
                                        pstmt2123.setString(14, "Receipt Refund");
                                        pstmt2123.setString(15, "Unutilized patient deposit");
                                        pstmt2123.setDouble(16, 0.00);
                                        pstmt2123.setDouble(17, java.lang.Double.valueOf(lpodetailstbl1.getValueAt(i, 2).toString()));
                                        pstmt2123.setDate(18,com.afrisoftech.lib.SQLDateFormat.getSQLDate(refund_date));
                                        pstmt2123.setString(19, transNo);
                                        pstmt2123.setBoolean(20, false);
                                        pstmt2123.setBoolean(21, false);
                                        pstmt2123.setBoolean(22, false);
                                        pstmt2123.setString(23, User);
                                        pstmt2123.setString(24, "");
                                        pstmt2123.setString(25, "");
                                        pstmt2123.executeUpdate();
                                        pstmt2123.close();
                         
                                      

                                        check_insert_status=true;

                                    
                                   }
                                }
                                if(check_insert_status==true){
                                    connectDB.setAutoCommit(false);
                                    connectDB.commit();
                                    connectDB.setAutoCommit(true);
                                    jButton6.doClick();
                                    
                                    JOptionPane.showMessageDialog(null,"Patient Refund Saved Successfully","CONFIRMATION MESSAGE",JOptionPane.INFORMATION_MESSAGE);

                                }
                                else{
                                    connectDB.setAutoCommit(false);
                                    connectDB.rollback();
                                    connectDB.setAutoCommit(true);
                                    jButton6.doClick();
                                    JOptionPane.showMessageDialog(null,"CHECK YOUR ENTRIES","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
                                }

                            }
                            catch(Exception esd){
                                esd.printStackTrace();
                                esd.getMessage();

                            }
                        }

                        else{
                            JOptionPane.showMessageDialog(null,"The Patient Refund Amt  Cannot exceed the amount in the Receipt","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
                            supTotalTxt.setText(null);
                        }
                    

                }
                else{
                    JOptionPane.showMessageDialog(null,"You need to fill the Reason For Generating a Patient Refund","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

                }

            }
            else{
                JOptionPane.showMessageDialog(null,"You need to fill the amount in the Patient Refund","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

            }

       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < lpodetailstbl1.getRowCount(); k++) {
            for (int r = 0; r < lpodetailstbl1.getColumnCount(); r++) {
                lpodetailstbl1.getModel().setValueAt(null, k, r);
            }
        }
        ReasonSupTxtarea.setText("");
        LPOTotalTxt.setText("");
        supTotalTxt.setText("");

        order_notxt.setText("");
        supplierTxt.setText("");
        supplierTxt1.setText("");

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void lpodetailstbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lpodetailstbl1MouseClicked
        // TODO add your handling code here:
        double total=0.0;
        System.out.println(lpodetailstbl1.getSelectedColumn());
            if( lpodetailstbl1.getSelectedColumn()==-1){
                for(int i=0; i<lpodetailstbl1.getRowCount(); i++){
                    System.out.println("hapa.."+i);
                    if(Boolean.parseBoolean(lpodetailstbl1.getValueAt(i, 5).toString())==true){
                        System.out.println("here..");
                        total=total+Double.parseDouble(lpodetailstbl1.getValueAt(i, 2).toString().replace(",",""));
                    }
                        
                 }    
            }
            supTotalTxt.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(total));
    }//GEN-LAST:event_lpodetailstbl1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LPOTotalTxt;
    private javax.swing.JRadioButton OutpatientRbtn;
    private javax.swing.JTextArea ReasonSupTxtarea;
    private javax.swing.JTextField accountNotxt;
    private javax.swing.JTextField bankTxt;
    private javax.swing.JButton btnToUtilizedac;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private javax.swing.JComboBox glAccountCmbx;
    private javax.swing.JComboBox imprestHolderCmbx;
    private javax.swing.JTextField imprestNumberTxt;
    private javax.swing.JRadioButton inPatientRbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable lpodetailstbl;
    private javax.swing.JTable lpodetailstbl1;
    private javax.swing.JTextField order_notxt;
    private javax.swing.JCheckBox patientNameChk;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JCheckBox patientNoChk;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JDialog patientsDialog;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField searchNameTxt;
    private javax.swing.JTextField supTotalTxt;
    private javax.swing.JTextField supplierTxt;
    private javax.swing.JTextField supplierTxt1;
    private javax.swing.JTextField txtbill;
    private javax.swing.JTextField unUtilizedDepositTxt;
    private javax.swing.JButton utiliseDepositbtn;
    // End of variables declaration//GEN-END:variables
}
