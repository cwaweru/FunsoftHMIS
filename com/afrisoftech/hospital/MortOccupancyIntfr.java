/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospital;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowSorter;

/**
 *
 * @author funsoft
 */
public class MortOccupancyIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form WardOccupancyIntfr
     */
    java.sql.Connection connectDB = null;

    public MortOccupancyIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();
        com.afrisoftech.dbadmin.JTable predicateTable = (com.afrisoftech.dbadmin.JTable) occupationTable;
        predicateTable.setHighlighterPipeline(predicateTable, new org.jdesktop.swing.decorator.PatternHighlighter[]{
            new org.jdesktop.swing.decorator.PatternHighlighter(java.awt.Color.YELLOW, java.awt.Color.BLACK, "LONG_STAY", 3, 7),
            new org.jdesktop.swing.decorator.PatternHighlighter(java.awt.Color.GREEN, java.awt.Color.BLACK, "NORMAL_STAY", 3, 7),
            new org.jdesktop.swing.decorator.PatternHighlighter(java.awt.Color.CYAN, java.awt.Color.BLACK, "0", 3, 8, 8),
            new org.jdesktop.swing.decorator.PatternHighlighter(java.awt.Color.MAGENTA, java.awt.Color.BLACK, ".>0.00", 3, 8, 8)
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        occupancyPanel = new javax.swing.JPanel();
        occupationsPanel = new javax.swing.JPanel();
        occupationJScrl = new javax.swing.JScrollPane();
        occupationTable = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        occupationButtonPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        totalsLabel = new javax.swing.JLabel();
        occupationsHeaderTable = new javax.swing.JPanel();
        facilityNameCmbx = new javax.swing.JComboBox();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lengthofStayCmbx = new javax.swing.JComboBox();
        dischagesPanel = new javax.swing.JPanel();
        occupationsPanel1 = new javax.swing.JPanel();
        occupationJScrl1 = new javax.swing.JScrollPane();
        dischargesTable = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        occupationButtonPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        totalsLabel1 = new javax.swing.JLabel();
        occupationsHeaderTable1 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        dischargesBeginDatePicker = new com.afrisoftech.lib.DatePicker();
        dischargesEndDatePicker = new com.afrisoftech.lib.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Farewell Home Occupancy Reporting Form");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        occupancyPanel.setLayout(new java.awt.GridBagLayout());

        occupationsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Facility occupancy data"));
        occupationsPanel.setLayout(new java.awt.GridBagLayout());

        occupationTable.setAutoCreateRowSorter(true);
        occupationTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        occupationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationJScrl.setViewportView(occupationTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel.add(occupationJScrl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        occupancyPanel.add(occupationsPanel, gridBagConstraints);

        occupationButtonPanel.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('U');
        jButton1.setText("Update Farewell Home records");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('C');
        jButton2.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton2, gridBagConstraints);

        jButton3.setMnemonic('o');
        jButton3.setText("Close form");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton3, gridBagConstraints);

        totalsLabel.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(totalsLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupancyPanel.add(occupationButtonPanel, gridBagConstraints);

        occupationsHeaderTable.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate occupancy report"));
        occupationsHeaderTable.setLayout(new java.awt.GridBagLayout());

        facilityNameCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Farewell Home" }));
        facilityNameCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Facility Name"));
        facilityNameCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facilityNameCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(facilityNameCmbx, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(datePicker1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(datePicker2, gridBagConstraints);

        jLabel1.setText("Facility");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Start Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        occupationsHeaderTable.add(jLabel2, gridBagConstraints);

        jLabel3.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(jLabel3, gridBagConstraints);

        lengthofStayCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "Normal Stay", "Beyond 30 Days" }));
        lengthofStayCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Order by legnth of stay"));
        lengthofStayCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthofStayCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        occupationsHeaderTable.add(lengthofStayCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupancyPanel.add(occupationsHeaderTable, gridBagConstraints);

        jTabbedPane1.addTab("Occupancy report", occupancyPanel);

        dischagesPanel.setLayout(new java.awt.GridBagLayout());

        occupationsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Facility occupancy data"));
        occupationsPanel1.setLayout(new java.awt.GridBagLayout());

        dischargesTable.setAutoCreateRowSorter(true);
        dischargesTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        dischargesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationJScrl1.setViewportView(dischargesTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel1.add(occupationJScrl1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        dischagesPanel.add(occupationsPanel1, gridBagConstraints);

        occupationButtonPanel1.setLayout(new java.awt.GridBagLayout());

        jButton4.setMnemonic('U');
        jButton4.setText("Update Farewell Home records");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('C');
        jButton5.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(jButton5, gridBagConstraints);

        jButton6.setMnemonic('o');
        jButton6.setText("Close form");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(jButton6, gridBagConstraints);

        totalsLabel1.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(totalsLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dischagesPanel.add(occupationButtonPanel1, gridBagConstraints);

        occupationsHeaderTable1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate occupancy report"));
        occupationsHeaderTable1.setLayout(new java.awt.GridBagLayout());

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Farewell Home" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(jComboBox2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(dischargesBeginDatePicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(dischargesEndDatePicker, gridBagConstraints);

        jLabel4.setText("Facility");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Start Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(jLabel5, gridBagConstraints);

        jLabel6.setText("End Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dischagesPanel.add(occupationsHeaderTable1, gridBagConstraints);

        jTabbedPane1.addTab("Dischages report", dischagesPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {

            for (int i = 0; i < occupationTable.getRowCount(); i++) {

                if (Boolean.parseBoolean(occupationTable.getValueAt(i, 6).toString())) {

                    java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("UPDATE hp_mortuary set discharged = true WHERE  tag_no = ? or tag_no is null");

                    pstmtTotal.setString(1, occupationTable.getValueAt(i, 0).toString());

                    // pstmtTotal.setString(2, occupationTable.getValueAt(i, 1).toString());

                    pstmtTotal.executeUpdate();

                }

            }

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(MortOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        facilityNameCmbx.actionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void facilityNameCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facilityNameCmbxActionPerformed
        int patientTotal = 0;
        if (lengthofStayCmbx.getSelectedItem().toString().equalsIgnoreCase("ALL")) {
            this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                    + "tag_no, annual_no, unit_no, patient_name, unit_category, date_received, false as discharge, "
                    + "CASE when age(now()::date, date_received)::text ilike '%mon%' or age(now()::date, "
                    + "date_received)::text ilike '%year%'  THEN 'LONG_STAY' ELSE 'NORMAL_STAY' END as "
                    + "OCCUPANCY_DURATION, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE "
                    + "hp_patient_card.patient_no = hp_mortuary.annual_no) as BILL_AMOUNT FROM hp_mortuary WHERE"
                    + " discharged = false order by 4"));

            try {

                java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("SELECT  count(*)"
                        + " FROM hp_mortuary WHERE discharged = false");

                java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

                while (rsetTotal.next()) {

                    patientTotal = rsetTotal.getInt(1);

                }


            } catch (SQLException ex) {

                ex.printStackTrace();

                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

                Logger.getLogger(MortOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (lengthofStayCmbx.getSelectedItem().toString().equalsIgnoreCase("Normal Stay")) {
            this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                    + "tag_no, annual_no, unit_no, patient_name, unit_category, date_received, false as discharge,"
                    + " CASE when age(now()::date, date_received)::text ilike '%mon%' or age(now()::date,"
                    + " date_received)::text ilike '%year%'  THEN 'LONG_STAY' ELSE 'NORMAL_STAY' END as "
                    + "OCCUPANCY_DURATION, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE"
                    + " hp_patient_card.patient_no = hp_mortuary.annual_no) as BILL_AMOUNT FROM hp_mortuary"
                    + " WHERE discharged = false AND (age(now()::date, date_received)::text not ilike '%mon%'"
                    + " AND age(now()::date, date_received)::text not ilike '%year%') order by 4"));

            try {

                java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("SELECT  count(*)"
                        + " FROM hp_mortuary WHERE discharged = false  AND (age(now()::date, date_received)::text"
                        + " not ilike '%mon%' AND age(now()::date, date_received)::text not ilike '%year%')");

                java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

                while (rsetTotal.next()) {

                    patientTotal = rsetTotal.getInt(1);

                }


            } catch (SQLException ex) {

                ex.printStackTrace();

                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

                Logger.getLogger(MortOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

            }
        } else {
            this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT"
                    + " tag_no, annual_no, unit_no,"
                    + " patient_name, unit_category, date_received, false as discharge, CASE when age(now()::date, "
                    + "date_received)::text ilike '%mon%' or age(now()::date, date_received)::text ilike '%year%' "
                    + " THEN 'LONG_STAY' ELSE 'NORMAL_STAY' END as OCCUPANCY_DURATION, "
                    + "(SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE"
                    + " hp_patient_card.patient_no = hp_mortuary.annual_no) as BILL_AMOUNT FROM"
                    + " hp_mortuary WHERE discharged = false and (age(now()::date, date_received)::text"
                    + " ilike '%mon%' or age(now()::date, date_received)::text ilike '%year%') order by 4"));

            try {

                java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("SELECT  count(*)"
                        + " FROM hp_mortuary WHERE discharged = false AND  (age(now()::date,"
                        + " date_received)::text ilike '%mon%' or age(now()::date, date_received)::text ilike "
                        + "'%year%') ");

                java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

                while (rsetTotal.next()) {

                    patientTotal = rsetTotal.getInt(1);

                }


            } catch (SQLException ex) {

                ex.printStackTrace();

                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

                Logger.getLogger(MortOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

            }
        }

        // occupationTable.setRowSorter((RowSorter)occupationTable.getModel());

        this.totalsLabel.setText("Number Admitted in the Ward: " + patientTotal);

        // TODO add your handling code here:
    }//GEN-LAST:event_facilityNameCmbxActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        dischargesTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT "
                + " patient_no as file_no, sheet_no as tag_no, diceased_name as deceased_name, collector as "
                + " next_of_kin, id_no as next_of_kin_ID_NO, relation, "
                + " date_collected, user_name, burial_county, place_of_burial, "
                + " permit_number, discharge_mode, transfer_facility"
                + "  FROM hp_body_collector WHERE date_collected between '" + dischargesBeginDatePicker.getDate() + "' AND"
                + " '" + dischargesEndDatePicker.getDate() + "' ORDER BY 3"));
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void lengthofStayCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthofStayCmbxActionPerformed

        facilityNameCmbx.actionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_lengthofStayCmbxActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private javax.swing.JPanel dischagesPanel;
    private com.afrisoftech.lib.DatePicker dischargesBeginDatePicker;
    private com.afrisoftech.lib.DatePicker dischargesEndDatePicker;
    private javax.swing.JTable dischargesTable;
    private javax.swing.JComboBox facilityNameCmbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox lengthofStayCmbx;
    private javax.swing.JPanel occupancyPanel;
    private javax.swing.JPanel occupationButtonPanel;
    private javax.swing.JPanel occupationButtonPanel1;
    private javax.swing.JScrollPane occupationJScrl;
    private javax.swing.JScrollPane occupationJScrl1;
    private javax.swing.JTable occupationTable;
    private javax.swing.JPanel occupationsHeaderTable;
    private javax.swing.JPanel occupationsHeaderTable1;
    private javax.swing.JPanel occupationsPanel;
    private javax.swing.JPanel occupationsPanel1;
    private javax.swing.JLabel totalsLabel;
    private javax.swing.JLabel totalsLabel1;
    // End of variables declaration//GEN-END:variables
}
