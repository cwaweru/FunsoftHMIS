/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.afrisoftech.hospital;

import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.swingx.decorator.ColorHighlighter;

/**
 *
 * @author funsoft
 */
public class WardOccupancyIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form WardOccupancyIntfr
     */
    java.sql.Connection connectDB = null;

    public WardOccupancyIntfr(java.sql.Connection connDB) {

        connectDB = connDB;

        initComponents();

        com.afrisoftech.dbadmin.JXTable predicateTable = (com.afrisoftech.dbadmin.JXTable) occupationTable;
        java.util.Vector<org.jdesktop.swingx.decorator.Highlighter> tableHighlighters = new java.util.Vector<org.jdesktop.swingx.decorator.Highlighter>(1, 1);
        
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate = new org.jdesktop.swingx.decorator.PatternPredicate("HDU", 4, 4);
        ColorHighlighter yellow = new ColorHighlighter(patternPredicate, Color.YELLOW, null, Color.YELLOW, null);
        tableHighlighters.addElement(yellow);   
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate1 = new org.jdesktop.swingx.decorator.PatternPredicate("ACUTE ROOM", 4, 4);
        ColorHighlighter red = new ColorHighlighter(patternPredicate1, Color.RED, null, Color.RED, null);
        tableHighlighters.add(red);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate2 = new org.jdesktop.swingx.decorator.PatternPredicate("General Bed", 4, 4);
        ColorHighlighter green = new ColorHighlighter(patternPredicate2, Color.GREEN, null, Color.GREEN, null);
        tableHighlighters.add(green);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate3 = new org.jdesktop.swingx.decorator.PatternPredicate("ICU", 4, 4);
        ColorHighlighter pink = new ColorHighlighter(patternPredicate3, Color.PINK, null, Color.PINK, null);
        tableHighlighters.add(pink);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate4 = new org.jdesktop.swingx.decorator.PatternPredicate("E WARD", 4, 4);
        ColorHighlighter magenta = new ColorHighlighter(patternPredicate4, Color.MAGENTA, null, Color.MAGENTA, null);
        tableHighlighters.add(magenta);
        
        
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate8 = new org.jdesktop.swingx.decorator.PatternPredicate("DISCHARGE_BED_RECONCILIATION.", 7, 7);
        ColorHighlighter cyan1 = new ColorHighlighter(patternPredicate8, Color.CYAN, null, Color.CYAN, null);
        tableHighlighters.add(cyan1);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate7 = new org.jdesktop.swingx.decorator.PatternPredicate("rDISCHARGE_BED_RECONCILIATION_DECEASED", 7, 7);
        ColorHighlighter red1 = new ColorHighlighter(patternPredicate7, Color.RED, null, Color.RED, null);
        tableHighlighters.add(red1);

        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate5 = new org.jdesktop.swingx.decorator.PatternPredicate("LONG_STAY", 10, 10);
        ColorHighlighter orange = new ColorHighlighter(patternPredicate5, Color.ORANGE, null, Color.ORANGE, null);
        tableHighlighters.add(orange);
        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate6 = new org.jdesktop.swingx.decorator.PatternPredicate("NORMAL_STAY", 10, 10);
        ColorHighlighter cyan = new ColorHighlighter(patternPredicate6, Color.CYAN, null, Color.CYAN, null);
        tableHighlighters.add(cyan);
        
        

//        org.jdesktop.swingx.decorator.PatternPredicate patternPredicate5 = new org.jdesktop.swingx.decorator.PatternPredicate("CANCELLED INV", 7);
//        ColorHighlighter cancelled = new ColorHighlighter(patternPredicate5, Color.RED, null, Color.RED, null);
//        tableHighlighters.add(cancelled);
        // Highlighter shading = new ShadingColorHighlighter(new HighlightPredicate.ColumnHighlightPredicate(6));
        ColorHighlighter tableHighlightersArray[] = new ColorHighlighter[]{magenta, cyan, green, pink, orange, red, yellow,red1,cyan1};
        predicateTable.setHighlighterPipeline(predicateTable, tableHighlightersArray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        dischargesPanel = new javax.swing.JPanel();
        occupationsHeaderTable = new javax.swing.JPanel();
        wardNameCmbx = new javax.swing.JComboBox();
        patientNumber = new javax.swing.JTextField();
        searchFileBtn = new javax.swing.JButton();
        longStayThresholdTxt = new javax.swing.JTextField();
        occupationButtonPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        totalsLabel = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        occupationsPanel = new javax.swing.JPanel();
        occupationJScrl = new javax.swing.JScrollPane();
        occupationTable = new com.afrisoftech.dbadmin.JXTable()/*{
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        */;
        reistatementPanel = new javax.swing.JPanel();
        occupationsHeaderTable1 = new javax.swing.JPanel();
        wardNameCmbx1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        patientNumber1 = new javax.swing.JTextField();
        searchFileBtn1 = new javax.swing.JButton();
        occupationButtonPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        totalsLabel1 = new javax.swing.JLabel();
        occupationsPanel1 = new javax.swing.JPanel();
        occupationJScrl1 = new javax.swing.JScrollPane();
        occupationTable1 = new com.afrisoftech.dbadmin.JXTable() /*{
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        */;
        wardDischargesPanel = new javax.swing.JPanel();
        occupationsHeaderTable2 = new javax.swing.JPanel();
        wardNameCmbx2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        patientNumber2 = new javax.swing.JTextField();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        datePicker2 = new com.afrisoftech.lib.DatePicker();
        occupationsPanel2 = new javax.swing.JPanel();
        occupationJScrl2 = new javax.swing.JScrollPane();
        occupationTable2 = new com.afrisoftech.dbadmin.JXTable() /*{
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        */;
        occupationButtonPanel2 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        totalsLabel2 = new javax.swing.JLabel();
        dischargedYet2ClearPanel = new javax.swing.JPanel();
        occupationsHeaderTable3 = new javax.swing.JPanel();
        wardNameCmbx3 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        patientNumber3 = new javax.swing.JTextField();
        datePicker3 = new com.afrisoftech.lib.DatePicker();
        datePicker4 = new com.afrisoftech.lib.DatePicker();
        occupationsPanel3 = new javax.swing.JPanel();
        occupationJScrl3 = new javax.swing.JScrollPane();
        occupationTable3 = new com.afrisoftech.dbadmin.JXTable() /*{
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        */;
        occupationButtonPanel3 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        totalsLabel3 = new javax.swing.JLabel();
        farewellDischargesPanel2 = new javax.swing.JPanel();
        occupationsHeaderTable4 = new javax.swing.JPanel();
        wardNameCmbx4 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        patientNumber4 = new javax.swing.JTextField();
        datePicker5 = new com.afrisoftech.lib.DatePicker();
        datePicker6 = new com.afrisoftech.lib.DatePicker();
        occupationsPanel4 = new javax.swing.JPanel();
        occupationJScrl4 = new javax.swing.JScrollPane();
        occupationTable4 = new com.afrisoftech.dbadmin.JXTable() /*{
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        */;
        occupationButtonPanel4 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        totalsLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ward Occupancy Reporting Form");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        dischargesPanel.setLayout(new java.awt.GridBagLayout());

        occupationsHeaderTable.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate occupancy report"));
        occupationsHeaderTable.setLayout(new java.awt.GridBagLayout());

        wardNameCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '--ALL--' as ward_name UNION SELECT ward_name FROM hp_wards order by ward_name"));
        wardNameCmbx.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Ward"));
        wardNameCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardNameCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(wardNameCmbx, gridBagConstraints);

        patientNumber.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Number/Unit Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 10), new java.awt.Color(51, 51, 255))); // NOI18N
        patientNumber.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientNumberCaretUpdate(evt);
            }
        });
        patientNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNumberActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(patientNumber, gridBagConstraints);

        searchFileBtn.setText("Search Patient File by Number");
        searchFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFileBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(searchFileBtn, gridBagConstraints);

        longStayThresholdTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        longStayThresholdTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        longStayThresholdTxt.setText("60");
        longStayThresholdTxt.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Long Stay Threshold"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable.add(longStayThresholdTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dischargesPanel.add(occupationsHeaderTable, gridBagConstraints);

        occupationButtonPanel.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('U');
        jButton1.setText("Discharge Unmarked Patients");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton1, gridBagConstraints);

        jButton2.setMnemonic('C');
        jButton2.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton2, gridBagConstraints);

        jButton3.setMnemonic('o');
        jButton3.setText("Close form");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton3, gridBagConstraints);

        totalsLabel.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(totalsLabel, gridBagConstraints);

        jButton7.setText("Discharge Marked Patients");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel.add(jButton7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dischargesPanel.add(occupationButtonPanel, gridBagConstraints);

        occupationsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ward occupation data"));
        occupationsPanel.setLayout(new java.awt.GridBagLayout());

        occupationTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        occupationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                occupationTableMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                occupationTableMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                occupationTableMouseEntered(evt);
            }
        });
        occupationJScrl.setViewportView(occupationTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel.add(occupationJScrl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        dischargesPanel.add(occupationsPanel, gridBagConstraints);

        jTabbedPane1.addTab("Ward occupancy", dischargesPanel);

        reistatementPanel.setLayout(new java.awt.GridBagLayout());

        occupationsHeaderTable1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate occupancy report"));
        occupationsHeaderTable1.setLayout(new java.awt.GridBagLayout());

        wardNameCmbx1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT ward_name FROM hp_wards order by ward_name"));
        wardNameCmbx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardNameCmbx1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(wardNameCmbx1, gridBagConstraints);

        jLabel2.setText("Ward Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(jLabel2, gridBagConstraints);

        patientNumber1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Number/Unit Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 10), new java.awt.Color(51, 51, 255))); // NOI18N
        patientNumber1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientNumber1CaretUpdate(evt);
            }
        });
        patientNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNumber1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable1.add(patientNumber1, gridBagConstraints);

        searchFileBtn1.setText("Search Patient File by Number");
        searchFileBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFileBtn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        occupationsHeaderTable1.add(searchFileBtn1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reistatementPanel.add(occupationsHeaderTable1, gridBagConstraints);

        occupationButtonPanel1.setLayout(new java.awt.GridBagLayout());

        jButton4.setMnemonic('U');
        jButton4.setText("Update occupancy information");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('C');
        jButton5.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(jButton5, gridBagConstraints);

        jButton6.setMnemonic('o');
        jButton6.setText("Close form");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(jButton6, gridBagConstraints);

        totalsLabel1.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel1.add(totalsLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        reistatementPanel.add(occupationButtonPanel1, gridBagConstraints);

        occupationsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ward occupation data"));
        occupationsPanel1.setLayout(new java.awt.GridBagLayout());

        occupationTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        occupationTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationJScrl1.setViewportView(occupationTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel1.add(occupationJScrl1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        reistatementPanel.add(occupationsPanel1, gridBagConstraints);

        jTabbedPane1.addTab("Reinstatements", reistatementPanel);

        wardDischargesPanel.setLayout(new java.awt.GridBagLayout());

        occupationsHeaderTable2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate discharges report"));
        occupationsHeaderTable2.setLayout(new java.awt.GridBagLayout());

        wardNameCmbx2.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT ward_name FROM hp_wards order by ward_name"));
        wardNameCmbx2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardNameCmbx2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable2.add(wardNameCmbx2, gridBagConstraints);

        jLabel3.setText("Ward Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable2.add(jLabel3, gridBagConstraints);

        patientNumber2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Number/Unit Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 10), new java.awt.Color(51, 51, 255))); // NOI18N
        patientNumber2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientNumber2CaretUpdate(evt);
            }
        });
        patientNumber2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNumber2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable2.add(patientNumber2, gridBagConstraints);

        datePicker1.setBorder(javax.swing.BorderFactory.createTitledBorder("Start Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable2.add(datePicker1, gridBagConstraints);

        datePicker2.setBorder(javax.swing.BorderFactory.createTitledBorder("End Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable2.add(datePicker2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        wardDischargesPanel.add(occupationsHeaderTable2, gridBagConstraints);

        occupationsPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ward discharges data"));
        occupationsPanel2.setLayout(new java.awt.GridBagLayout());

        occupationTable2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        occupationTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationJScrl2.setViewportView(occupationTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel2.add(occupationJScrl2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        wardDischargesPanel.add(occupationsPanel2, gridBagConstraints);

        occupationButtonPanel2.setLayout(new java.awt.GridBagLayout());

        jButton8.setMnemonic('U');
        jButton8.setText("Refresh discharges information");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel2.add(jButton8, gridBagConstraints);

        jButton9.setMnemonic('C');
        jButton9.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel2.add(jButton9, gridBagConstraints);

        jButton10.setMnemonic('o');
        jButton10.setText("Close form");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel2.add(jButton10, gridBagConstraints);

        totalsLabel2.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel2.add(totalsLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        wardDischargesPanel.add(occupationButtonPanel2, gridBagConstraints);

        jTabbedPane1.addTab("Discharged patients", wardDischargesPanel);

        dischargedYet2ClearPanel.setLayout(new java.awt.GridBagLayout());

        occupationsHeaderTable3.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate discharges report"));
        occupationsHeaderTable3.setLayout(new java.awt.GridBagLayout());

        wardNameCmbx3.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT ward_name FROM hp_wards order by ward_name"));
        wardNameCmbx3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardNameCmbx3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable3.add(wardNameCmbx3, gridBagConstraints);

        jLabel4.setText("Ward Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable3.add(jLabel4, gridBagConstraints);

        patientNumber3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Number/Unit Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 10), new java.awt.Color(51, 51, 255))); // NOI18N
        patientNumber3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientNumber3CaretUpdate(evt);
            }
        });
        patientNumber3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNumber3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable3.add(patientNumber3, gridBagConstraints);

        datePicker3.setBorder(javax.swing.BorderFactory.createTitledBorder("Start Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable3.add(datePicker3, gridBagConstraints);

        datePicker4.setBorder(javax.swing.BorderFactory.createTitledBorder("End Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable3.add(datePicker4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dischargedYet2ClearPanel.add(occupationsHeaderTable3, gridBagConstraints);

        occupationsPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ward discharges data"));
        occupationsPanel3.setLayout(new java.awt.GridBagLayout());

        occupationTable3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        occupationTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationJScrl3.setViewportView(occupationTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel3.add(occupationJScrl3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        dischargedYet2ClearPanel.add(occupationsPanel3, gridBagConstraints);

        occupationButtonPanel3.setLayout(new java.awt.GridBagLayout());

        jButton11.setMnemonic('U');
        jButton11.setText("Refresh discharges information");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel3.add(jButton11, gridBagConstraints);

        jButton12.setMnemonic('C');
        jButton12.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel3.add(jButton12, gridBagConstraints);

        jButton13.setMnemonic('o');
        jButton13.setText("Close form");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel3.add(jButton13, gridBagConstraints);

        totalsLabel3.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel3.add(totalsLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dischargedYet2ClearPanel.add(occupationButtonPanel3, gridBagConstraints);

        jTabbedPane1.addTab("Discharged patients but yet to clear", dischargedYet2ClearPanel);

        farewellDischargesPanel2.setLayout(new java.awt.GridBagLayout());

        occupationsHeaderTable4.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the ward name here to generate discharges report"));
        occupationsHeaderTable4.setLayout(new java.awt.GridBagLayout());

        wardNameCmbx4.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT '-ALL-' UNION SELECT ward_name FROM hp_wards order by 1"));
        wardNameCmbx4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardNameCmbx4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable4.add(wardNameCmbx4, gridBagConstraints);

        jLabel5.setText("Ward Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable4.add(jLabel5, gridBagConstraints);

        patientNumber4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Number/Unit Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 10), new java.awt.Color(51, 51, 255))); // NOI18N
        patientNumber4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientNumber4CaretUpdate(evt);
            }
        });
        patientNumber4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNumber4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable4.add(patientNumber4, gridBagConstraints);

        datePicker5.setBorder(javax.swing.BorderFactory.createTitledBorder("Start Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable4.add(datePicker5, gridBagConstraints);

        datePicker6.setBorder(javax.swing.BorderFactory.createTitledBorder("End Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsHeaderTable4.add(datePicker6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        farewellDischargesPanel2.add(occupationsHeaderTable4, gridBagConstraints);

        occupationsPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ward discharges data"));
        occupationsPanel4.setLayout(new java.awt.GridBagLayout());

        occupationTable4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        occupationTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        occupationJScrl4.setViewportView(occupationTable4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 431;
        gridBagConstraints.ipady = 292;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationsPanel4.add(occupationJScrl4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        farewellDischargesPanel2.add(occupationsPanel4, gridBagConstraints);

        occupationButtonPanel4.setLayout(new java.awt.GridBagLayout());

        jButton14.setMnemonic('U');
        jButton14.setText("Refresh discharges information");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel4.add(jButton14, gridBagConstraints);

        jButton15.setMnemonic('C');
        jButton15.setText("Clear form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel4.add(jButton15, gridBagConstraints);

        jButton16.setMnemonic('o');
        jButton16.setText("Close form");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel4.add(jButton16, gridBagConstraints);

        totalsLabel4.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        occupationButtonPanel4.add(totalsLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        farewellDischargesPanel2.add(occupationButtonPanel4, gridBagConstraints);

        jTabbedPane1.addTab("Deceased discharged patients", farewellDischargesPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (occupationTable.isEditing()) {
            occupationTable.getCellEditor().stopCellEditing();
        }
        //  com.afrisoftech.lib.PatientFile patientFile = new com.afrisoftech.lib.PatientFile();
        //  patientFile.setFirstName(title);
        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < occupationTable.getRowCount(); i++) {

                if (!Boolean.parseBoolean(occupationTable.getValueAt(i, 6).toString())) {

                    java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("UPDATE hp_admission set discharge = true, check_out = true, discharge_date = current_date,discharged_by = current_user, comments = '" + occupationTable.getValueAt(i, 7).toString() + "'  WHERE patient_no = ? and visit_id = ?");

                    pstmtTotal.setString(1, occupationTable.getValueAt(i, 0).toString());

                    pstmtTotal.setString(2, occupationTable.getValueAt(i, 1).toString());

                    pstmtTotal.executeUpdate();

                     
                }

            }
            
            connectDB.commit();
            connectDB.setAutoCommit(true);

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.wardNameCmbxActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void wardNameCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardNameCmbxActionPerformed

        if (wardNameCmbx.getSelectedItem().toString().contains("--ALL--")) {

            this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, (CASE WHEN patient_no IN (SELECT patient_no  FROM hp_mortuary) THEN 'DISCHARGE_BED_RECONCILIATION_DECEASED' ELSE 'DISCHARGE_BED_RECONCILIATION.' END ) as comments, ward as ward_name, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE hp_patient_card.patient_no = hp_admission.patient_no) as BILL_AMOUNT, (CASE WHEN (now()::date-date_admitted) > '" + Integer.parseInt(longStayThresholdTxt.getText()) + "' THEN 'LONG_STAY' ELSE 'NORMAL_STAY' END) AS DURATION_OF_STAY FROM hp_admission WHERE check_out = false order by 4"));

        } else {//

            this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, (CASE WHEN patient_no IN (SELECT patient_no  FROM hp_mortuary) THEN 'DISCHARGE_BED_RECONCILIATION_DECEASED' ELSE 'DISCHARGE_BED_RECONCILIATION.' END ) as comments, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE hp_patient_card.patient_no = hp_admission.patient_no) as BILL_AMOUNT FROM hp_admission WHERE ward = '" + this.wardNameCmbx.getSelectedItem().toString() + "' and check_out = false order by 4"));

        }
        int patientTotal = 0;

        try {

            java.sql.PreparedStatement pstmtTotal;

            if (wardNameCmbx.getSelectedItem().toString().contains("--ALL--")) {

                pstmtTotal = connectDB.prepareStatement("SELECT  count(*) FROM hp_admission WHERE check_out = false");

            } else {

                pstmtTotal = connectDB.prepareStatement("SELECT  count(*) FROM hp_admission WHERE ward = '" + this.wardNameCmbx.getSelectedItem().toString() + "' and check_out = false");

            }

            java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

            while (rsetTotal.next()) {

                patientTotal = rsetTotal.getInt(1);

            }

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.totalsLabel.setText("Number Admitted in the Ward(s): " + patientTotal);

        // TODO add your handling code here:
    }//GEN-LAST:event_wardNameCmbxActionPerformed

    private void searchFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFileBtnActionPerformed

        this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, '' as comments FROM hp_admission WHERE patient_no = '" + patientNumber.getText() + "' and check_out = true AND comments = '' order by 4"));

        // TODO add your handling code here:
    }//GEN-LAST:event_searchFileBtnActionPerformed

    private void patientNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumberActionPerformed

    private void wardNameCmbx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardNameCmbx1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wardNameCmbx1ActionPerformed

    private void patientNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNumber1ActionPerformed
        if (patientNumber1.getText().length() > 3) {
            this.occupationTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as Reinstate, 'REINSTATEMENT' as comments FROM hp_admission WHERE (patient_no ilike '%" + patientNumber1.getText() + "%' or patient_name ilike '%" + patientNumber1.getText() + "%' or sub_chief ilike '%" + patientNumber1.getText() + "%') and check_out = true  order by 4"));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber1ActionPerformed

    private void searchFileBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFileBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFileBtn1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (occupationTable1.isEditing()) {
            occupationTable1.getCellEditor().stopCellEditing();
        }

        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < occupationTable1.getRowCount(); i++) {

                if (Boolean.parseBoolean(occupationTable1.getValueAt(i, 6).toString())) {

                    java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("UPDATE hp_admission set discharge = false, check_out = false, discharge_date = null, comments = '" + occupationTable1.getValueAt(i, 7).toString() + "'  WHERE patient_no = ? and visit_id = ?");

                    pstmtTotal.setString(1, occupationTable1.getValueAt(i, 0).toString());

                    pstmtTotal.setString(2, occupationTable1.getValueAt(i, 1).toString());

                    pstmtTotal.executeUpdate();

                }

            }
            
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "SELECTED PATIENT FILE(S) REINSTATED");

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.wardNameCmbx1ActionPerformed(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void patientNumberCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientNumberCaretUpdate
        if (patientNumber.getText().length() > 3) {
            this.occupationTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, (CASE WHEN patient_no IN (SELECT patient_no  FROM hp_mortuary) THEN 'rDISCHARGE_BED_RECONCILIATION_DECEASED' ELSE 'DISCHARGE_BED_RECONCILIATION.' END ) as comments, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE hp_patient_card.patient_no = hp_admission.patient_no) as BILL_AMOUNT FROM hp_admission WHERE (patient_no ilike '%" + patientNumber.getText() + "%' or patient_name ilike '%" + patientNumber.getText() + "%' or sub_chief ilike '%" + patientNumber.getText() + "%') AND ward = '" + this.wardNameCmbx.getSelectedItem().toString() + "' and check_out = false order by 4"));
        }     // TODO add your handling code here:
    }//GEN-LAST:event_patientNumberCaretUpdate

    private void patientNumber1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientNumber1CaretUpdate
        if (patientNumber1.getText().length() > 3) {
            this.occupationTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as Reinstate, 'REINSTATEMENT' as comments FROM hp_admission WHERE (patient_no ilike '%" + patientNumber1.getText() + "%' or patient_name ilike '%" + patientNumber1.getText() + "%' or sub_chief ilike '%" + patientNumber1.getText() + "%') and check_out = true  order by 4"));
        }     // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber1CaretUpdate

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        if (occupationTable.isEditing()) {
            occupationTable.getCellEditor().stopCellEditing();
        }
        //  com.afrisoftech.lib.PatientFile patientFile = new com.afrisoftech.lib.PatientFile();
        //  patientFile.setFirstName(title);
        try {
            connectDB.setAutoCommit(false);

            for (int i = 0; i < occupationTable.getRowCount(); i++) {

                if (Boolean.parseBoolean(occupationTable.getValueAt(i, 6).toString())) {

                    java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("UPDATE hp_admission set discharge = true,discharged_by = current_user, check_out = true, discharge_date = current_date, comments = '" + occupationTable.getValueAt(i, 7).toString() + "'  WHERE patient_no = ? and visit_id = ?");

                    pstmtTotal.setString(1, occupationTable.getValueAt(i, 0).toString());

                    pstmtTotal.setString(2, occupationTable.getValueAt(i, 1).toString());

                    pstmtTotal.executeUpdate();

                     
                }

            }
            
            connectDB.commit();
            connectDB.setAutoCommit(true);

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.wardNameCmbxActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void wardNameCmbx2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardNameCmbx2ActionPerformed

        this.occupationTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, comments, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE hp_patient_card.patient_no = hp_admission.patient_no) as BILL_AMOUNT FROM hp_admission WHERE ward = '" + this.wardNameCmbx2.getSelectedItem().toString() + "' and check_out = true order by 4"));

        int patientTotal = 0;

        try {

            java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("SELECT  count(*) FROM hp_admission WHERE ward = '" + this.wardNameCmbx2.getSelectedItem().toString() + "' and check_out = true");

            java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

            while (rsetTotal.next()) {

                patientTotal = rsetTotal.getInt(1);

            }

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.totalsLabel2.setText("Number Admitted in the Ward: " + patientTotal);
        // TODO add your handling code here:
    }//GEN-LAST:event_wardNameCmbx2ActionPerformed

    private void patientNumber2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientNumber2CaretUpdate
        if (patientNumber2.getText().length() > 3) {
            this.occupationTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as Reinstate, comments FROM hp_admission WHERE (patient_no ilike '%" + patientNumber2.getText() + "%' or patient_name ilike '%" + patientNumber2.getText() + "%' or sub_chief ilike '%" + patientNumber2.getText() + "%') and check_out = true  order by 4"));
        }         // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber2CaretUpdate

    private void patientNumber2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNumber2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void wardNameCmbx3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardNameCmbx3ActionPerformed

        this.occupationTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, comments, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE hp_patient_card.patient_no = hp_admission.patient_no) as BILL_AMOUNT FROM hp_admission WHERE discharge = true  AND check_out = false order by date_admitted"));

        int patientTotal = 0;

        try {

            java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("SELECT  count(*) FROM hp_admission WHERE discharge = true  AND check_out = false");

            java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

            while (rsetTotal.next()) {

                patientTotal = rsetTotal.getInt(1);

            }

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.totalsLabel3.setText("Number clinically discharged but still in the Ward: " + patientTotal);
        // TODO add your handling code here:
    }//GEN-LAST:event_wardNameCmbx3ActionPerformed

    private void patientNumber3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientNumber3CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber3CaretUpdate

    private void patientNumber3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNumber3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber3ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void wardNameCmbx4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardNameCmbx4ActionPerformed

        this.occupationTable4.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "SELECT patient_no, visit_id, sub_chief as unit_number, patient_name, wing, date_admitted, false as discharge, comments, (SELECT sum(debit-credit)::numeric(30,2) FROM hp_patient_card WHERE hp_patient_card.patient_no = hp_admission.patient_no) as BILL_AMOUNT FROM hp_admission WHERE patient_no in (select patient_no from hp_admission where check_out = false intersect select patient_no from hp_mortuary) order by date_admitted"));

        int patientTotal = 0;

        try {

            java.sql.PreparedStatement pstmtTotal = connectDB.prepareStatement("SELECT  count(*) FROM hp_admission WHERE patient_no in (select DISTINCT patient_no from hp_admission where check_out = false intersect select DISTINCT patient_no from hp_mortuary)");

            java.sql.ResultSet rsetTotal = pstmtTotal.executeQuery();

            while (rsetTotal.next()) {

                patientTotal = rsetTotal.getInt(1);

            }

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

            Logger.getLogger(WardOccupancyIntfr.class.getName()).log(Level.SEVERE, null, ex);

        }

        this.totalsLabel4.setText("Number registered in Farewell Home but still appearing ward register: " + patientTotal);
        // TODO add your handling code here:
    }//GEN-LAST:event_wardNameCmbx4ActionPerformed

    private void patientNumber4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientNumber4CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber4CaretUpdate

    private void patientNumber4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNumber4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNumber4ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void occupationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_occupationTableMouseClicked

        //com.afrisoftech.reports.FinalDescInPatientIntmlnvPdf policy = new com.afrisoftech.reports.FinalDescInPatientIntmlnvPdf();

        //policy.FinalDescInPatientIntmlnvPdf(connectDB, occupationTable.getValueAt(occupationTable.getSelectedRow(), 1).toString(), occupationTable.getValueAt(occupationTable.getSelectedRow(), 0).toString());
        com.afrisoftech.reports.FinalInterimPatientlnvSummPdf policy = new com.afrisoftech.reports.FinalInterimPatientlnvSummPdf();

                policy.FinalInterimPatientlnvSummPdf(connectDB, occupationTable.getValueAt(occupationTable.getSelectedRow(), 1).toString(), occupationTable.getValueAt(occupationTable.getSelectedRow(), 0).toString());
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationTableMouseClicked

    private void occupationTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_occupationTableMouseEntered

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationTableMouseEntered

    private void occupationTableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_occupationTableMouseExited

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationTableMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.afrisoftech.lib.DatePicker datePicker1;
    private com.afrisoftech.lib.DatePicker datePicker2;
    private com.afrisoftech.lib.DatePicker datePicker3;
    private com.afrisoftech.lib.DatePicker datePicker4;
    private com.afrisoftech.lib.DatePicker datePicker5;
    private com.afrisoftech.lib.DatePicker datePicker6;
    private javax.swing.JPanel dischargedYet2ClearPanel;
    private javax.swing.JPanel dischargesPanel;
    private javax.swing.JPanel farewellDischargesPanel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField longStayThresholdTxt;
    private javax.swing.JPanel occupationButtonPanel;
    private javax.swing.JPanel occupationButtonPanel1;
    private javax.swing.JPanel occupationButtonPanel2;
    private javax.swing.JPanel occupationButtonPanel3;
    private javax.swing.JPanel occupationButtonPanel4;
    private javax.swing.JScrollPane occupationJScrl;
    private javax.swing.JScrollPane occupationJScrl1;
    private javax.swing.JScrollPane occupationJScrl2;
    private javax.swing.JScrollPane occupationJScrl3;
    private javax.swing.JScrollPane occupationJScrl4;
    private javax.swing.JTable occupationTable;
    private javax.swing.JTable occupationTable1;
    private javax.swing.JTable occupationTable2;
    private javax.swing.JTable occupationTable3;
    private javax.swing.JTable occupationTable4;
    private javax.swing.JPanel occupationsHeaderTable;
    private javax.swing.JPanel occupationsHeaderTable1;
    private javax.swing.JPanel occupationsHeaderTable2;
    private javax.swing.JPanel occupationsHeaderTable3;
    private javax.swing.JPanel occupationsHeaderTable4;
    private javax.swing.JPanel occupationsPanel;
    private javax.swing.JPanel occupationsPanel1;
    private javax.swing.JPanel occupationsPanel2;
    private javax.swing.JPanel occupationsPanel3;
    private javax.swing.JPanel occupationsPanel4;
    private javax.swing.JTextField patientNumber;
    private javax.swing.JTextField patientNumber1;
    private javax.swing.JTextField patientNumber2;
    private javax.swing.JTextField patientNumber3;
    private javax.swing.JTextField patientNumber4;
    private javax.swing.JPanel reistatementPanel;
    private javax.swing.JButton searchFileBtn;
    private javax.swing.JButton searchFileBtn1;
    private javax.swing.JLabel totalsLabel;
    private javax.swing.JLabel totalsLabel1;
    private javax.swing.JLabel totalsLabel2;
    private javax.swing.JLabel totalsLabel3;
    private javax.swing.JLabel totalsLabel4;
    private javax.swing.JPanel wardDischargesPanel;
    private javax.swing.JComboBox wardNameCmbx;
    private javax.swing.JComboBox wardNameCmbx1;
    private javax.swing.JComboBox wardNameCmbx2;
    private javax.swing.JComboBox wardNameCmbx3;
    private javax.swing.JComboBox wardNameCmbx4;
    // End of variables declaration//GEN-END:variables
}
