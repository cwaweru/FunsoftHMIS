/*
 * companyprflintfr.java
 *
 * Created on August 13, 2002, 11:36 AM
 *
 */
package com.afrisoftech.hospital;

/**
 *
 * @author  root
 */
public class WardToWardTransferInfr extends javax.swing.JInternalFrame {

    /** Creates new form companyprflintfr */
    
    java.sql.Connection connectDB = null;

    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public WardToWardTransferInfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        patientSearchdialog = new javax.swing.JDialog();
        patientSearchPanel = new javax.swing.JPanel();
        patientSearchTxt = new javax.swing.JTextField();
        patientSearchScrollPane = new javax.swing.JScrollPane();
        patientSearchTable = new com.afrisoftech.dbadmin.JTable();
        disposeBtn = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        saveBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        patientNumberLbl = new javax.swing.JLabel();
        targetWardLbl = new javax.swing.JLabel();
        targetWardCmbx = new javax.swing.JComboBox();
        patientNameLbl = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        wardCodeLbl = new javax.swing.JLabel();
        wardCodeTxt = new javax.swing.JTextField();
        admissionReasonLbl = new javax.swing.JLabel();
        admissionReasonTxt = new javax.swing.JTextField();
        targetBedNumberLbl = new javax.swing.JLabel();
        targetBedNumberCmbx = new javax.swing.JComboBox();
        transferReasonScrollPane = new javax.swing.JScrollPane();
        transferReasonTxt = new javax.swing.JTextPane();
        targetWingLbl = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        currentWardLbl = new javax.swing.JLabel();
        currentWardTxt = new javax.swing.JTextField();
        doctorLbl = new javax.swing.JLabel();
        doctorCmbx = new javax.swing.JComboBox();
        bedNumberLbl = new javax.swing.JLabel();
        bedNumberTxt = new javax.swing.JTextField();
        wardWingCmbx = new javax.swing.JComboBox();
        selectionSearchPanel = new javax.swing.JPanel();
        patientSearchNumberChbx = new javax.swing.JCheckBox();
        patientSearchNameChbx = new javax.swing.JCheckBox();
        patientSearchpanel = new javax.swing.JPanel();
        patientNumberTxt = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        transactionDatePicker = new com.afrisoftech.lib.DatePicker();
        transferDateLbl = new javax.swing.JLabel();
        patientAgeLbl = new javax.swing.JLabel();
        patientGenderLbl = new javax.swing.JLabel();
        patientAgeTxt = new javax.swing.JTextField();
        patientGenderTxt = new javax.swing.JTextField();
        bedCategoryLbl = new javax.swing.JLabel();
        bedCategoryCmbx = new javax.swing.JComboBox();
        bedRateLbl = new javax.swing.JLabel();
        bedRateTxt = new javax.swing.JTextField();
        nursingFeelbl = new javax.swing.JLabel();
        nursingFeeTxt = new javax.swing.JTextField();
        helpBtn = new javax.swing.JButton();
        spacerlbl = new javax.swing.JLabel();

        patientSearchdialog.setModal(true);
        patientSearchdialog.setUndecorated(true);
        patientSearchdialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        patientSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        patientSearchPanel.setLayout(new java.awt.GridBagLayout());

        patientSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        patientSearchPanel.add(patientSearchTxt, gridBagConstraints);

        patientSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        patientSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        patientSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientSearchTableMouseClicked(evt);
            }
        });
        patientSearchScrollPane.setViewportView(patientSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        patientSearchPanel.add(patientSearchScrollPane, gridBagConstraints);

        disposeBtn.setText("Close");
        disposeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disposeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(disposeBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchdialog.getContentPane().add(patientSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ward To Ward Transfer");
        setToolTipText("Ward To Ward Transfer form");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        saveBtn.setMnemonic('O');
        saveBtn.setText("Save Transfer");
        saveBtn.setToolTipText("click to store data");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(saveBtn, gridBagConstraints);

        editBtn.setMnemonic('E');
        editBtn.setText("Edit");
        editBtn.setToolTipText("click to edit&update");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(editBtn, gridBagConstraints);

        cancelBtn.setMnemonic('n');
        cancelBtn.setText("Cancel");
        cancelBtn.setToolTipText("click to clear fields");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(cancelBtn, gridBagConstraints);

        closeBtn.setMnemonic('C');
        closeBtn.setText("Close");
        closeBtn.setToolTipText("Click to close");
        closeBtn.setSelected(true);
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(closeBtn, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Utopia", 3, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        getContentPane().add(jLabel12, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        patientNumberLbl.setText("Patient No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(patientNumberLbl, gridBagConstraints);

        targetWardLbl.setText("Target Ward");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(targetWardLbl, gridBagConstraints);

        targetWardCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select ward_name from hp_wards"));
        targetWardCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetWardCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(targetWardCmbx, gridBagConstraints);

        patientNameLbl.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(patientNameLbl, gridBagConstraints);

        patientNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(patientNameTxt, gridBagConstraints);

        wardCodeLbl.setText("Ward Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(wardCodeLbl, gridBagConstraints);

        wardCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(wardCodeTxt, gridBagConstraints);

        admissionReasonLbl.setText("Reason for Adm.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(admissionReasonLbl, gridBagConstraints);

        admissionReasonTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(admissionReasonTxt, gridBagConstraints);

        targetBedNumberLbl.setText("Bed No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(targetBedNumberLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(targetBedNumberCmbx, gridBagConstraints);

        transferReasonScrollPane.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Reason for transfer"));
        transferReasonScrollPane.setViewportView(transferReasonTxt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(transferReasonScrollPane, gridBagConstraints);

        targetWingLbl.setText("Target Wing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(targetWingLbl, gridBagConstraints);

        jTextField12.setEditable(false);
        jTextField12.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        jPanel1.add(jTextField12, gridBagConstraints);

        currentWardLbl.setText("Current Ward");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(currentWardLbl, gridBagConstraints);

        currentWardTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(currentWardTxt, gridBagConstraints);

        doctorLbl.setText("Authorising Doctor ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(doctorLbl, gridBagConstraints);

        doctorCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select first_name||' '||middle_name as name from pb_doctors_list"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel1.add(doctorCmbx, gridBagConstraints);

        bedNumberLbl.setText("Bed No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(bedNumberLbl, gridBagConstraints);

        bedNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bedNumberTxt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(wardWingCmbx, gridBagConstraints);

        selectionSearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        selectionSearchPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(patientSearchNumberChbx);
        patientSearchNumberChbx.setSelected(true);
        patientSearchNumberChbx.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        selectionSearchPanel.add(patientSearchNumberChbx, gridBagConstraints);

        buttonGroup1.add(patientSearchNameChbx);
        patientSearchNameChbx.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        selectionSearchPanel.add(patientSearchNameChbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(selectionSearchPanel, gridBagConstraints);

        patientSearchpanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        patientSearchpanel.setMinimumSize(new java.awt.Dimension(82, 37));
        patientSearchpanel.setLayout(new java.awt.GridBagLayout());

        patientNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchpanel.add(patientNumberTxt, gridBagConstraints);

        searchButton.setToolTipText("Search Patient's Name");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        patientSearchpanel.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(patientSearchpanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(transactionDatePicker, gridBagConstraints);

        transferDateLbl.setText("Transfer Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(transferDateLbl, gridBagConstraints);

        patientAgeLbl.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(patientAgeLbl, gridBagConstraints);

        patientGenderLbl.setText("Gender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(patientGenderLbl, gridBagConstraints);

        patientAgeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(patientAgeTxt, gridBagConstraints);

        patientGenderTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(patientGenderTxt, gridBagConstraints);

        bedCategoryLbl.setForeground(new java.awt.Color(255, 51, 153));
        bedCategoryLbl.setText("Bed Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(bedCategoryLbl, gridBagConstraints);

        bedCategoryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select category from hp_bed_category order by category"));
        bedCategoryCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedCategoryCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bedCategoryCmbx, gridBagConstraints);

        bedRateLbl.setForeground(new java.awt.Color(255, 102, 102));
        bedRateLbl.setText("Bed Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(bedRateLbl, gridBagConstraints);

        bedRateTxt.setEditable(false);
        bedRateTxt.setBackground(new java.awt.Color(204, 204, 204));
        bedRateTxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        bedRateTxt.setForeground(new java.awt.Color(204, 0, 204));
        bedRateTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(bedRateTxt, gridBagConstraints);

        nursingFeelbl.setText("Nursing Fee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(nursingFeelbl, gridBagConstraints);

        nursingFeeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(nursingFeeTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        helpBtn.setMnemonic('h');
        helpBtn.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(helpBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(spacerlbl, gridBagConstraints);

        setBounds(0, 0, 1042, 459);
    }// </editor-fold>//GEN-END:initComponents

    private void patientSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientSearchTableMouseClicked
        patientNumberTxt.setText(patientSearchTable.getModel().getValueAt(patientSearchTable.getSelectedRow(), 0).toString());

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select patient_name,admission_reason,ward,bed_no,pat_age,gender from hp_admission where admission_no ='" + patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 0).toString() + "' AND discharge = false");
            while (rset.next()) {
                patientNameTxt.setText(rset.getObject(1).toString());
                admissionReasonTxt.setText(rset.getObject(2).toString());
                currentWardTxt.setText(rset.getObject(3).toString());
                bedNumberTxt.setText(rset.getObject(4).toString());
                patientAgeTxt.setText(rset.getObject(5).toString());
                patientGenderTxt.setText(rset.getObject(6).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }
        patientSearchdialog.dispose();
    // Add your handling code here:
    }//GEN-LAST:event_patientSearchTableMouseClicked

    private void patientSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientSearchTxtCaretUpdate
        if (this.patientSearchTxt.getCaretPosition() >3 ) 
        {
//            System.out.print("Nothing");
//        } else {
            if (this.patientSearchNumberChbx.isSelected()) {

                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(patient_no) as scheme,patient_name as name,sub_chief as Unit_No from hp_admission where (patient_no ILIKE '%" + patientSearchTxt.getText().toString() + "%' OR sub_chief ilike '" + patientSearchTxt.getText().toString() + "%' )  AND discharge = false ORDER BY patient_no"));

                /*  searchRowSet1.execute("select trim(patient_no) as scheme,patient_name as name from hp_admission where patient_no ILIKE '"+jTextField1111.getText().toString()+"%'  AND discharge = false ORDER BY patient_no");
                
                jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Patient_no", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                
                }));
                 */
                patientSearchTable.setShowHorizontalLines(false);
                patientSearchScrollPane.setViewportView(patientSearchTable);



            } else {

                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select trim(patient_no) as scheme,patient_name as name,sub_chief as Unit_No from hp_admission where patient_name ILIKE '" + patientSearchTxt.getText().toString() + "%' AND discharge = false ORDER BY patient_name"));

                /*   searchRowSet1.execute("select trim(patient_no) as scheme,patient_name as name from hp_admission where patient_name ILIKE '"+jTextField1111.getText().toString()+"%' AND discharge = false ORDER BY patient_name");
                
                jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Patient_no", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                
                }));
                 */
                patientSearchTable.setShowHorizontalLines(false);
                patientSearchScrollPane.setViewportView(patientSearchTable);

            }
        }
    // Add your handling code here:
    }//GEN-LAST:event_patientSearchTxtCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        if (!this.patientSearchNumberChbx.isSelected() && !(this.patientSearchNameChbx.isSelected())) {
            javax.swing.JOptionPane.showMessageDialog(this, "Select Patient No. OR Name", "Information Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {
            searchButton11Clicked();
        }
    // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton11Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.patientNumberTxt.getLocationOnScreen();
        patientSearchdialog.setLocation(point);

        patientSearchdialog.setSize(400, 200);


        patientSearchdialog.setVisible(true);


    }
    private void targetWardCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetWardCmbxActionPerformed

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select ward_code from hp_wards where ward_name ='" + targetWardCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                wardCodeTxt.setText(rset.getObject(1).toString());
            //jTextField6.setText(rset.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Insert not successful");
        }


        targetBedNumberCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' AS bed_no UNION ALL select bed_no from hp_bed_setup where ward ILIKE '" + targetWardCmbx.getSelectedItem() + "%' and occupied = 'f' and available = 'Available' order by bed_no asc"));

        // crset41.setCommand("select wing from hp_wards where ward_name ='"+jComboBox2.getSelectedItem()+"' order by wing asc");

        wardWingCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select wing from hp_wards where ward_name ='" + targetWardCmbx.getSelectedItem() + "' order by wing asc"));

    //crset2.excute();
       /* try {
    java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
    System.out.println("Connection to database established");
    java.sql.Statement stmt = conn.createStatement();
    java.sql.ResultSet rset = stmt.executeQuery("select bed_no from bed_setup where ward ='"+jComboBox2.getSelectedItem()+"' and occupied = 'f' order by bed_no asc");
    while (rset.next())
    jTextField6.setText(rset.getObject(1).toString());
    //jTextField5.setText(rset.getObject(2).toString());
    
    } catch (java.sql.SQLException sqe) {
    sqe.printStackTrace();
    System.out.println("Insert not successful");
    } */// Add your handling code here:
    }//GEN-LAST:event_targetWardCmbxActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        admissionReasonTxt.setText("");
        currentWardTxt.setText("");
        //      jTextField9.setText("");
        //      jTextField8.setText("");
        //      jTextField7.setText("");
        // jTextField6.setText("");
        wardCodeTxt.setText("");
        patientNameTxt.setText("");
        currentWardTxt.setText("");
        jTextField12.setText("");
        bedNumberTxt.setText("");
    //      jTextField4.setText("");
    //jTextField31.setText("");
    //  jTextField13.setText("");
    //    pstmt.setString(15,jTextField3.getText());

    // Add your handling code here:
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        //       javax.swing.JFrame admm = new admmission();
        //        admm.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        try {
            connectDB.setAutoCommit(false);
            // java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO hp_ward_to_ward_transfer VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
            pstmt.setString(1, patientNumberTxt.getText());
            pstmt.setString(2, patientNameTxt.getText());
            pstmt.setString(3, admissionReasonTxt.getText());
            pstmt.setString(4, currentWardTxt.getText());
            pstmt.setString(5, bedNumberTxt.getText());
            pstmt.setString(6, targetWardCmbx.getSelectedItem().toString());
            pstmt.setString(7, wardCodeTxt.getText());
            pstmt.setString(8, targetBedNumberCmbx.getSelectedItem().toString());
            pstmt.setString(9, jTextField12.getText());
            pstmt.setString(10, doctorCmbx.getSelectedItem().toString());
            pstmt.setString(11, transferReasonTxt.getText());
            pstmt.setDate(12, com.afrisoftech.lib.SQLDateFormat.getSQLDate(transactionDatePicker.getDate()));
            pstmt.setDouble(13, java.lang.Double.valueOf(patientAgeTxt.getText()));
            pstmt.setString(14, patientGenderTxt.getText());
            //
            pstmt.executeUpdate();


            java.sql.PreparedStatement pstmt22 = connectDB.prepareStatement("UPDATE hp_bed_setup SET occupied = 'false' where bed_no ='" + bedNumberTxt.getText() + "' and ward = '" + currentWardTxt.getText() + "'");
            pstmt22.executeUpdate();


            java.sql.PreparedStatement pstmt11 = connectDB.prepareStatement("update hp_bed_setup set occupied = 'true' where bed_no ='" + targetBedNumberCmbx.getSelectedItem() + "' AND ward = '" + targetWardCmbx.getSelectedItem() + "'");

            pstmt11.executeUpdate();

            java.sql.PreparedStatement pstmt12 = connectDB.prepareStatement("update hp_admission set transfered_to = '" + currentWardTxt.getText() + "', "
                    + "bed_no  = '" + targetBedNumberCmbx.getSelectedItem() + "',ward='" + targetWardCmbx.getSelectedItem() + "', wing = '"+bedCategoryCmbx.getSelectedItem().toString()+"', "
                    + "deposit = '"+bedRateTxt.getText()+"', nursing = '"+nursingFeeTxt.getText()+"' WHERE  patient_no = '" + patientNumberTxt.getText() + "' AND discharge = false");

            pstmt12.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            System.out.println(sq.getMessage());
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            jLabel12.setForeground(java.awt.Color.red);
            jLabel12.setText("Sorry. Insert Not Done ");
        }


    // Add your handling code here:
    }//GEN-LAST:event_saveBtnActionPerformed

private void disposeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposeBtnActionPerformed
    patientSearchdialog.dispose();
// TODO add your handling code here:
}//GEN-LAST:event_disposeBtnActionPerformed

private void bedCategoryCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedCategoryCmbxActionPerformed
try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select rate,nursing from hp_bed_category where category ='" + bedCategoryCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                //   jTextField5.setText(rset.getObject(1).toString());
                bedRateTxt.setText(rset.getObject(1).toString());
                nursingFeeTxt.setText(rset.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("Select not successful");
        }          // Add your handling code here:
}//GEN-LAST:event_bedCategoryCmbxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel admissionReasonLbl;
    private javax.swing.JTextField admissionReasonTxt;
    private javax.swing.JComboBox bedCategoryCmbx;
    private javax.swing.JLabel bedCategoryLbl;
    private javax.swing.JLabel bedNumberLbl;
    private javax.swing.JTextField bedNumberTxt;
    private javax.swing.JLabel bedRateLbl;
    private javax.swing.JTextField bedRateTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel currentWardLbl;
    private javax.swing.JTextField currentWardTxt;
    private javax.swing.JButton disposeBtn;
    private javax.swing.JComboBox doctorCmbx;
    private javax.swing.JLabel doctorLbl;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton helpBtn;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField nursingFeeTxt;
    private javax.swing.JLabel nursingFeelbl;
    private javax.swing.JLabel patientAgeLbl;
    private javax.swing.JTextField patientAgeTxt;
    private javax.swing.JLabel patientGenderLbl;
    private javax.swing.JTextField patientGenderTxt;
    private javax.swing.JLabel patientNameLbl;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JLabel patientNumberLbl;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JCheckBox patientSearchNameChbx;
    private javax.swing.JCheckBox patientSearchNumberChbx;
    private javax.swing.JPanel patientSearchPanel;
    private javax.swing.JScrollPane patientSearchScrollPane;
    private javax.swing.JTable patientSearchTable;
    private javax.swing.JTextField patientSearchTxt;
    private javax.swing.JDialog patientSearchdialog;
    private javax.swing.JPanel patientSearchpanel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel selectionSearchPanel;
    private javax.swing.JLabel spacerlbl;
    private javax.swing.JComboBox targetBedNumberCmbx;
    private javax.swing.JLabel targetBedNumberLbl;
    private javax.swing.JComboBox targetWardCmbx;
    private javax.swing.JLabel targetWardLbl;
    private javax.swing.JLabel targetWingLbl;
    private com.afrisoftech.lib.DatePicker transactionDatePicker;
    private javax.swing.JLabel transferDateLbl;
    private javax.swing.JScrollPane transferReasonScrollPane;
    private javax.swing.JTextPane transferReasonTxt;
    private javax.swing.JLabel wardCodeLbl;
    private javax.swing.JTextField wardCodeTxt;
    private javax.swing.JComboBox wardWingCmbx;
    // End of variables declaration//GEN-END:variables
}
