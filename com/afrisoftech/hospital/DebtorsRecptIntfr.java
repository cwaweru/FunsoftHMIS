/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */
package com.afrisoftech.hospital;

/**
 *
 * @author root
 */
public class DebtorsRecptIntfr extends javax.swing.JInternalFrame {

    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    String cashPoint = null;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;

    public DebtorsRecptIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
        System.out.println("Cashpoint : " + System.getProperty("cashpoint"));
        paymentModeCmb.setSelectedItem("Cash");
        cashPointTxt.setText(getCashPoint());
        shiftNoTxt.setText(getShiftNumber());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        searchButton1 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton51 = new javax.swing.JButton();
        schemeDialog = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton511 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        patientSearchDialog = new javax.swing.JDialog();
        patientSearchPanel = new javax.swing.JPanel();
        patientSearchTxt = new javax.swing.JTextField();
        patientSearchScrollPane = new javax.swing.JScrollPane();
        patientSearchTable = new com.afrisoftech.dbadmin.JTable();
        patientSearchCloseButon = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        paymentModeCmb = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        otherDetailsTxt = new javax.swing.JTextField();
        jPanel211 = new javax.swing.JPanel();
        schemeNameTxt = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        actualPayerTxt = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        receiptByPayerChk = new javax.swing.JCheckBox();
        createNewAccChk = new javax.swing.JCheckBox();
        payerCategoryTxt = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        receiptTxt = new javax.swing.JTextField();
        jPanel212 = new javax.swing.JPanel();
        patientNumberTxt = new javax.swing.JTextField();
        patientSearchButton = new javax.swing.JButton();
        patientNameLbl = new javax.swing.JLabel();
        patientNameTxt = new javax.swing.JTextField();
        patientSelectionCriteriaPanel = new javax.swing.JPanel();
        outPatientChkbx = new javax.swing.JCheckBox();
        inPatientChkbx = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        debtorBalanceTxt = new javax.swing.JFormattedTextField();
        payerMobileTelephoneNumberTxt = new javax.swing.JFormattedTextField();
        payBillNumberTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        drawerNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chequeNoTxt = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        drawerBankTxt = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        amountTxt = new javax.swing.JTextField();
        cashPointTxt = new javax.swing.JTextField();
        shiftNoTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton11 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel.add(jTextField1111, gridBagConstraints);

        jSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });
        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton51.setMnemonic('C');
        jButton51.setText("Close");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        schemeDialog.setModal(true);
        schemeDialog.setUndecorated(true);
        schemeDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel1.add(jTextField11111, gridBagConstraints);

        jSearchTable1.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable1.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });
        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton511.setMnemonic('C');
        jButton511.setText("Close");
        jButton511.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton511ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton511, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        schemeDialog.getContentPane().add(jSearchPanel1, gridBagConstraints);

        patientSearchDialog.setModal(true);
        patientSearchDialog.setUndecorated(true);
        patientSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        patientSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        patientSearchPanel.setLayout(new java.awt.GridBagLayout());

        patientSearchTxt.setToolTipText("Please type at least 4 characters to start search");
        patientSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                patientSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        patientSearchPanel.add(patientSearchTxt, gridBagConstraints);

        patientSearchTable.setToolTipText("Click on the target row to select the patient from the search.");
        patientSearchTable.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        patientSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientSearchTableMouseClicked(evt);
            }
        });
        patientSearchScrollPane.setViewportView(patientSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        patientSearchPanel.add(patientSearchScrollPane, gridBagConstraints);

        patientSearchCloseButon.setMnemonic('C');
        patientSearchCloseButon.setText("Close");
        patientSearchCloseButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSearchCloseButonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchPanel.add(patientSearchCloseButon, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSearchDialog.getContentPane().add(patientSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Debtors Receipts");
        setFrameIcon(null);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jTextField8.setEditable(false);
        jTextField8.setEnabled(false);
        jTextField8.setMinimumSize(new java.awt.Dimension(10, 20));
        jTextField8.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(jTextField8, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter payer details (Search and select a patient number or name if payment is for a particular patient)"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Received From");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel6.setText("Scheme Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel2.setText("Patient Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel8.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        paymentModeCmb.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select DISTINCT initcap(payment_mode) as payment_mode from pb_paymentmodes order by payment_mode"));
        paymentModeCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentModeCmbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(paymentModeCmb, gridBagConstraints);

        jLabel21.setText("Other Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(otherDetailsTxt, gridBagConstraints);

        jPanel211.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel211.setLayout(new java.awt.GridBagLayout());

        schemeNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel211.add(schemeNameTxt, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel211.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel211, gridBagConstraints);

        jLabel5.setText("Payer/Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 1);
        jPanel1.add(actualPayerTxt, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(receiptByPayerChk);
        receiptByPayerChk.setForeground(new java.awt.Color(255, 0, 51));
        receiptByPayerChk.setText("Receipt By Payer");
        receiptByPayerChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptByPayerChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(receiptByPayerChk, gridBagConstraints);

        buttonGroup1.add(createNewAccChk);
        createNewAccChk.setText("Create New Acc.");
        createNewAccChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewAccChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(createNewAccChk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        payerCategoryTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(payerCategoryTxt, gridBagConstraints);

        jLabel22.setText("Receipt No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel22, gridBagConstraints);

        receiptTxt.setEditable(false);
        receiptTxt.setForeground(new java.awt.Color(204, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(receiptTxt, gridBagConstraints);

        jPanel212.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel212.setLayout(new java.awt.GridBagLayout());

        patientNumberTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel212.add(patientNumberTxt, gridBagConstraints);

        patientSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif"))); // NOI18N
        patientSearchButton.setToolTipText("Search");
        patientSearchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        patientSearchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        patientSearchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        patientSearchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        patientSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel212.add(patientSearchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel212, gridBagConstraints);

        patientNameLbl.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(patientNameLbl, gridBagConstraints);

        patientNameTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(patientNameTxt, gridBagConstraints);

        patientSelectionCriteriaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select patient type"));
        patientSelectionCriteriaPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(outPatientChkbx);
        outPatientChkbx.setText("OUT-Patient");
        outPatientChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSelectionCriteriaPanel.add(outPatientChkbx, gridBagConstraints);

        buttonGroup2.add(inPatientChkbx);
        inPatientChkbx.setSelected(true);
        inPatientChkbx.setText("IN-Patient");
        inPatientChkbx.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        patientSelectionCriteriaPanel.add(inPatientChkbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(patientSelectionCriteriaPanel, gridBagConstraints);

        jLabel13.setText("Debtor Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        debtorBalanceTxt.setEditable(false);
        debtorBalanceTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        debtorBalanceTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        debtorBalanceTxt.setText("0.00");
        debtorBalanceTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(debtorBalanceTxt, gridBagConstraints);

        payerMobileTelephoneNumberTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill Payer Telephone No.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 51)));
        payerMobileTelephoneNumberTxt.setForeground(new java.awt.Color(0, 0, 255));
        try {
            payerMobileTelephoneNumberTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("254-7##-######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        payerMobileTelephoneNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerMobileTelephoneNumberTxtActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(payerMobileTelephoneNumberTxt, gridBagConstraints);

        payBillNumberTxt.setEditable(false);
        payBillNumberTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        payBillNumberTxt.setText(com.afrisoftech.lib.CashShiftNumberFactory.getPayBillNumber(connectDB)
        );
        payBillNumberTxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PayBill Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 51)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(payBillNumberTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 8.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Receipt details"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Drawer's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(drawerNameTxt, gridBagConstraints);

        jLabel4.setText("Cheque Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(chequeNoTxt, gridBagConstraints);

        jLabel54.setText("Drawer's Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel54, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(drawerBankTxt, gridBagConstraints);

        jLabel53.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel3.add(jLabel53, gridBagConstraints);

        amountTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        amountTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        amountTxt.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(amountTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        cashPointTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(cashPointTxt, gridBagConstraints);

        shiftNoTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(shiftNoTxt, gridBagConstraints);

        jLabel10.setText("Shift No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel10, gridBagConstraints);

        jLabel11.setText("Cash Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(datePicker1, gridBagConstraints);

        jLabel12.setText("Cheque Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel12, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButton1.setMnemonic('p');
        jButton1.setText("Save Debtors Receipt details and print");
        jButton1.setToolTipText("Click here to enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton1, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Reprint");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton6, gridBagConstraints);

        jButton3.setMnemonic('l');
        jButton3.setText("Clear form");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton3, gridBagConstraints);

        jButton4.setMnemonic('C');
        jButton4.setText("Close form");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton5, gridBagConstraints);

        jButton11.setMnemonic('s');
        jButton11.setText("Save Receipt details");
        jButton11.setToolTipText("Click here to enter data");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jButton11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel4, gridBagConstraints);

        setBounds(0, 0, 1117, 452);
    }// </editor-fold>//GEN-END:initComponents

    private void createNewAccChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewAccChkActionPerformed
        this.schemeNameTxt.setEditable(true);        // Add your handling code here:
    }//GEN-LAST:event_createNewAccChkActionPerformed

    private void receiptByPayerChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptByPayerChkActionPerformed
        com.afrisoftech.accounting.PayerRecptIntfr other = new com.afrisoftech.accounting.PayerRecptIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        other.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_receiptByPayerChkActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.util.Date periodFrom = null;
        java.util.Date periodTo = null;
        java.sql.Timestamp datenowSql = null;

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("SELECT period_from,period_to FROM period_setup WHERE period_status ilike 'Open' AND '" + datePicker1.getDate() + "' BETWEEN period_from AND period_to");
            while (rsetf.next()) {
                periodFrom = rsetf.getDate(1);
                periodTo = rsetf.getDate(2);
            }

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(sq.getMessage());

        }

        if (datePicker1.getDate().before(periodFrom) || datePicker1.getDate().after(periodTo)) {
            javax.swing.JOptionPane.showMessageDialog(this, "You cannot save before or after the accounting period set \n Contact head of accounts".toUpperCase(), "Caution Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } else {

            java.sql.Connection con;
            String glCode = null;
            String bankAcc = null;
            String User1 = null;
            String transNo = null;
            String rcode = null;
            String rname = null;
            String accNo = null;
            String receiptNo = null;
            String receiptNo2 = null;
            String mdepartment = null;
            try {
                connectDB.setAutoCommit(false);
                java.sql.Statement stm121xx = connectDB.createStatement();
                java.sql.ResultSet rse121xx = stm121xx.executeQuery("select shift_no from ac_shifts WHERE user_name = current_user and status = 'Running' AND cash_point = '" + cashPointTxt.getText() + "'");
                while (rse121xx.next()) {

                    shiftNoTxt.setText(rse121xx.getString(1));

                }

                //receiptNo1 = com.afrisoftech.lib.DateLables.getDateLabel();
                java.sql.Statement stm12f = connectDB.createStatement();
                java.sql.ResultSet rse12f = stm12f.executeQuery("select current_timestamp");
                while (rse12f.next()) {
                    datenowSql = rse12f.getTimestamp(1);
                }
                java.sql.Statement stm1211 = connectDB.createStatement();
                java.sql.ResultSet rse1211 = stm1211.executeQuery("select activity,code from pb_activity where activity_category ='RC'");
                while (rse1211.next()) {
                    rname = rse1211.getObject(1).toString();
                    rcode = rse1211.getObject(2).toString();
                }
                java.sql.Statement stm3 = connectDB.createStatement();
                java.sql.ResultSet rse3 = stm3.executeQuery("SELECT gl_code,gl_name FROM ac_schemes where account_no =  '" + jTextField8.getText() + "'");
                while (rse3.next()) {
                    glCode = rse3.getObject(1).toString();
                    bankAcc = rse3.getObject(2).toString();
                }
                java.sql.Statement ps = connectDB.createStatement();
                java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
                while (rst.next()) {
                    transNo = rst.getObject(1).toString();
                    //receiptNo = com.afrisoftech.lib.DateLables.getDateLabel();
                    receiptNo = "D" + rst.getObject(1).toString();
                }
                java.sql.Statement pst = connectDB.createStatement();
                java.sql.ResultSet rstt = pst.executeQuery("select user");
                while (rstt.next()) {
                    User1 = rstt.getObject(1).toString();
                }

                java.sql.Statement stm121 = connectDB.createStatement();
                java.sql.ResultSet rse121 = stm121.executeQuery("select activity,code,department from pb_activity where code ='" + glCode + "'");
                while (rse121.next()) {

                    //glAcc = rse121.getObject(1).toString();
                    mdepartment = rse121.getObject(3).toString();
                }
                /*    java.sql.Statement pss = connectDB.createStatement();
                 java.sql.ResultSet rsts = pss.executeQuery("select nextval('receipt_no_seq')");
                 while (rsts.next()){
                 rsts.getObject(1).toString();
                 receiptNo = rsts.getObject(1).toString();
                 }
                 */

                if (this.createNewAccChk.isSelected()) {

                    java.sql.Statement psst = connectDB.createStatement();
                    java.sql.ResultSet rstss = psst.executeQuery("select 'DB'||nextval('scheme_seq')");
                    while (rstss.next()) {
                        // rsts.getObject(1).toString();

                        accNo = rstss.getObject(1).toString();
                        jTextField8.setText(accNo);
                    }

                    java.sql.PreparedStatement pstmtg = connectDB.prepareStatement("insert into ac_schemes(payer_name,scheme_name,allowed,account_no,scheme_limit,expiry_date,term_date,exclusions) values(?,?,?, ?, ?, ?, ?,?)");
                    pstmtg.setString(1, payerCategoryTxt.getText());
                    pstmtg.setString(2, schemeNameTxt.getText());
                    pstmtg.setString(3, "Both");
                    pstmtg.setString(4, accNo);
                    pstmtg.setString(5, "200000");
                    pstmtg.setString(6, "2010-12-31");
                    pstmtg.setString(7, "2010-12-31");
                    pstmtg.setString(8, "{}");
                    pstmtg.executeUpdate();
                    System.out.println(accNo);
                }

                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_cash_collection values(?,?,?,initcap(?),?,?, ?, initcap(?), initcap(?), ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?)");
                pstmt2.setObject(1, glCode);
                pstmt2.setString(5, paymentModeCmb.getSelectedItem().toString());
                pstmt2.setString(2, otherDetailsTxt.getText());
                pstmt2.setString(3, jTextField8.getText());
                pstmt2.setString(4, schemeNameTxt.getText());
                pstmt2.setString(6, "");
                pstmt2.setString(7, "");
                pstmt2.setString(8, drawerNameTxt.getText());
                pstmt2.setString(9, drawerBankTxt.getText());
                pstmt2.setString(10, rcode);
                pstmt2.setString(12, receiptNo);
                pstmt2.setString(11, chequeNoTxt.getText());
                pstmt2.setString(13, "");
                pstmt2.setString(14, actualPayerTxt.getText());
                pstmt2.setDouble(16, java.lang.Double.valueOf(amountTxt.getText()));
                pstmt2.setObject(15, "Receipts");
                pstmt2.setDouble(17, 0.00);
                pstmt2.setDate(18, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                pstmt2.setString(19, transNo);
                pstmt2.setBoolean(22, false);
                pstmt2.setBoolean(20, false);
                pstmt2.setBoolean(21, false);
                pstmt2.setObject(26, null);
                pstmt2.setString(23, User1);
                pstmt2.setString(24, cashPointTxt.getText());
                pstmt2.setString(25, shiftNoTxt.getText());
                pstmt2.setDate(26, null);
                pstmt2.setDouble(27, 1);
                pstmt2.setDate(28, null);
                pstmt2.setTimestamp(29, datenowSql);
                pstmt2.setString(30, mdepartment);
                pstmt2.executeUpdate();

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into ac_debtors values(?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)");
                pstmt.setString(1, glCode);
                pstmt.setString(2, payerCategoryTxt.getText());
                pstmt.setString(4, patientNumberTxt.getText());
                pstmt.setString(3, actualPayerTxt.getText());
                pstmt.setString(5, schemeNameTxt.getText());
                pstmt.setString(7, jTextField8.getText());
                pstmt.setString(6, otherDetailsTxt.getText());
                pstmt.setString(8, receiptNo);
                pstmt.setString(9, chequeNoTxt.getText());
                pstmt.setString(10, "");
                pstmt.setString(11, transNo);
                pstmt.setString(12, "Receipts");
                pstmt.setDouble(13, 0.00);
                pstmt.setDouble(14, java.lang.Double.valueOf(amountTxt.getText()));//credit
                pstmt.setString(16, chequeNoTxt.getText());
                pstmt.setDate(15, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                pstmt.setObject(17, bankAcc);
                pstmt.setBoolean(18, true);
                pstmt.setBoolean(19, true);
                pstmt.setString(20, User1);
                pstmt.setString(21, "");
                pstmt.setDouble(22, 0.00);
                pstmt.setBoolean(23, true);
                pstmt.setDouble(24, java.lang.Double.valueOf(amountTxt.getText()));
                pstmt.executeUpdate();

                java.sql.PreparedStatement psr = connectDB.prepareStatement("INSERT INTO ac_receipts_no("
                        + "account_no, account_name, date, amount, shift_no, "
                        + "cash_point, reference, user_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                psr.setString(1, jTextField8.getText());
                psr.setString(2, schemeNameTxt.getText());
                psr.setDate(3, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                psr.setDouble(4, java.lang.Double.valueOf(amountTxt.getText()));
                psr.setInt(5, java.lang.Integer.valueOf(shiftNoTxt.getText()));
                psr.setString(6, cashPointTxt.getText());
                psr.setString(7, receiptNo);
                psr.setString(8, User1);
                psr.executeUpdate();

                java.sql.Statement ps1q = connectDB.createStatement();
                java.sql.ResultSet rst1q = ps1q.executeQuery("SELECT LPAD(receipt_no::TEXT,8,'0'::TEXT) FROM ac_receipts_no WHERE reference = '" + receiptNo + "'");
                while (rst1q.next()) {
                    receiptNo2 = rst1q.getObject(1).toString();
                }

                java.sql.PreparedStatement pstmt112 = connectDB.prepareStatement("UPDATE ac_cash_collection SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo + "'");
                pstmt112.executeUpdate();

                java.sql.PreparedStatement pstmt112x = connectDB.prepareStatement("UPDATE ac_debtors SET receipt_no = '" + receiptNo2 + "' WHERE receipt_no = '" + receiptNo + "'");
                pstmt112x.executeUpdate();

                javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully", "Confirmation Message!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                receiptTxt.setText(receiptNo2);

                connectDB.commit();
                connectDB.setAutoCommit(true);

                javax.swing.JOptionPane.showMessageDialog(this, "Insert Done Successfully", "Comfirmation Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                jButton1.setEnabled(false);
                jButton11.setEnabled(false);
                this.createNewAccChk.setSelected(false);
                this.schemeNameTxt.setEditable(false);
                jLabel7.setForeground(java.awt.Color.blue);
                jLabel7.setText("Insert successful");
            } catch (java.sql.SQLException sq) {
                sq.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                jLabel7.setForeground(java.awt.Color.red);
                jLabel7.setText("Sorry. Please Check The Fields");
            }

        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String receiptNo = null;
        String nodetails = null;
        try {
            connectDB.setAutoCommit(false);

            // java.sql.Statement ps1 = connectDB.createStatement();
            // java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            //   java.sql.ResultSet rst1 = ps1.executeQuery("select currval('receipt_no_seq')");
            //while (rst1.next()){
            receiptNo = receiptTxt.getText();
            //}

            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nodetails from receipt_pref");
            while (rst11.next()) {
                nodetails = rst11.getObject(1).toString();
            }

            String rct = null;
            if (receiptNo != null) {
                java.sql.Statement ps112 = connectDB.createStatement();
                java.sql.ResultSet rst112 = ps112.executeQuery("select rct_format from receipt_pref");
                while (rst112.next()) {
                    rct = rst112.getObject(1).toString();
                }
                if (nodetails.equalsIgnoreCase("NoDetails")) {

                    com.afrisoftech.txtreports.IPDebtorsReceiptsTxt policy = new com.afrisoftech.txtreports.IPDebtorsReceiptsTxt(connectDB, otherDetailsTxt.getText(), actualPayerTxt.getText().toString(), schemeNameTxt.getText().toString(), amountTxt.getText(), receiptNo, paymentModeCmb.getSelectedItem().toString(), chequeNoTxt.getText());
                } else {
                    if (nodetails.equalsIgnoreCase("Prints") && rct.equalsIgnoreCase("Pdf")) {
                        com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
                        policy.ReceiptsPdf(connectDB, receiptNo);
                        //  com.afrisoftech.accounting.OtherReceiptsPdf policy = new com.afrisoftech.accounting.OtherReceiptsPdf();
                        //  policy.OtherReceiptsPdf(connectDB,jTextField111.getText(), jTextField4.getText(),jTextField3.getText(),receiptNo,jComboBox11.getSelectedItem().toString(),jTextField2.getText());

                    } else {
                        //   com.afrisoftech.txtreports.InpatientReceiptsTxt policy = new com.afrisoftech.txtreports.InpatientReceiptsTxt(connectDB, jTextField9.getText(),jTextField20.getText(),jTextField17.getText(),receiptNo1,this.jComboBox411.getSelectedItem().toString(),jTextField221.getText(),this.jTextField1.getText());
                        com.afrisoftech.txtreports.DebtorsReceiptsTxt policy = new com.afrisoftech.txtreports.DebtorsReceiptsTxt(connectDB, otherDetailsTxt.getText(), actualPayerTxt.getText().toString(), schemeNameTxt.getText().toString(), amountTxt.getText(), receiptNo, paymentModeCmb.getSelectedItem().toString(), chequeNoTxt.getText());
                    }
                }

            // com.afrisoftech.txtreports.DebtorsReceiptsTxt policy = new com.afrisoftech.txtreports.DebtorsReceiptsTxt(connectDB,jTextField111.getText(), jTextField4.getText().toString(), jTextField361.getText().toString(),jTextField3.getText(),receiptNo,jComboBox11.getSelectedItem().toString(),jTextField2.getText());
                //com.afrisoftech.accounting.OtherReceiptsPdf policy = new com.afrisoftech.accounting.OtherReceiptsPdf();
                //policy.OtherReceiptsPdf(connectDB,jTextField111.getText(), jTextField4.getText(),jTextField3.getText(),receiptNo,jComboBox11.getSelectedItem().toString(),jTextField2.getText());
                // com.afrisoftech.reports.DebtorsReceiptsPdf policy = new com.afrisoftech.reports.DebtorsReceiptsPdf();
                // policy.DebtorsReceiptsPdf(connectDB,jTextField361.getText(), jTextField4.getText(),jTextField3.getText(),receiptNo,jComboBox11.getSelectedItem().toString(),jTextField2.getText());
            }

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);

        }

        // OtherReceiptsPdf policy = new OtherReceiptsPdf();
        // policy.OtherReceiptsPdf(connectDB,jTextField361.getText(), jTextField36.getText(),jTextField3.getText(),receiptNo,jComboBox11.getSelectedItem().toString(),jTextField2.getText());
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButton1Clicked();
        jButton1.setEnabled(true);
        jButton11.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void jButton511ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton511ActionPerformed
        schemeDialog.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton511ActionPerformed
    private void searchButton1Clicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.schemeNameTxt.getLocationOnScreen();

        schemeDialog.setSize(400, 200);

        schemeDialog.setLocation(point);

        schemeDialog.setVisible(true);
    }
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        schemeNameTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 1).toString());
        actualPayerTxt.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select payer_name from ac_schemes where account_no ='" + jTextField8.getText() + "'");
            while (rset.next()) {
                payerCategoryTxt.setText(rset.getObject(1).toString());
            }
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT sum(debit-credit) FROM ac_debtors WHERE account_no = ?");
            pstmt.setString(1, jTextField8.getText());
            java.sql.ResultSet rsets = pstmt.executeQuery();
            while (rsets.next()) {
                debtorBalanceTxt.setValue(rsets.getDouble(1));
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
        }

        schemeDialog.dispose();
        this.jButton11.setEnabled(true);
        this.jButton1.setEnabled(true);

        drawerBankTxt.setText("");
        //        jTextField5.setText("");
        //        jTextField12.setText("");
        //        jTextField4.setText("");
        //   jTextField11.setText("");
        //        jTextField31.setText("");
        //       jTextField5.setText("");
        amountTxt.setText("");
        drawerNameTxt.setText("");
        chequeNoTxt.setText("");
        //  jComboBox131.setSelectedItem(null);
        paymentModeCmb.setSelectedItem(null);
        schemeDialog.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked

    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if (jTextField11111.getCaretPosition() < 1) {

            System.out.println("Nothing");
        } else {
            jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select (scheme_name) as scheme,account_no from ac_schemes where scheme_name ILIKE '%" + jTextField11111.getText().toString() + "%' AND closed = false "));

            jSearchTable1.setShowHorizontalLines(false);
            jSearchScrollPane1.setViewportView(jSearchTable1);

        }         // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        jSearchDialog.dispose();            // Add your handling code here:
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        payerCategoryTxt.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());

        jSearchDialog.dispose();         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if (jTextField1111.getCaretPosition() < 3) {

            System.out.println("Nothing");
        } else {

            jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select (scheme_manager) as scheme from ac_scheme_providers where scheme_manager ILIKE '" + jTextField1111.getText().toString() + "%'"));

            /* try {
             // searchRowSet.execute("select scheme_manager as scheme from ac_scheme_providers");
            
             searchRowSet.execute("select (scheme_manager) as scheme from ac_scheme_providers where scheme_manager ILIKE '"+jTextField1111.getText().toString()+"%'");
            
             jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
             new org.netbeans.lib.sql.models.TableModel.Column("scheme", "Scheme", false)
            
             }));
             */
            jSearchTable.setShowHorizontalLines(false);
            jSearchScrollPane.setViewportView(jSearchTable);

        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    private void searchButtonClicked() {

        System.out.println("Showing dialog");

        java.awt.Point point = this.payerCategoryTxt.getLocationOnScreen();

        jSearchDialog.setSize(600, 200);

        jSearchDialog.setLocation(point);

        jSearchDialog.setVisible(true);

    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //  jTextField31.setText("");
        //        jTextField5.setText("");
        amountTxt.setText("");
        drawerNameTxt.setText("");
        chequeNoTxt.setText("");
        jLabel7.setText(" ");
        //jButton1.setEnabled(true);
        this.jButton11.setEnabled(true);
        this.jButton1.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void paymentModeCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentModeCmbActionPerformed
        this.jButton1.setEnabled(true);
        // Add your handling code here:
    }//GEN-LAST:event_paymentModeCmbActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.getContentPane().removeAll();
        this.initComponents();
        this.setSize(this.getParent().getSize());
//        drawerBankTxt.setText("");
//
//        amountTxt.setText("");
//        drawerNameTxt.setText("");
//        chequeNoTxt.setText("");
//
//        paymentModeCmb.setSelectedItem(null);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//  
//        java.lang.Thread debtorsCash = new DebtorsCashThread();
//        
//        debtorsCash.start();
//        jButton11.setEnabled(false);
//        jButton1.setEnabled(false);
        // java.util.Calendar calendar = java.util.Calendar.getInstance();

        // long dateNow = calendar.getTimeInMillis();
        // java.sql.Date datenowSql= new java.sql.Date(dateNow);
        // System.out.println(datenowSql.toString());
        java.sql.Connection con;
        String glCode = null;
        String bankAcc = null;
        String User1 = null;
        String transNo = null;
        String rcode = null;
        String rname = null;
        String nodetails = null;
        String receiptNo = null;
        //    try {
        jButton11ActionPerformed(evt);
        jButton6ActionPerformed(evt);

        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void patientSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSearchButtonActionPerformed

        System.out.println("Showing dialog");

        java.awt.Point point = this.patientNumberTxt.getLocationOnScreen();

        patientSearchDialog.setSize(600, 200);

        patientSearchDialog.setLocation(point);

        patientSearchDialog.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchButtonActionPerformed

    private void patientSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_patientSearchTxtCaretUpdate
        if (patientSearchTxt.getText().length() > 3) {
            if (outPatientChkbx.isSelected()) {
                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,
                        "SELECT DISTINCT patient_no, name, unit_number FROM patient_select WHERE patient_no ilike '%" + patientSearchTxt.getText() + "%'"
                        + " or name ilike '%" + patientSearchTxt.getText() + "%' or unit_number ilike '%" + patientSearchTxt.getText() + "%'"));
            } else {
                patientSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,
                        "SELECT DISTINCT patient_no, name, unit_number FROM inpatient_list WHERE patient_no ilike '%" + patientSearchTxt.getText() + "%'"
                        + " or name ilike '%" + patientSearchTxt.getText() + "%' or unit_number ilike '%" + patientSearchTxt.getText() + "%'"));
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchTxtCaretUpdate

    private void patientSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientSearchTableMouseClicked
        patientNumberTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 0).toString());
        patientNameTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 1).toString());
        actualPayerTxt.setText(patientSearchTable.getValueAt(patientSearchTable.getSelectedRow(), 1).toString());
        patientSearchDialog.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchTableMouseClicked

    private void patientSearchCloseButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSearchCloseButonActionPerformed

        patientSearchDialog.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchCloseButonActionPerformed

    private void payerMobileTelephoneNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerMobileTelephoneNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payerMobileTelephoneNumberTxtActionPerformed
    public java.lang.String getShiftNumber() {

        try {

            java.sql.Statement stmt = connectDB.createStatement();

            java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '" + getCashPoint() + "' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");
            //java.sql.ResultSet rset = stmt.executeQuery("SELECT shift_no FROM ac_shifts WHERE cash_point = '" + cashPoint + "' AND user_name = current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset.next()) {

                shift_no = rset.getString(1);

            }

        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        return shift_no;

    }

    public java.lang.String getCashPoint() {

        try {

            java.sql.Statement stmtf = connectDB.createStatement();
            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
            while (rsetf.next()) {
               
                cashPoint = rsetf.getObject(1).toString();
                cashPointTxt.setText(cashPoint);
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }

        return cashPoint;

    }

    class DebtorsCashThread extends java.lang.Thread {

        public void run() {
            java.sql.Connection con;
            String glCode = null;
            String bankAcc = null;
            String User1 = null;
            String transNo = null;
            String rcode = null;
            String rname = null;
            String nodetails = null;
            String receiptNo = null;
            //    try {
            jButton11.doClick();
            jButton6.doClick();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actualPayerTxt;
    private javax.swing.JTextField amountTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cashPointTxt;
    private javax.swing.JTextField chequeNoTxt;
    private javax.swing.JCheckBox createNewAccChk;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JFormattedTextField debtorBalanceTxt;
    private javax.swing.JTextField drawerBankTxt;
    private javax.swing.JTextField drawerNameTxt;
    private javax.swing.JCheckBox inPatientChkbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton511;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField otherDetailsTxt;
    private javax.swing.JCheckBox outPatientChkbx;
    private javax.swing.JLabel patientNameLbl;
    private javax.swing.JTextField patientNameTxt;
    private javax.swing.JTextField patientNumberTxt;
    private javax.swing.JButton patientSearchButton;
    private javax.swing.JButton patientSearchCloseButon;
    private javax.swing.JDialog patientSearchDialog;
    private javax.swing.JPanel patientSearchPanel;
    private javax.swing.JScrollPane patientSearchScrollPane;
    private javax.swing.JTable patientSearchTable;
    private javax.swing.JTextField patientSearchTxt;
    private javax.swing.JPanel patientSelectionCriteriaPanel;
    private javax.swing.JTextField payBillNumberTxt;
    private javax.swing.JTextField payerCategoryTxt;
    private javax.swing.JFormattedTextField payerMobileTelephoneNumberTxt;
    private javax.swing.JComboBox paymentModeCmb;
    public javax.swing.JCheckBox receiptByPayerChk;
    private javax.swing.JTextField receiptTxt;
    private javax.swing.JDialog schemeDialog;
    private javax.swing.JTextField schemeNameTxt;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField shiftNoTxt;
    // End of variables declaration//GEN-END:variables
}
