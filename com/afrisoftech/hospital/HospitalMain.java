/*
 * HospitalMain.java,  Originally sacco.java
 *
 * Created on August 13, 2002, 12:54 AM
 *
 * This is the Kernel of the Funsoft HMIS system
 *
 * @author Charles Wanjema Waweru <cwaweru@systempartners.biz> -- [Lead Developer and Chief Funsoft Software/System Architect]
 * @author Rugendo Kego Kamakia <kamakia@systempartners.biz> -- [Chief Business Logic Contributor]
 * @author Francis King'oi Waweru <francis@systempartners.biz>
 * @author Peter Ndung'u Waweru <peter.waweru@systempartners.biz>
 *
 */
//43359
//531849
package com.afrisoftech.hospital;

import biz.systempartners.claims.Claim;
import static com.afrisoftech.hospinventory.StockMain.medicdspane;
import com.afrisoftech.lib.UserName;
import com.afrisoftech.nursing.NursingWards;
import com.afrisoftech.reports.UserAccountsDialog;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import com.inet.jortho.SpellChecker;
import com.inet.jortho.FileUserDictionary;
import java.io.UnsupportedEncodingException;
//import org.openide.util.Exceptions;

/**
 *
 * @author Charles Wanjema Waweru <cwaweru@systempartners.biz>
 */
public class HospitalMain extends javax.swing.JFrame implements java.lang.Runnable {

    public static boolean discreetReceipt = false;
    public static String patientID = null;
    public static String patientName = null;

    public static String mobileTelephone = null;
    public static String mobileTxID = null;
    public static String mobileTxType = null;
    public static boolean mobileTxTest = false;
    public static boolean mobileTxAutoInsert = false;

    private String newline = "\n";
    private String newTab = "\t";
    boolean isRunning = true;
    biz.systempartners.claims.ClaimsMsgShowSMS msgShow = null;
    boolean allowed2Access = false;
    boolean threadSales = false;
    boolean cashierRunning = false;
    boolean cashRunning = false;
    boolean patientRunning = false;
    boolean loadingMode = false;
    static java.lang.String psWord = null;
    boolean domainsReset = false;

    /**
     *
     */
    public static boolean allowedAccess = false;
    boolean shiftStatus = false;
    boolean stopStatus = false;
    boolean aliveStatus = false;
    boolean billPaymentIntfr_isShowing = false;
    private java.lang.Thread patientThread;
    private java.lang.Thread cashThread;
    private ProgressThread progressThread;
    private javax.swing.JProgressBar progressBar;
    javax.swing.ProgressMonitor progressMonitor;
    private javax.swing.Action openShiftAction;
    private javax.swing.Action patientRegistrationAction;
    private com.afrisoftech.dbadmin.TableView tableView;
    //   private javax.swing.ProgressMonitor progressMonitor;
    private com.afrisoftech.dbadmin.GraphicalView graphicalView;

    /**
     *
     */
    public com.afrisoftech.lib.LoginToPayrollModule payrollKey = null;
    private java.lang.Object[][] tableData = null;

    /**
     *
     */
    public java.util.Vector tableColumnsVector = null;
    static java.lang.String myAppOutFileUrl;

    /**
     *
     */
    public static java.util.Properties appProp;

    /**
     *
     */
    public static java.util.Properties appOutProp;

    /**
     *
     */
    public java.awt.SystemTray systemTray = null;
    String cashPoint = null;
    String cashPointPett = null;
    //    private java.lang.Thread activePaneThread;
    public static boolean mobilePaid = false;
    int Outorders = 4;
    int PaySlip = 0;
    int treeRowCount = 0;
    int P9 = 1;
    int Deductions = 2;
    int ChqPayments = 3;
    int PayeList = 4;
    int CashPayments = 5;
    int SchemesContr = 6;
    int NetPay = 7;
    int DeptNetPay = 8;
    int PayMaster = 9;
    int Tax = 10;
    int StaffEarning = 11;
    int SaccoList = 12;
    int EmpList = 13;   //    java.lang.String cashpoint = "cashpoint001";
    javax.swing.ImageIcon imgIcon;
    int GITransactions = 0;
    int BalanceSheet = 1;
    int ProfitLoss = 2;
    int CashBookList = 3;
    int TransactionsList = 4;
    int TrialBalance = 5;
    int PatList = 6;
    int ReceiptperPat = 26;
    int DetailedTrialbalance = 8;
    int SharesTransactions = 9;
    int DetailedPatStmt = 10;
    int DepartmentRev = 11;
    int PatientStatement = 12;
    int ReceiptsList = 13;
    int CreditorsA = 14;
    int DailyRev = 15;
    int PatientBill = 16;
    int ApprVouch = 17;
    int PayAwtAppr = 18;
    int CreditorsInv = 19;
    int ShiftNo = 20;
    int FinalInv = 21;
    int AccntStatement = 22;
    int NHIFAccntStatement = 22222;
    int Payments = 23;
    int Bookings = 24;
    int DebtStmPerSchemeDirect = 7000;
    int TotalReceipts = 25;
    int ReceiptsCopy = 26;
    int Debtors = 27;
    int DoctorsLedger = 28;
    int InpatDiag = 29;
    int StoresRev = 30;
    int DeptIncExp = 31;
    int PatPerDept = 32;
    int PetyCash = 33;
    int RaisePetyCash = 34;
    int SuppCreditorsInv = 36;
    int GRT = 3600;
    int TransPerAcc = 35;
    int OutPatientBill = 38;
    int Creditors = 37;
    int PayerInv = 39;
    int DebtorsStmt = 40;
    int SubmStmt = 41;
    int InvPerSchm = 42;
    int AttSheet = 43;
    int DischSheet = 44;
    int InPatAttSheet = 45;
    int DetStmt = 46;
    int CredtStmt = 47;
    int DocStmt = 48;
    int InvByInv = 49;
    int NhifCredits = 50;
    int AgeingByPayer = 51;
    int DocVouch = 52;
    int Vouch = 53;
    int OtherVouch = 54;
    int PettyVouch = 55;
    int FinalInPatInv = 56;
    int StoreSales = 57;
    int UnFinInv = 58;
    int FinInv = 59;
    int DebtorsRct = 60;
    int TotalSchemeInv = 61;
    int PatBal = 62;
    int RevRep = 64;
    int CashSaleRep = 65;
    int TotalInpatRecp = 66;
    int PayerRct = 67;
    int InvPerCreditors = 68;
    int PaymtsPerCreditors = 69;
    int NhifInv = 70;
    int OpRev = 71;
    int IpRev = 72;
    int OpRevBrk = 73;
    int IpRevByAcc = 74;
    int OpRevByAcc = 75;
    int DocPaidInv = 77;
    int DocPaidCashInv = 78;
    int Expenses = 79;
    int FinalInPatInvTotal = 80;
    int FinalInPatInvCash = 81;
    int AdmissionSheet = 82;
    int TimeLog = 83;
    int PharmPerfom = 84;
    int AllocRep = 85;
    int SupplierInvoices = 87;
    int LabResults = 89;
    int PatLabResults = 9011;
    int PatTimeLog = 91;
    int PatDiag = 92;
    int SchemeStaff = 93;
    int DrugsPrbd = 94;
    int DoctorsStmt = 98;
    int AllocSum = 99;
    int DebtAllocSum = 100;
    int UnAllocSum = 101;
    int DebtStmtDet = 102;
    int AppInvSch = 104;
    int UnAppInvSch = 105;
    int DebtStmtAppr = 106;
    int DebtStmtUnAppr = 107;
    int Dispatch = 108;
    int DispatchPerScm = 109;
    int DispatchListing = 110;
    int DispatchPerDebt = 111;
    int DoctorsVouch = 112;
    int DoctorsVouchDet = 113;
    int DoctorsPayments = 114;
    int PaymentsPerDoctor = 115;
    int Wht = 116;
    int WhtPerDoc = 117;
    int PayerAgeingSumm = 118;
    int PettyCashShift = 119;
    int PaymentsPerDoctorSumm = 120;
    int DoctorStmUnPaid = 121;
    int UncollectedShifts = 122;
    int DebtorsStmtBrk = 123;
    int UnDispInv = 124;
    int SalesBelowMk = 125;
    int ProvSumm = 126;
    int ProvPerDebtor = 127;
    int ProvPerSchm = 128;
    int DocEarnDeductions = 129;
    int DoctorStmScm = 130;
    int DocStmtPerDebtor = 131;
    int DocPaidupPerDebtor = 132;
    int DocPaidupPerScm = 133;
    int ShiftsTotal = 134;
    int TransByacc = 135;
    int NhifDisp = 136;
    int ScmAllocSumm = 137;
    int DebtAllocSumm = 138;
    int FinalInvBal = 139;
    int PayerAllocSumm = 140;
    int DispInvSumm = 141;
    int DebtOSBAlSumm = 142;
    int AllocationDetail = 143;
    int UnpaidDisp = 144;
    int BankRecc = 145;
    int UnReconcItems = 146;
    int UnReconcItemsPerbk = 148;
    int FinalInvSumm = 149;
    int BankingPerBK = 150;
    int BankingSumm = 151;
    int SchemeSales = 152;
    int WHTSUMM = 153;
    int AttendPerScm = 156;
    int DiagSumm = 157;
    int StmtSummPerDebt = 158;
    int InpatBillSamm = 163;
    int CreditNotes = 166;
    int CancelledChqs = 167;
    int WardOccSt = 168;
    int DispPerPayerSumm = 169;
    int DetInvByInv = 170;
    int FinInDetInv = 171;
    int DebtStmSummary = 172;
    int FinalInPatCredit = 173;
    int OpCredit = 174;
    int AllocBychq = 175;
    int AttPerscmDet = 176;
    int CreditorsStmt = 180;
    int InvPerCreditorDisc = 181;
    int Paymentpercrdet = 182;
    int PayerActAcc = 183;
    int BankRecDiscr = 188;
    int ConfDisp = 189;
    int ShiftDet = 190;
    int DebtCollector = 192;
    int TransSumm = 193;
    int RevPrices = 194;
    int DocProv = 195;
    int DocProvSumm = 196;
    int DocScmProvSumm = 197;
    int DebtCredt = 198;
    int ScmPerf = 211;
    int PayerPfm = 213;
    int Journals = 216;
    int PymStmt = 217;
    int WrtByScm = 219;
    int ConfBookings = 220;
    int PaidBills = 221;
    int AmbulRep = 222;
    int DispConfPerScm = 224;
    int DispConfPerPayer = 225;
    int ScmAmm = 226;
    int PayerStaffAmd = 228;
    int WrtSumm = 229;
    int CasFlowOeprt = 230;
    int DebtCollSumm = 232;
    int ScmSalesSumm = 233;
    int AnnualTb = 234;
    int AnnualPl = 235;
    int PayerAllocDet = 236;
    int Ddnote = 237;
    int AnnualPayerAg = 200;
    int AnnualPayerAgSumm = 201;
    int OpAttSumm = 204;
    int CorporateTax = 500;
    int TaxReturn = 501;
    int AnnualDebtors = 502;
    int WeeklyRev = 503;
    int DailysRev = 504;
    int YearlyRev = 505;
    int MonthlyRev = 506;
    int QuarterlyRev = 507;
    int CashAnalysis = 508;
    int DiagnosisAnalysis = 509;
    int MonthlyDiagSummary = 510;
    int MonthlylabSummary = 51076;
    int MonthlyxraySummary = 51077;
    int WeeklySummaryRev = 511;
    int IpAnalySummaryRev = 512;
    int eyeOptSumm = 20447;
    int AieB = 513;
    int MonthlyRevComp = 514;
    int QuarterlyRevComp = 515;
    int labResults = 516;
    int journalInd = 517;
    int InvByInvTxt = 518;
    int InvIpTxt = 519;
    int interimTxt = 520;
    int ProfitLossTxt = 521;
    int IpUnFinInv = 522;
    int TrialbalanceMvt = 523;
    int ApproveTB = 524;
    int DetSchStmt = 525;
    int DebtStmTxt = 526;
    int docbals = 527;
    int login2payroll = 528;
    int DebtStmPerScheme1 = 529;
    int CreditorsAgeingByCat = 1331;
    int PayrollLedger = 1332;
    int LoanStmt = 4701;
    int LoanStockAgeing = 4702;
    int DebtCrNote = 5203;
    int RsbClaimsByScm = 5206;
    int RtClaimsByScm = 5205;
    int RtClaimsSumm = 5204;
    int PaymentsSumm = 5207;
    int CreditsSumm = 5209;
    int Births = 5211;
    int admByWard = 5212;
    int SchmDet = 5213;
    int PayerTnover = 5215;
    int MarketerTnover = 5216;
    int IPDays = 5217;
    int CashSalesBrd = 5122;
    int Deaths = 5220;
    int Sickoffs = 5221;
    int DetInvByInv_1 = 17770;
    int ShiftRef = 5222;
    int ShiftBrd = 1901;
    int Rctbwk = 5223;
    int Fpsumm = 5224;
    int FperCate = 5225;
    int PettyCashClaim = 5226;
    int PettyCashShiftSumm = 5227;
    int PettyCashShiftPay = 5228;
    int NhifCrompre = 5229;
    int PettySum = 5230;
    int SummaryPerPoint = 5231;
    int RcptSummaryPerPoint = 5232;
    int DiagByDoc = 5246;
    int FperType = 5247;
    int FpContracept = 5248;
    int FperSex = 5249;
    int FpConptPerType = 5250;
    int MohCash = 5251;
    int MohCashUniversal = 525111;
    int DocAllocs = 5252;
    int TransactionsAudit = 5253;
    int Ipservices = 5254;
    int SchmShr = 5256;
    int ShareStmt = 5257;
    int ShareTrf = 5258;
    int ShareSumm = 5285;
    int ShareJournal = 5295;
    int CollRcts = 5286;
    int SharesCateg = 5287;
    int DiagByDocSumm = 5263;
    int InvByInvDbt = 5264;
    int ShiftRecpt = 5265;
    int NhifDispclaim = 5266;
    int DiagnosisPerPat = 5267;
    int debtShift = 5268;
    int chqReque = 5269;
    int CreditorsInvSummary = 5270;
    int BalanceSheetmvnt = 5271;
    int InterimPatientBill = 5272;
    int DepartmentalInterim = 5273;
    int DetOpRev = 5274;
    int TheatreProc = 527033;
    int InterimByDate = 5275;
    int CashPerDay = 5276;
    int IntBf = 52751;
    int Interimexedoc = 52752;
    int FinInDetDateInv = 52753;
    int FinInCleanInv = 52754;
    int PatPerDeptIp = 52755;
    int IpStatusRep = 52756;
    int IpBillRep = 52757;
    int TotalShiftSum = 52758;
    int RevBudget = 52759;
    int TradingTB = 52760;
    int TradingTBs = 52761;
    int TradingPL = 52762;
    int BsheetDtl = 52763;
    int DebtorsAgeTxt = 52764;
    int CreditorsAgeTxt = 52765;
    int PackageList = 52766;
    int docOff = 52767;
    int ActivityRev = 722;
    int DailyCashCollections = 77777;
    int unlinkedGrn = 52770;
    int revevsactivity = 52771;
    int admDisch = 52772;
    int auditing = 52773;
    int ReconSum = 52774;
    int subAcc = 52775;
    int cashPayments = 52776;
    int TotalReceiptsPerNo = 52777;
    int AttendanceSheetPaidup = 527771;
    int DepositsPerBK = 52778;
    int DebtorsByName = 52779;
    int CreditorsByName = 52780;
    int ReceiptperPatTxt = 2610;
    int UnFinInvOut = 58111;
    int UnFinInvOutCash = 581112;
    int PatientControlAcc = 581122;
    int oneMonthTb = 581123;
    int CashUnFinInv = 581;
    int periodTb = 581124;
    int fStatement = 581125;
    int pSummary = 585678;
    int OpAttDepartmental = 585679;
    int WardStmt = 585680;
    int IpAnalysisFrm = 585681;
    int IpMorbMotality = 585682;
    int diagPerDisease = 585683;
    int midWives = 585684;
    int deliveriesMonth = 585687;
    int ipStatements = 585688;
    int ipDischStatement = 585689;
    int birthWeight = 585690;
    int theatreCases = 585691;
    int codiborn = 585692;
    int PatientPerUser = 585693;
    int DiagSummPerSex = 585694;
    int DiagSummByAge = 585695;
    int attByDepartment = 585696;
    int BedReturns = 585697;
    int ipMoralGenders = 5856981;
    int rPaper = 5856982;
    int XrayList = 52431;
    int XrayPerf = 52436;
    int XrayRes = 52413;
    int CollAgedbyAlloc = 52437;
    int admNot = 52438;
    int discNot = 52439;
    int PatTime = 52440;
    int AdsDisch = 52441;
    int MilkForm = 52442;
    int TChart = 52443;
    int Treq = 52444;
    int missedCons = 52446;
    int sentCouriers = 52447;
    int DentalList = 52459;
    int reqByDoc = 52480;
    int GbvMonthlyRep = 5856983;
    int SurvivorProfileRep = 5856984;
    int PapetratorProfileRep = 5856985;
    int MatDeliveries = 5856986;
    int mohdiagnosis = 5856987;
    int mohdiagnosisunderfive = 5856988;
    int CashSalesBrdDpt = 5856989;
    int ShiftNoPerPerPoint = 5856990;
    int ShiftNoPerCashier = 5856991;
    int LabWorkload = 5856992;
    int OpWorkload = 5856993;
    int WaiverExe = 5856994;
    int LabTime = 5856995;
    int VoteAllocation = 5856996;
    int VoteCommitment = 5856997;
    int VotePayment = 5856998;
    int VoteComitOutStanding = 5856999;
    int DBRSummary = 5857000;
    int ShiftSurrender = 5857001;
    private int StaffStatement = 66690;
    private int CafeteriaStaffStatement = 66691;
    int selected_Node;
    static int PAYMENTS = 1;
    int RECEIPTS = 2;
    int SHARES = 3;
    int LOANS = 4;
    int MEMBERS = 5;
    int CASHBOOK = 6;
    int JOURNAL = 7;
    int BUDGETING = 8;
    int ASSETMGNT = 9;
    int STATEMENTS = 10;
    int ACCTREPORTS = 11;
    int MGMTREPORTS = 12;
    int DBMAINT = 13;
    int USERPROF = 14;
    int GRAPHICALAN = 15;
    int HELPANDOCS = 16;
    // Initialize tree consatants to use in case analysis
    int TREE_PAYMENTS = 0;
    int TREE_RECEIPTS = 1;
    int TREE_PATIENT_BILLS = 2;
    int TREE_INVOICES = 3;
    int TREE_DIAGNOSTICS = 4;
    int TREE_CASHBOOK = 5;
    int TREE_JOURNAL = 6;
    int TREE_BUDGETING = 7;
    int TREE_ASSET_MANAGEMENT = 8;
    int TREE_STATEMENTS = 9;
    int TREE_ACCOUNTING_REPORTS = 9;
    int TREE_PATIENT_REPORTS = 10;
    int TREE_DBA_TASKS = 11;
    int TREE_USER_PROFILES = 12;
    int TREE_GRAPHICAL_ANALYSIS = 13;
    int TREE_DOCUMENTATION = 14;
    int columnCount;
    int DebtStmPerSchemeExl = 6000;
    //saleem add
    int groupedShiftrpt = 999922;
    int divShiftrpt = 999933;
    int k = 0;
    javax.swing.JPopupMenu popupMenu = null;
    javax.swing.PopupFactory progressBarPopupFactory;
    javax.swing.Popup progressBarPopup;
    ConnectionStatus connectionStatus;
    public static String payBillNumber = null;
    public static String exchangeDBAdd = null;
    public static String exchangeDBPort = null;
    public static String exchangeDBUser = null;
    public static String exchangeDBPass = null;
    //javax.swing.ProgressMonitor progressMonitor;
    // java.awt.Image imgScaled = imgIconLoaded.getImage();
    /**
     * Creates new form sacco
     */
    /*
     * public sacco() {
     *
     *
     *
     * imgIcon = new
     * javax.swing.ImageIcon(getClass().getResource("/Window.gif"));
     *
     * this.setIconImage(imgIcon.getImage());
     *
     * /*
     * // java.awt.Image imgScaled = imgIcon.getImage();
     *
     * // setIconImage(imgScaled);
     *
     * // java.awt.Image img =
     * java.awt.Toolkit.getDefaultToolkit().createImage("/folder_open.gif");
     *
     * //setIconImage(img1); /* try {
     *
     * java.lang.Class.forName("org.postgresql.Driver");
     *
     * } catch(java.lang.ClassNotFoundException cnfExec) {
     *
     * javax.swing.JOp//tionPane.showMessageDialog("PostgreSQL Driver not found.
     * Please contact system administrator.");
     *
     * }
     *
     *
     * java.lang.String backgrdimg;
     *
     * javax.swing.ImageIcon desktopPaneIcon;
     *
     * initComponents();
     *
     *
     * }
     */
    public static java.sql.Connection connectDB = null;

    /**
     *
     */
    public java.lang.String dbUserName = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.lang.String path2Acrobat = null;
    javax.help.HelpSet helpHS = null;
    javax.help.HelpBroker helpBroker;
    javax.help.HelpSet apiHS = null;
    javax.help.HelpBroker apiHB = null;
    // static final java.lang.String helpSetName = "EpackHimsHelp";
    // static final java.lang.String helpSetLable = "Hospital Management Information System (fUNSOFT HMIS)";
    int min;
    int max;

    /**
     *
     */
    public java.lang.String queryString = null;
    java.lang.String homeUrl;
    java.lang.String backgrdimg;
    javax.swing.ImageIcon desktopPaneIcon;
    javax.swing.tree.DefaultMutableTreeNode top;
    com.afrisoftech.lib.ParseMenuBar parseMenuBar;
    com.afrisoftech.hr.HRMain hrMain;
    com.afrisoftech.hospayroll.PayrollMain payrollMain;
    com.afrisoftech.fleet.FleetMainFr fleetMain;
    com.afrisoftech.hospital.HospitalMain hospitalMain;
    com.afrisoftech.hospinventory.StockMain stockMain;
    javax.swing.tree.DefaultMutableTreeNode topStock;
    javax.swing.JScrollPane treeScrollPaneDBAdmin;
    javax.swing.JScrollPane treeScrollPaneGraphicals;
    javax.swing.tree.DefaultMutableTreeNode toPayroll;
    javax.swing.tree.DefaultMutableTreeNode topReports;
    javax.swing.tree.DefaultMutableTreeNode topDBAdmin;
    javax.swing.tree.DefaultMutableTreeNode topGraphicals;
    com.l2fprod.common.swing.JTaskPane operationsTaskPane;
    com.l2fprod.common.swing.JTaskPane hrmTaskPane;
    com.l2fprod.common.swing.JTaskPane operationsTaskPane1;
    com.l2fprod.common.swing.JTaskPane acctsMainTaskPane;
    com.l2fprod.common.swing.JTaskPane stockTaskPane;
    com.l2fprod.common.swing.JTaskPane payrollTaskPane;
    com.l2fprod.common.swing.JTaskPane reportTaskPane;
    com.l2fprod.common.swing.JTaskPane chartsTaskPane;
    com.afrisoftech.lib.ParseMenuBar1 parseMenuBar1;

    /**
     *
     */
    public java.lang.String selectedTable;
    com.l2fprod.common.swing.JOutlookBar jOutLookBar;

    /**
     *
     */
    public boolean isCustomQuery = false;

    /**
     *
     */
    public static String cardSerialNo;
    private boolean viewRequisitions = true;
    ViewRequisitions viewOrders = null;
    SMSReader smsReader = null;
//    private ViewMessages viewMessagess = null;
    private File filePortrait;
    private String loadQueryFile;
    private String sqlStringFile;
    private JScrollPane chartsTaskScrollPane;
    java.util.Vector tableColumnsVector1;
    private int GroupedTb = 999911;
    public static String checkoutRequestID = null;
    public static String oAuthKey = null;
    public static String passKey = null;
    public static String callBackURL = null;

    /**
     * Default constructor
     */
    /**
     * Creates new form medic
     *
     * @param connDB
     * @param acrobatPath
     * @param pconnDB
     * @param psword
     * @param secureStockMain
     * @param securePayrollMain
     * @param secureHRMain
     */
    public HospitalMain(java.sql.Connection connDB, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB, java.lang.String acrobatPath, java.lang.String psword, com.afrisoftech.hospinventory.StockMain secureStockMain, com.afrisoftech.hospayroll.PayrollMain securePayrollMain, com.afrisoftech.hr.HRMain secureHRMain) {

        operationsTaskPane = new com.l2fprod.common.swing.JTaskPane();

        acctsMainTaskPane = new com.l2fprod.common.swing.JTaskPane();

        reportTaskPane = new com.l2fprod.common.swing.JTaskPane();

        stockTaskPane = new com.l2fprod.common.swing.JTaskPane();

        hrmTaskPane = new com.l2fprod.common.swing.JTaskPane();

        payrollTaskPane = new com.l2fprod.common.swing.JTaskPane();

        topReports = new javax.swing.tree.DefaultMutableTreeNode("Hospital Reports View");

        openShiftAction = new HospitalMain.OpenShiftAction();

        openShiftAction.putValue(javax.swing.Action.SMALL_ICON, new javax.swing.ImageIcon(getClass().getResource("/openfold.gif")));

        openShiftAction.putValue(javax.swing.Action.NAME, "Open New Shift");

        openShiftAction.putValue(javax.swing.Action.SHORT_DESCRIPTION, "Open a new shift by clicking on this icon");

        openShiftAction.putValue(javax.swing.Action.ACCELERATOR_KEY, javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));

        patientRegistrationAction = new HospitalMain.PatientRegistrationAction();

        patientRegistrationAction.putValue(javax.swing.Action.SMALL_ICON, new javax.swing.ImageIcon(getClass().getResource("/openfold.gif")));

        patientRegistrationAction.putValue(javax.swing.Action.NAME, "Patient Registration");

        patientRegistrationAction.putValue(javax.swing.Action.SHORT_DESCRIPTION, "Launch patient registration");

        desktopPaneIcon = new javax.swing.ImageIcon(System.getProperty("backgrdimg", "c:/Tests/clouds.jpg"));

        homeUrl = System.getProperty("user.dir") + System.getProperty("file.separator");

        min = 0;

        max = 100;

        progressBar = new javax.swing.JProgressBar();

        progressBar.setMinimum(min);

        progressBar.setMaximum(max);

        progressBar.setValue(min);

        progressBarPopupFactory = javax.swing.PopupFactory.getSharedInstance();

        progressBarPopup = progressBarPopupFactory.getPopup(this, progressBar, java.awt.Toolkit.getDefaultToolkit().getScreenSize().width / 2, java.awt.Toolkit.getDefaultToolkit().getScreenSize().height / 2);

        java.lang.String myAppFileUrl = null;

        myAppFileUrl = System.getProperty("user.dir") + System.getProperty("file.separator") + "hosprop.properties";

        try {

            java.io.FileInputStream propInFile = new java.io.FileInputStream(myAppFileUrl);

            appProp = new java.util.Properties();

            try {

                appProp.load(propInFile);

                propInFile.close();

            } catch (java.io.IOException ioExec) {

                System.out.println(ioExec.getMessage());

            }

            // return dbServerIp;
        } catch (java.lang.Exception exc) {

            System.out.println(exc.getMessage());

            //    javax.swing.JOptionPane.showMessageDialog(this, "Properties file not found!");
        }

        //        System.setProperty("cashpoint", cashpoint);
        System.setProperty("billpmnt", "notShowing");

        psWord = psword;

        connectDB = connDB;

        pConnDB = pconnDB;

        connectionStatus = new HospitalMain.ConnectionStatus(this);

        connectionStatus.start();

        if (securePayrollMain == null) {

            payrollMain = new com.afrisoftech.hospayroll.PayrollMain(connectDB, pConnDB);

        } else {

            payrollMain = securePayrollMain;

        }

        if (hrMain == null) {

            hrMain = new com.afrisoftech.hr.HRMain(connectDB, pConnDB, null, null);

        } else {

            hrMain = secureHRMain;

        }

        if (secureStockMain == null) {

            stockMain = new com.afrisoftech.hospinventory.StockMain(connectDB, pConnDB);

        } else {

            stockMain = secureStockMain;

        }

        /*
         * if (secureHospitalMain == null) {
         *
         * // hospitalMain = new
         * com.afrisoftech.hospital.HospitalMain(connect2DB(),
         * getPooledConnectionSource(), getPath2Acrobat(), psWord, null, null,
         * null);
         *
         * } else {
         *
         * hospitalMain = secureHospitalMain;
         *
         * }
         */
        path2Acrobat = acrobatPath;
        /*
         * try {
         *
         * java.lang.ClassLoader classLoader =
         * HospitalMain.class.getClassLoader();
         *
         * java.net.URL urlHelpSet = javax.help.HelpSet.findHelpSet(classLoader,
         * helpSetName);
         *
         * helpHS = new javax.help.HelpSet(classLoader, urlHelpSet);
         *
         * } catch (java.lang.Exception exec) {
         *
         * exec.printStackTrace();
         *
         * javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
         *
         * }
         *
         * helpBroker = helpHS.createHelpBroker();
         */
        fleetMain = new com.afrisoftech.fleet.FleetMainFr(connectDB, pConnDB);

        initComponents();

        com.afrisoftech.lib.ReorderItemsMonitor reorderMonitor = new com.afrisoftech.lib.ReorderItemsMonitor();

        reorderMonitor.startThread();

        viewOrders = new ViewRequisitions();

//        viewMessagess = new ViewMessages();
        smsReader = new SMSReader();

        ////   viewOrders.start();
        // viewMessagess.start();
//        this.changeThemeByUrl(System.getProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel"), getClass().getResource("/"+System.getProperty("defaulttheme", "xplunathemepack.zip")));
        tableView = new com.afrisoftech.dbadmin.TableView(connectDB, pConnDB);
        graphicalView = new com.afrisoftech.dbadmin.GraphicalView(connectDB, pConnDB);
        /*
         * if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {
         *
         * this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel",
         * getClass().getResource("/xplunathemepack.zip"));
         *
         *
         * }
         *
         * else {
         *
         * this.changeTheme("com.sun.java.swing.plaf.windows.WindowsLookAndFeel",
         * null);
         *
         * }
         */
        this.mainSplitPane.setOpaque(false);

        this.saccopn.setOpaque(false);

        fleetMain.fleetdesktop = saccopn;

        this.jToolBar3.setFloatable(false);

        this.jToolBar31.setFloatable(false);

        userLabel.setText("Logged-on USER : [ " + System.getProperty("currentuser") + " ]");

        connectionLabel.setText("DB Connection Status : [CONNECTED]");

        try {

            activePane.setText("Database Info. : [ " + connectDB.getMetaData().getDatabaseProductName() + " Ver " + connectDB.getMetaData().getDatabaseProductVersion() + " ]");

            activeDatabase.setText("Database URL : [ " + connectDB.getMetaData().getURL() + " ]");

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        //        activeDatabase.setText("Active Database : ["+System.getProperty("activedatabase")+"]");
        //Set One touch expansion status to true f.
        // helpSplitPane.setOneTouchExpandable(true);
        mainSplitPane.setOneTouchExpandable(true);

        //payrollSplitPane.setOneTouchExpandable(true);
        //pharmacySplitPane.setOneTouchExpandable(true);
        //reportsSplitPane.setOneTouchExpandable(true);
        //dbadminSplitPane.setOneTouchExpandable(true);
        //crmSplitPane.setOneTouchExpandable(true);
        //graphicalsSplitPane.setOneTouchExpandable(true);
        saccopn.setOpaque(false);

        /*
         * activePaneThread = new java.lang.Thread(this, "activepane");
         *
         * activePaneThread.start();
         */
        System.out.println("Default split pane component : [" + System.getProperty("defaultsplitpane") + "]");

        //        jTabbedPane1.setSelectedComponent(getDefaultSplitPane(System.getProperty("defaultsplitpane", "Hospital Operations")));
        setTitle(getCompanyName());

        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/funsoft_logo.gif")).getImage());

        payBillNumber = com.afrisoftech.lib.CashShiftNumberFactory.getPayBillNumber(connectDB);

        try {
            java.sql.PreparedStatement pstmtMobileTxTest = connectDB.prepareStatement("SELECT DISTINCT test_mobile_pay FROM pb_hospitalprofile");
            java.sql.ResultSet rsetMobileTxTest = pstmtMobileTxTest.executeQuery();
            while (rsetMobileTxTest.next()) {
                mobileTxTest = rsetMobileTxTest.getBoolean(1);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();

        }
        // ManagePOSShifts managePOSShifts = new ManagePOSShifts();
        // managePOSShifts.start();
        /*
         * java.awt.SystemTray systemTray = java.awt.SystemTray.getSystemTray();
         *
         * java.awt.TrayIcon trayIcon = new java.awt.TrayIcon(new
         * javax.swing.ImageIcon(getClass().getResource("/funsoft_logo.gif")).getImage(),
         * "The Funsoft HMIS"); trayIcon.setImageAutoSize(true); try {
         * systemTray.add(trayIcon);
         *
         * } catch (java.awt.AWTException awte) { awte.printStackTrace(); }
         */
        if (java.awt.SystemTray.isSupported()) {
            systemTray = java.awt.SystemTray.getSystemTray();
        }

        MobilePayMsgReader mobilePayThread = new MobilePayMsgReader();
        mobilePayThread.start();
        this.getCashPointProperties();

//        if (mobileTxReportsmnit.isVisible()) {
//            mobilepayBtn.setEnabled(true);
//        } else {
//            mobilepayBtn.setEnabled(false);
//        }
        //Starting the garbage collector cycle
        GarbageCollector gc = new GarbageCollector();

        gc.start();

        invalidate();
        validate();
        repaint();
        ///// smsReader.start();  ///SMS reader thread starter call
    }

    /**
     * This method is called fro.2m within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        gridBagLayout1 = new java.awt.GridBagLayout();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        operationsPopupMenu = new javax.swing.JPopupMenu();
        inventoryPopupMenu = new javax.swing.JPopupMenu();
        payrollPopupMenu = new javax.swing.JPopupMenu();
        reportsPopupMenu = new javax.swing.JPopupMenu();
        inventoryMenuBar = new javax.swing.JMenuBar();
        payrollMenuBar = new javax.swing.JMenuBar();
        reportsMenuBar = new javax.swing.JMenuBar();
        operationsPopupButtonGroup = new javax.swing.ButtonGroup();
        reportsPopupButtonGroup = new javax.swing.ButtonGroup();
        payrollPopupButtonGroup = new javax.swing.ButtonGroup();
        inventoryPopupButtonGroup = new javax.swing.ButtonGroup();
        inventoryMenuBarButtonGroup = new javax.swing.ButtonGroup();
        operationsMenuBarButtonGroup = new javax.swing.ButtonGroup();
        reportsMenuBarButtonGroup = new javax.swing.ButtonGroup();
        payrollMenuBarButtonGroup = new javax.swing.ButtonGroup();
        graphViewDialog = new javax.swing.JDialog();
        valuesAxisSelector = new javax.swing.JPanel();
        columnSelectorScrollPane = new javax.swing.JScrollPane();
        columnSelectorTable = new javax.swing.JTable();
        xaxisColumnPanel = new javax.swing.JPanel();
        xaxisComboBox = new javax.swing.JComboBox();
        xaxisLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        submitQuery = new javax.swing.JButton();
        cancelQuery = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        barChart = new javax.swing.JRadioButton();
        pieChart = new javax.swing.JRadioButton();
        xyChart = new javax.swing.JRadioButton();
        closeDialog = new javax.swing.JButton();
        help = new javax.swing.JButton();
        chartButtonGroup = new javax.swing.ButtonGroup();
        hrMenuBar = new javax.swing.JMenuBar();
        hrmPopupMenu = new javax.swing.JPopupMenu();
        hrPopupButtonGroup = new javax.swing.ButtonGroup();
        chartDdefinitionDialog = new javax.swing.JDialog();
        valuesAxisSelector1 = new javax.swing.JPanel();
        columnSelectorScrollPane1 = new javax.swing.JScrollPane();
        columnSelectorTable1 = new javax.swing.JTable();
        xaxisColumnPanel1 = new javax.swing.JPanel();
        xaxisComboBox1 = new javax.swing.JComboBox();
        xaxisLabel1 = new javax.swing.JLabel();
        nameOfViewLbl = new javax.swing.JLabel();
        viewNameTxt = new javax.swing.JTextField();
        chartTitleLbl = new javax.swing.JLabel();
        chartTitleTxt = new javax.swing.JTextField();
        xAxisLbl = new javax.swing.JLabel();
        yAxisLbl = new javax.swing.JLabel();
        yAxisTxt = new javax.swing.JTextField();
        chartTypeLbl = new javax.swing.JLabel();
        chartTypeCmbx = new javax.swing.JComboBox();
        chartCategoryCmbx = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        submitQuery1 = new javax.swing.JButton();
        cancelQuery1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        barChart1 = new javax.swing.JRadioButton();
        pieChart1 = new javax.swing.JRadioButton();
        xyChart1 = new javax.swing.JRadioButton();
        closeDialog1 = new javax.swing.JButton();
        help1 = new javax.swing.JButton();
        updateChartBtn = new javax.swing.JButton();
        deleteChartBtn = new javax.swing.JButton();
        queryDefinerPanel = new javax.swing.JPanel();
        querykiwiTextPanel = new com.afrisoftech.lib.KiwiTextPanel();
        queryPane = new javax.swing.JPanel();
        saveQuery = new javax.swing.JButton();
        clearQuery = new javax.swing.JButton();
        loadQuery = new javax.swing.JButton();
        subminQueryPane = new javax.swing.JPanel();
        closeDialog2 = new javax.swing.JButton();
        submitQuery2 = new javax.swing.JButton();
        mainLabel = new javax.swing.JPanel();
        QueryTipLabel = new javax.swing.JLabel();
        chartNameLbl = new javax.swing.JLabel();
        chartNameTxt = new javax.swing.JTextField();
        helPanel = new javax.swing.JPanel();
        helpButton1 = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();
        QueryIcon = new javax.swing.JLabel();
        chartEditCmbx = new javax.swing.JComboBox();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        mainPanel = new javax.swing.JPanel(); /*{

            public void paintComponent(java.awt.Graphics g) {

                java.awt.Dimension d = getSize();

                g.drawImage(desktopPaneIcon.getImage(), 0, 0, d.width, d.height,null);
                //   System.out.println("still drawing");
                setOpaque(false);

                super.paintComponent(g);

            }

        };
        */
        ;
        mainSplitPane = new javax.swing.JSplitPane();
        treePane = new javax.swing.JPanel();
        desktopPane = new javax.swing.JPanel(); /* {

            public void paintComponent(java.awt.Graphics g) {

                desktopPane.setSize(100, 80);

                java.awt.Dimension d = desktopPane.getSize();

                g.drawImage(desktopPaneIcon.getImage(), 0, 0, d.width, d.height,null);
                //     System.out.println("still drawing");
                setOpaque(false);

                super.paintComponent(g);

            }

        };
        */;
        saccopn = new kiwi.ui.KDesktopPane();
        new javax.swing.JDesktopPane(){

            public void paintComponent(java.awt.Graphics g) {

                java.awt.Dimension d = getSize();

                g.drawImage(desktopPaneIcon.getImage(), 0, 0, d.width, d.height,null);
                System.out.println("still drawing");
                setOpaque(false);

                super.paintComponent(g);

            }

        };
        ;
        jToolBar3 = new javax.swing.JToolBar();
        fmgrBttn = new javax.swing.JButton();
        calcBttn = new javax.swing.JButton();
        brwsrBttn = new javax.swing.JButton();
        editButtn = new javax.swing.JButton();
        mtmediaBttn1 = new javax.swing.JButton();
        mailBttn = new javax.swing.JButton();
        mtmediaBttn = new javax.swing.JButton();
        jToolBar31 = new javax.swing.JToolBar();
        backupDB = new javax.swing.JButton();
        compactDB = new javax.swing.JButton();
        mobilepayBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        spacerLbls = new javax.swing.JLabel();
        helpButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jToolBar311 = new javax.swing.JToolBar();
        operationsToolBar = new javax.swing.JButton();
        pharmacyToolBar = new javax.swing.JButton();

        payrollToolBar = new javax.swing.JButton();
        reportsToolBar = new javax.swing.JButton();
        openShift = new javax.swing.JButton();
        closeShift = new javax.swing.JButton();
        suspendShift = new javax.swing.JButton();
        optimizeDB = new javax.swing.JButton();
        taskBar = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        connectionLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        activePane = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        activeDatabase = new javax.swing.JLabel();
        commPanel = new javax.swing.JPanel();
        sendMessageTxt = new javax.swing.JTextField();
        msgRecipientLbl = new javax.swing.JLabel();
        messageRecipientCmbx = new javax.swing.JComboBox();
        writeMailBtn = new javax.swing.JButton();
        receivedMessageTxt = new javax.swing.JTextField();
        receivedMessageLbl = new javax.swing.JLabel();
        sendMessageBtn = new javax.swing.JButton();
        commBroadcastPanel = new javax.swing.JPanel();
        sendSMSBtn = new javax.swing.JButton();
        smsBroadcastBtn = new javax.swing.JButton();
        smsBroadcastTargetCmbx = new javax.swing.JComboBox();
        sendMessageTxt1 = new javax.swing.JTextField();
        PDFViewerIntfr = new javax.swing.JInternalFrame();
        jMenuBar1 = new javax.swing.JMenuBar();
        setupmn = new javax.swing.JMenu();
        countryditrmn = new javax.swing.JMenu();
        countrymnit = new javax.swing.JMenuItem();
        provincesmnit = new javax.swing.JMenuItem();
        districtmnit = new javax.swing.JMenuItem();
        brancmnit = new javax.swing.JMenuItem();
        voteDepartmentmnit = new javax.swing.JMenuItem();
        jSeparator41 = new javax.swing.JSeparator();
        profilemn = new javax.swing.JMenu();
        lgalstatussetupmnit = new javax.swing.JMenuItem();
        hosptalmnit = new javax.swing.JMenuItem();
        headermnit = new javax.swing.JMenuItem();
        interimnoticemnit = new javax.swing.JMenuItem();
        occupationmnit = new javax.swing.JMenuItem();
        educationmnit = new javax.swing.JMenuItem();
        Infomnit = new javax.swing.JMenuItem();
        smsGroupsmnit = new javax.swing.JMenuItem();
        nokrelationsmnit = new javax.swing.JMenuItem();
        patientRegistrationPointsmnit = new javax.swing.JMenuItem();
        jSeparator21 = new javax.swing.JSeparator();
        Financialmn = new javax.swing.JMenu();
        glaccountsmnit = new javax.swing.JMenuItem();
        glaccountsmnit1 = new javax.swing.JMenuItem();
        glaccountsupdatemnit = new javax.swing.JMenuItem();
        jSeparator67 = new javax.swing.JSeparator();
        banksetmnit = new javax.swing.JMenuItem();
        creditcardsmnit = new javax.swing.JMenuItem();
        paymentmodesmnit = new javax.swing.JMenuItem();
        cashpointmnit = new javax.swing.JMenuItem();
        patientdepositsmnit = new javax.swing.JMenuItem();
        jSeparator68 = new javax.swing.JSeparator();
        iplimitmnit = new javax.swing.JMenuItem();
        accrualsmnit = new javax.swing.JMenuItem();
        jSeparator69 = new javax.swing.JSeparator();
        deductionsmnit = new javax.swing.JMenuItem();
        taxsetupmnit = new javax.swing.JMenuItem();
        Corporatemnit = new javax.swing.JMenuItem();
        projecmn = new javax.swing.JMenu();
        donormnit = new javax.swing.JMenuItem();
        projmnit = new javax.swing.JMenuItem();
        jSeparator73 = new javax.swing.JPopupMenu.Separator();
        storeAllocationsmnit = new javax.swing.JMenuItem();
        billingStationAllocationmnit = new javax.swing.JMenuItem();
        serviceCharterAdjustmentmnit = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        LegalDocumentmn = new javax.swing.JMenu();
        docregistermnit = new javax.swing.JMenuItem();
        impdocregmnit = new javax.swing.JMenuItem();
        jSeparator64 = new javax.swing.JSeparator();
        departmentalmn = new javax.swing.JMenu();
        maindeptmnit = new javax.swing.JMenuItem();
        depatmnit = new javax.swing.JMenuItem();
        Operatingchamn = new javax.swing.JMenu();
        Operatingparamertersmnit = new javax.swing.JMenuItem();
        TheatreChargesmnit = new javax.swing.JMenuItem();
        adjpricesmnit = new javax.swing.JMenuItem();
        mergedepmnit = new javax.swing.JMenuItem();
        transferItemsmnit = new javax.swing.JMenuItem();
        laboratorymn = new javax.swing.JMenu();
        labspecimensmnit = new javax.swing.JMenuItem();
        labSpecimenSourcemnit = new javax.swing.JMenuItem();
        labtestsmnit = new javax.swing.JMenuItem();
        labresultsmnit = new javax.swing.JMenuItem();
        LabHierachymnit = new javax.swing.JMenuItem();
        laboratorymn1 = new javax.swing.JMenu();
        packagesmnit = new javax.swing.JMenuItem();
        packageslistmnit = new javax.swing.JMenuItem();
        automatedChargesmnit = new javax.swing.JMenuItem();
        clerkingServicesmnit = new javax.swing.JMenuItem();
        xrayFilmTypesmnit = new javax.swing.JMenuItem();
        jSeparator31 = new javax.swing.JSeparator();
        patientCategorymn = new javax.swing.JMenu();
        patcategmnit = new javax.swing.JMenuItem();
        patientcollateralmnit = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JSeparator();
        wardsetupmn = new javax.swing.JMenu();
        wardprocmnit = new javax.swing.JMenuItem();
        theatreSetup = new javax.swing.JMenuItem();
        bedsetupmnit = new javax.swing.JMenuItem();
        Categorysetupmnit = new javax.swing.JMenuItem();
        jSeparator26 = new javax.swing.JSeparator();
        medicalRecordsmn = new javax.swing.JMenu();
        diseasesmnit = new javax.swing.JMenuItem();
        clinicsSpecialtiesmnit = new javax.swing.JMenuItem();
        allergiesmnit = new javax.swing.JMenuItem();
        jSeparator65 = new javax.swing.JSeparator();
        staffmn = new javax.swing.JMenu();
        docnursmnit = new javax.swing.JMenuItem();
        closedocaccmnit = new javax.swing.JMenuItem();
        Mergedocaccmnit = new javax.swing.JMenuItem();
        nursessetupmnit = new javax.swing.JMenuItem();
        jSeparator66 = new javax.swing.JSeparator();
        schememn = new javax.swing.JMenu();
        schemeprovmnit = new javax.swing.JMenuItem();
        debtorTypemnit = new javax.swing.JMenuItem();
        schemeregmnit = new javax.swing.JMenuItem();
        schemeallmnit = new javax.swing.JMenuItem();
        suspschemepovmnit = new javax.swing.JMenuItem();
        suspschememnit = new javax.swing.JMenuItem();
        Ammendstaffregmnit = new javax.swing.JMenuItem();
        jSeparator70 = new javax.swing.JSeparator();
        nhifrebatesmnit = new javax.swing.JMenuItem();
        limitconsmnit = new javax.swing.JMenuItem();
        jSeparator71 = new javax.swing.JSeparator();
        approvedagentsmnit = new javax.swing.JMenuItem();
        schemememberjmnit = new javax.swing.JMenuItem();
        schemeExclusionsmnit = new javax.swing.JMenuItem();
        jSeparator42 = new javax.swing.JSeparator();
        supmn = new javax.swing.JMenu();
        supplrmnit = new javax.swing.JMenuItem();
        closesupplaccmnit = new javax.swing.JMenuItem();
        mergesuppliermnit = new javax.swing.JMenuItem();
        jSeparator25 = new javax.swing.JSeparator();
        jMenu5 = new javax.swing.JMenu();
        hcmACL1mnit = new javax.swing.JMenuItem();
        payrollACL1mnit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        userprofmnit = new javax.swing.JMenuItem();
        inventoryACLmnit = new javax.swing.JMenuItem();
        hcmACLmnit = new javax.swing.JMenuItem();
        payrollACLmnit = new javax.swing.JMenuItem();
        exitmnITb = new javax.swing.JMenuItem();
        emrmn = new javax.swing.JMenu();
        patientregstmnit = new javax.swing.JMenuItem();
        namesearchmnit1 = new javax.swing.JMenuItem();
        editPatientNamesmnit = new javax.swing.JMenuItem();
        inpprvvstmnit = new javax.swing.JMenuItem();
        patientregnummnit = new javax.swing.JMenuItem();
        inpatientmn = new javax.swing.JMenu();
        ipOperationsmnit = new javax.swing.JMenuItem();
        admmssionntmnit = new javax.swing.JMenuItem();
        admrqmnit = new javax.swing.JMenuItem();
        wardproceduresmnit = new javax.swing.JMenuItem();
        nursestationmnit = new javax.swing.JMenuItem();
        Bedchargesmnit = new javax.swing.JMenuItem();
        patienttransfrmn = new javax.swing.JMenu();
        wardtfrmnit = new javax.swing.JMenuItem();
        Bedtrnsfrmnit = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JSeparator();
        patdischmnit = new javax.swing.JMenuItem();
        nhifcreditsmnit = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        bedmagmentmn = new javax.swing.JMenu();
        bedmangtmnit = new javax.swing.JMenuItem();
        newbedmnit = new javax.swing.JMenuItem();
        bedbrekgsmnit = new javax.swing.JMenuItem();
        Clinical = new javax.swing.JMenu();
        clinicalhistmnit = new javax.swing.JMenuItem();
        opattendbydocmnit = new javax.swing.JMenuItem();
        refferalsmnit = new javax.swing.JMenuItem();
        medicalrecordsmn = new javax.swing.JMenu();
        bthregistermnit = new javax.swing.JMenuItem();
        jSeparator61 = new javax.swing.JSeparator();
        patientdiagnosismnit = new javax.swing.JMenuItem();
        patientdiagnosisreportmnit = new javax.swing.JMenuItem();
        diagsummarymnit = new javax.swing.JMenuItem();
        jSeparator62 = new javax.swing.JSeparator();
        fpmn = new javax.swing.JMenu();
        fpclientsmnit = new javax.swing.JMenuItem();
        fpservicesmnit = new javax.swing.JMenuItem();
        FPmethodsmnit = new javax.swing.JMenuItem();
        fpcontraceptivesmnit = new javax.swing.JMenuItem();
        fpregistermnit = new javax.swing.JMenuItem();
        fprecordsmnit = new javax.swing.JMenuItem();
        jSeparator63 = new javax.swing.JSeparator();
        sickleavemnit = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        clinicsapp = new javax.swing.JMenu();
        bookingschsmnit = new javax.swing.JMenuItem();
        bookingsconfchmnit = new javax.swing.JMenuItem();
        clinicBookingsmnit = new javax.swing.JMenuItem();
        anteNatalCaremnit = new javax.swing.JMenuItem();
        postNatalCaremnit = new javax.swing.JMenuItem();
        cwcRegistermnit = new javax.swing.JMenuItem();
        immunisationmnit = new javax.swing.JMenuItem();
        fpRHServicesmnit = new javax.swing.JMenuItem();
        rhCentreMnit = new javax.swing.JMenuItem();
        gbvmnit = new javax.swing.JCheckBoxMenuItem();
        jSeparator29 = new javax.swing.JSeparator();
        communityHealthmn = new javax.swing.JMenu();
        communityHealthRegistermnit = new javax.swing.JMenuItem();
        houseHoldRegistermnit = new javax.swing.JMenuItem();
        rehabilitationServicesmnit = new javax.swing.JMenuItem();
        socialWorkServicesmnit = new javax.swing.JMenuItem();
        jSeparator100 = new javax.swing.JPopupMenu.Separator();
        morturymn = new javax.swing.JMenu();
        admissmnit = new javax.swing.JMenuItem();
        deathregistermnit = new javax.swing.JMenuItem();
        mortTransferMnit = new javax.swing.JMenuItem();
        deathnotficationmnit = new javax.swing.JMenuItem();
        mortdischmnit = new javax.swing.JMenuItem();
        bodycollectionmnit = new javax.swing.JMenuItem();
        permitcollectormnit = new javax.swing.JMenuItem();
        mortOccupancymnit = new javax.swing.JMenuItem();
        nursing = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        triagemnit = new javax.swing.JMenuItem();
        casualtymnit = new javax.swing.JMenuItem();
        theatermnit = new javax.swing.JMenuItem();
        ward2wardtransfermnit = new javax.swing.JMenuItem();
        nursingOperationsmnit = new javax.swing.JMenuItem();
        extendedNursingmnit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        vitalsignmnit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        pendinginjmnit = new javax.swing.JMenuItem();
        nurseprofmnit = new javax.swing.JMenuItem();
        icuProceduresmnit = new javax.swing.JMenuItem();
        wardProceduresmnit = new javax.swing.JMenuItem();
        Consentmnit = new javax.swing.JMenuItem();
        progressmnit = new javax.swing.JMenuItem();
        fluidchartmnit = new javax.swing.JMenuItem();
        radreqmnit = new javax.swing.JMenuItem();
        Ambreqmnit = new javax.swing.JMenuItem();
        milknutritionmnit = new javax.swing.JMenuItem();
        certficatemnit = new javax.swing.JMenuItem();
        turnchartmnit = new javax.swing.JMenuItem();
        Clinicalexamnit = new javax.swing.JMenuItem();
        dispensingMnit = new javax.swing.JMenuItem();
        nursingBillingmn = new javax.swing.JMenu();
        nurseraisebillmnit = new javax.swing.JMenuItem();
        nursingGeneralBillingmnit = new javax.swing.JMenuItem();
        theatrebillingNursingmnit = new javax.swing.JMenuItem();
        suppliesDressingmnit = new javax.swing.JMenuItem();
        pharmacyBillingmnit = new javax.swing.JMenuItem();
        nurseDutyRotamnit = new javax.swing.JMenuItem();
        nursingStatisticsmn = new javax.swing.JMenu();
        nursingStoresmn = new javax.swing.JMenu();
        medicineRequisitionsmnit = new javax.swing.JMenuItem();
        suppliesDressingsrequistmnit = new javax.swing.JMenuItem();
        consumablesmnit = new javax.swing.JMenuItem();
        stockCountmnit = new javax.swing.JMenuItem();
        nursingReportingmn = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator102 = new javax.swing.JPopupMenu.Separator();
        nursingIndicatorsmn = new javax.swing.JMenu();
        childDiseasesmnit = new javax.swing.JMenuItem();
        anteNataRoutineExamsmnit = new javax.swing.JMenuItem();
        anteNatalTestsmnit = new javax.swing.JMenuItem();
        religionmnit = new javax.swing.JMenuItem();
        typesOfUIDsmnit = new javax.swing.JMenuItem();
        feedingMethodsmnit = new javax.swing.JMenuItem();
        typesofMilkmnit = new javax.swing.JMenuItem();
        reasonforFPlanningmnit = new javax.swing.JMenuItem();
        fitnessLevelmnit = new javax.swing.JMenuItem();
        maritalStatusmnit = new javax.swing.JMenuItem();
        deliveryStatemnit = new javax.swing.JMenuItem();
        childDeliveryMethodsmnit = new javax.swing.JMenuItem();
        typesOfHospitalsmnit = new javax.swing.JMenuItem();
        placeofDeliverymnit = new javax.swing.JMenuItem();
        riskLevelsmnit = new javax.swing.JMenuItem();
        qtyLevelsmnit = new javax.swing.JMenuItem();
        childDeliveryStatusmnit = new javax.swing.JMenuItem();
        genderParamsmnit = new javax.swing.JMenuItem();
        hcBranchesmnit = new javax.swing.JMenuItem();
        bloodRhesusmnit = new javax.swing.JMenuItem();
        bloodGrpmnit = new javax.swing.JMenuItem();
        immunisationProceduresmnit = new javax.swing.JMenuItem();
        cwcIndicatormnit = new javax.swing.JMenuItem();
        fpIndicatorsSetupmnit = new javax.swing.JMenuItem();
        patientmanagemn = new javax.swing.JMenu();
        frontEndOperationsmnit = new javax.swing.JMenuItem();
        fpoperationmnit = new javax.swing.JMenuItem();
        tasksSeparator = new javax.swing.JSeparator();
        serviceAccptslipmnit = new javax.swing.JMenuItem();
        bloodpackmnit = new javax.swing.JMenuItem();
        docRequestMn = new javax.swing.JMenu();
        consultationmnit = new javax.swing.JMenuItem();
        dconsultationmnit = new javax.swing.JMenuItem();
        jSeparator30 = new javax.swing.JSeparator();
        labmn = new javax.swing.JMenu();
        labtestsresultmnit = new javax.swing.JMenuItem();
        labpendingmnit = new javax.swing.JMenuItem();
        labregmnit = new javax.swing.JMenuItem();
        labprocmnit = new javax.swing.JMenuItem();
        xray = new javax.swing.JMenu();
        xrayresults = new javax.swing.JMenuItem();
        xraysmnit = new javax.swing.JMenuItem();
        xraypendingReq = new javax.swing.JMenuItem();
        xraymnit = new javax.swing.JMenuItem();
        physiotherapy = new javax.swing.JMenu();
        physioReqmnit = new javax.swing.JMenuItem();
        physioresultsmnit = new javax.swing.JMenuItem();
        rehabmnitmnit = new javax.swing.JMenuItem();
        eyeUnitmnit = new javax.swing.JMenuItem();
        Dental = new javax.swing.JMenu();
        dentalReqmnit = new javax.swing.JMenuItem();
        dentalresultsmnit = new javax.swing.JMenuItem();
        Dentalmnit = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        theatremn = new javax.swing.JMenu();
        theaterManagementmnit = new javax.swing.JMenuItem();
        theatrediagmnit = new javax.swing.JMenuItem();
        theatreprocmnit = new javax.swing.JMenuItem();
        Endoscopymnit = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JSeparator();
        launchDashBoardmnit = new javax.swing.JMenuItem();
        poprequestmnit = new javax.swing.JMenuItem();
        securityReleasemnit = new javax.swing.JMenuItem();
        storesSecuritymnit = new javax.swing.JMenuItem();
        wardOccupancyReportsmnit = new javax.swing.JMenuItem();
        jSeparator99 = new javax.swing.JPopupMenu.Separator();
        helpdeskOperationsmnit = new javax.swing.JMenuItem();
        billingmn = new javax.swing.JMenu();
        shiftmn = new javax.swing.JMenu();
        closeshiftmnit = new javax.swing.JMenuItem();
        suspendmnit = new javax.swing.JMenuItem();
        receiptsmn = new javax.swing.JMenu();
        receiptsmnit = new javax.swing.JMenuItem();
        govPosmnit = new javax.swing.JMenuItem();
        inReceiptsmnit = new javax.swing.JMenuItem();
        Receiptsmnit = new javax.swing.JMenuItem();
        otherrecptmnit = new javax.swing.JMenuItem();
        rctdocfeesmnit = new javax.swing.JMenuItem();
        jSeparator72 = new javax.swing.JSeparator();
        directcashsalesmnit = new javax.swing.JMenuItem();
        refundsmnit = new javax.swing.JMenuItem();
        rcttrfmnit = new javax.swing.JMenuItem();
        fpPosmnit = new javax.swing.JMenuItem();
        otherReceiptsmnit = new javax.swing.JMenuItem();
        cafeteriaSalesmnit = new javax.swing.JMenuItem();
        generalmnit = new javax.swing.JMenuItem();
        billadjustmentmnit = new javax.swing.JMenuItem();
        exemptionmnit = new javax.swing.JMenuItem();
        invoicingmn = new javax.swing.JMenu();
        SchemeInvoicinmn = new javax.swing.JMenu();
        schememnit = new javax.swing.JMenuItem();
        finaliseipnhifmnit = new javax.swing.JMenuItem();
        finaliseipmnit = new javax.swing.JMenuItem();
        patientReleasemnit = new javax.swing.JMenuItem();
        debtinvoicingmnit = new javax.swing.JMenuItem();
        jSeparator79 = new javax.swing.JSeparator();
        approveinvmnit = new javax.swing.JMenuItem();
        approvinvmnit = new javax.swing.JMenuItem();
        mergdispmnit = new javax.swing.JMenuItem();
        DispConfirmationmnit = new javax.swing.JMenuItem();
        DispConfSummnit = new javax.swing.JMenuItem();
        jSeparator80 = new javax.swing.JSeparator();
        CreditnoteSchmnit = new javax.swing.JMenuItem();
        unfinalizeInvoicemnit = new javax.swing.JMenuItem();
        inpatcashinvmnit = new javax.swing.JMenuItem();
        Billinginvoicesmnit = new javax.swing.JMenuItem();
        gledgermn = new javax.swing.JMenu();
        allocation = new javax.swing.JMenu();
        debtorsTransactionsmn = new javax.swing.JMenu();
        credittransfmnit = new javax.swing.JMenuItem();
        miscdebtorsmnit = new javax.swing.JMenuItem();
        mergschaccmnit = new javax.swing.JMenuItem();
        changepayermnit = new javax.swing.JMenuItem();
        chgintrmnit = new javax.swing.JMenuItem();
        returnedclms = new javax.swing.JMenu();
        rtclaimsmnit = new javax.swing.JMenuItem();
        resubmitclaimsmnit = new javax.swing.JMenuItem();
        SchemeAllocmnit = new javax.swing.JMenuItem();
        partlyallocinvmnit = new javax.swing.JMenuItem();
        allocbypayermnit = new javax.swing.JMenuItem();
        adjustinvmnit = new javax.swing.JMenuItem();
        allocatewtocrtmnit = new javax.swing.JMenuItem();
        automatedwoffsmnit = new javax.swing.JMenuItem();
        appdocinvmnit = new javax.swing.JMenuItem();
        jSeparator94 = new javax.swing.JSeparator();
        alloConfrmmnit = new javax.swing.JMenuItem();
        Provisiontransmn = new javax.swing.JMenu();
        provisionsmnit = new javax.swing.JMenuItem();
        provisionsperdebtormnit = new javax.swing.JMenuItem();
        jSeparator95 = new javax.swing.JPopupMenu.Separator();
        receivablesDashboardmnit = new javax.swing.JMenuItem();
        cashbkmn = new javax.swing.JMenu();
        postInvoicesmnit = new javax.swing.JMenuItem();
        raisevouchmnit = new javax.swing.JMenuItem();
        LinkGrnmnit = new javax.swing.JMenuItem();
        LinkGrn1mnit = new javax.swing.JMenuItem();
        LinkGrn2mnit = new javax.swing.JMenuItem();
        LinkGrn3mnit = new javax.swing.JMenuItem();
        nonstockitemmnit = new javax.swing.JMenuItem();
        examineimpresmnit = new javax.swing.JMenu();
        examineImprestmnit = new javax.swing.JMenuItem();
        approvedImprestmnit = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        patientrefundmnit = new javax.swing.JMenuItem();
        debitNotemnit = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        creditallocmnit = new javax.swing.JMenuItem();
        jSeparator74 = new javax.swing.JSeparator();
        doctorsledgermnit = new javax.swing.JMenuItem();
        votepaymentmnit = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        mergeLPOmnit = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        creditorOperationsmnit = new javax.swing.JMenuItem();
        miscsCreditorsmnit = new javax.swing.JMenuItem();
        jSeparator75 = new javax.swing.JSeparator();
        jrnloansmnit = new javax.swing.JMenuItem();
        projectjrnloansmnit = new javax.swing.JMenuItem();
        jSeparator76 = new javax.swing.JSeparator();
        writeoffs = new javax.swing.JMenu();
        Writeoffsmnit = new javax.swing.JMenuItem();
        Writeoffscrtmnit = new javax.swing.JMenuItem();
        jSeparator78 = new javax.swing.JSeparator();
        mergeacmnit = new javax.swing.JMenuItem();
        auditAccountsmnit = new javax.swing.JMenuItem();
        financialsmn = new javax.swing.JMenu();
        CashBookMangmnit = new javax.swing.JMenuItem();
        bankingmnit = new javax.swing.JMenuItem();
        shiftTotalsmnit = new javax.swing.JMenuItem();
        Bankingmnit = new javax.swing.JMenuItem();
        bankreconcmnit = new javax.swing.JMenuItem();
        unrecordedRecItemsmnit = new javax.swing.JMenuItem();
        reconcilationreportermnit = new javax.swing.JMenuItem();
        comfbankingmnit = new javax.swing.JMenuItem();
        bnkchargesmnit = new javax.swing.JMenuItem();
        directbankingmnit = new javax.swing.JMenuItem();
        paymenmn = new javax.swing.JMenu();
        otherprmnit = new javax.swing.JMenuItem();
        paymentSchedulemnit = new javax.swing.JMenuItem();
        Lumpotherprmnit = new javax.swing.JMenuItem();
        consultantspmnit = new javax.swing.JMenuItem();
        paymntadjmnit = new javax.swing.JMenuItem();
        pettycashmn = new javax.swing.JMenu();
        imprestPettyCashPaymentsmnit = new javax.swing.JMenuItem();
        raisecashVouchmnit = new javax.swing.JMenuItem();
        payvouchermnit = new javax.swing.JMenuItem();
        pettycashpaymnit = new javax.swing.JMenuItem();
        pettycashpaywhmnit = new javax.swing.JMenuItem();
        pettycashpaydirmnit = new javax.swing.JMenuItem();
        printvouchermnit = new javax.swing.JMenuItem();
        Loanregmnit = new javax.swing.JMenuItem();
        jSeparator96 = new javax.swing.JPopupMenu.Separator();
        cashbookReportsmnit = new javax.swing.JMenuItem();
        aiemn = new javax.swing.JMenu();
        allocation1mnit = new javax.swing.JMenuItem();
        voteBookBalancesmnit = new javax.swing.JMenuItem();
        allocation3mnit = new javax.swing.JMenuItem();
        allocation2mnit = new javax.swing.JMenuItem();
        allocation4mnit = new javax.swing.JMenuItem();
        allocationmnitd = new javax.swing.JMenuItem();
        commitmentmnit = new javax.swing.JMenuItem();
        orderPaymentCommitmentsmnit = new javax.swing.JMenuItem();
        procurementPlanmnit = new javax.swing.JMenuItem();
        jSeparator81 = new javax.swing.JPopupMenu.Separator();
        directPaymentsmnit = new javax.swing.JMenuItem();
        allocation5mnit = new javax.swing.JMenuItem();
        budgetmn = new javax.swing.JMenu();
        budgetsectmint = new javax.swing.JMenuItem();
        budgetdeptmnit = new javax.swing.JMenuItem();
        budgettotalmnit = new javax.swing.JMenuItem();
        budgetamendmnit = new javax.swing.JMenuItem();
        payrollmn = new javax.swing.JMenu();
        auditingmn = new javax.swing.JMenu();
        billingAuditmnit = new javax.swing.JMenuItem();
        receivablesAuditmnit = new javax.swing.JMenuItem();
        inventoryAuditmnit = new javax.swing.JMenuItem();
        invoicingAuditmnit = new javax.swing.JMenuItem();
        userAccessAuditmnit = new javax.swing.JMenuItem();
        sysAdminAuditmnit = new javax.swing.JMenuItem();
        auditTrailmnit = new javax.swing.JMenuItem();
        payablesAuditmnit = new javax.swing.JMenuItem();
        patientRegistrationmnit = new javax.swing.JMenuItem();
        cashBookAuditmnit = new javax.swing.JMenuItem();
        imprestAuditmnit = new javax.swing.JMenuItem();
        reportsmn = new javax.swing.JMenu();
        outpatmn = new javax.swing.JMenu();
        attsheetmnit = new javax.swing.JMenuItem();
        Attendancesummnit = new javax.swing.JMenuItem();
        attendancepaidupmnit = new javax.swing.JMenuItem();
        attdencebydptmnit = new javax.swing.JMenuItem();
        AttendancePerDeptmnit = new javax.swing.JMenuItem();
        opmobidityundermnit = new javax.swing.JMenuItem();
        mohovermnit = new javax.swing.JMenuItem();
        patperdeptmnit = new javax.swing.JMenuItem();
        jSeparator23 = new javax.swing.JSeparator();
        printreceiptmnit = new javax.swing.JMenuItem();
        intinvmnit = new javax.swing.JMenuItem();
        invbyinvmnit = new javax.swing.JMenuItem();
        Outpatientinvoicetxtmnit = new javax.swing.JMenuItem();
        Detinvbyinvmnit = new javax.swing.JMenuItem();
        patstmtmnit = new javax.swing.JMenuItem();
        detailedpatstmtmnit = new javax.swing.JMenuItem();
        jSeparator24 = new javax.swing.JSeparator();
        stockbalancesmnit = new javax.swing.JMenuItem();
        clinicsmnit = new javax.swing.JMenuItem();
        patlabresultsmnit = new javax.swing.JMenuItem();
        detoprevmnit = new javax.swing.JMenuItem();
        unfinalisedOpmnit = new javax.swing.JMenuItem();
        cashUnbalancedOpmnit = new javax.swing.JMenuItem();
        prntreceiptmnit = new javax.swing.JMenuItem();
        opworkloadmnit = new javax.swing.JMenuItem();
        jSeparator106 = new javax.swing.JPopupMenu.Separator();
        dailyWorkloadsmnit = new javax.swing.JMenuItem();
        unhNHIFClaimmnit = new javax.swing.JMenuItem();
        inpatmn = new javax.swing.JMenu();
        Pregistermn = new javax.swing.JMenu();
        rpatientmnit = new javax.swing.JMenuItem();
        admissiomnit = new javax.swing.JMenuItem();
        dischargesmnit = new javax.swing.JMenuItem();
        Iperdeptmnit = new javax.swing.JMenuItem();
        AdmisDischargesmnit = new javax.swing.JMenuItem();
        Wardsmn = new javax.swing.JMenu();
        quotationmnit = new javax.swing.JMenuItem();
        admissbywardmnit = new javax.swing.JMenuItem();
        patbedoccupancymnit = new javax.swing.JMenuItem();
        wardoccstatisticsmnit = new javax.swing.JMenuItem();
        bedoccupancymnit = new javax.swing.JMenuItem();
        wardoccupancymnit = new javax.swing.JMenuItem();
        ipdaysmnit = new javax.swing.JMenuItem();
        dailybltmnit = new javax.swing.JMenuItem();
        ipBillStatusmnit = new javax.swing.JMenuItem();
        ipbillmnit = new javax.swing.JMenuItem();
        dailywardstmtmnit = new javax.swing.JMenuItem();
        dailywardsdischmnit = new javax.swing.JMenuItem();
        inpatientstmtmnit = new javax.swing.JMenuItem();
        ipanalysisformmnit = new javax.swing.JMenuItem();
        ipmorbmotaritymnit = new javax.swing.JMenuItem();
        dailybedreturnmnit = new javax.swing.JMenuItem();
        dailybedreturnSummarymnit = new javax.swing.JMenuItem();
        dailybedreturnDetailedmnit = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JSeparator();
        Interiminvoicemn = new javax.swing.JMenu();
        patientstatementmnit = new javax.swing.JMenuItem();
        billsummnit = new javax.swing.JMenuItem();
        interimdescinvmnit = new javax.swing.JMenuItem();
        interimInvoicePlainmnit = new javax.swing.JMenuItem();
        patientaccmnit = new javax.swing.JMenuItem();
        finalinvmn = new javax.swing.JMenu();
        detailedfinalinvmnit = new javax.swing.JMenuItem();
        sumfinalinvmnit = new javax.swing.JMenuItem();
        InPatInvCashmnit = new javax.swing.JMenuItem();
        InPatsInvTotalmnit = new javax.swing.JMenuItem();
        finalInPatientInvmnit = new javax.swing.JMenuItem();
        jSeparator35 = new javax.swing.JSeparator();
        suppliersmnit = new javax.swing.JMenuItem();
        outstandingordersmnit = new javax.swing.JMenuItem();
        releasepapermnit = new javax.swing.JMenuItem();
        nursingReportermn = new javax.swing.JMenu();
        bedsoremn = new javax.swing.JMenuItem();
        patientrepotsmn = new javax.swing.JMenuItem();
        reportingdepartmentalMenuItemnit = new javax.swing.JMenuItem();
        departmentalreportMenuItemnit = new javax.swing.JMenuItem();
        incidenceMenumn = new javax.swing.JMenu();
        reportincidenceMenuItemnit = new javax.swing.JMenuItem();
        approveincidenceMenuItemnit = new javax.swing.JMenuItem();
        viewincidenceMenuItemnit = new javax.swing.JMenuItem();
        patDepositsmn = new javax.swing.JMenu();
        unutilisedepositmnit = new javax.swing.JMenuItem();
        depositsviewmnit = new javax.swing.JCheckBoxMenuItem();
        jSeparator82 = new javax.swing.JSeparator();
        patacctmn = new javax.swing.JMenu();
        invoicesmn = new javax.swing.JMenu();
        unfinalisedinvmnit = new javax.swing.JMenuItem();
        unfinalinvmnit = new javax.swing.JMenuItem();
        finalisedinvmnit = new javax.swing.JMenuItem();
        totalschemeinvlistmnit = new javax.swing.JMenuItem();
        pativoicesmnit = new javax.swing.JMenuItem();
        jSeparator33 = new javax.swing.JSeparator();
        invoicemnit = new javax.swing.JMenuItem();
        distinvmnit = new javax.swing.JMenuItem();
        nhifinvoicemnit = new javax.swing.JMenuItem();
        nhiflistcreditsmnit = new javax.swing.JMenuItem();
        nhifcreditscompmnit = new javax.swing.JMenuItem();
        jSeparator34 = new javax.swing.JSeparator();
        IPCreditmnit = new javax.swing.JMenuItem();
        Opcreditmnit = new javax.swing.JMenuItem();
        Debtorscrnotemnit = new javax.swing.JMenuItem();
        creditnotesmnit = new javax.swing.JMenuItem();
        Outpatientinvoicetmnit = new javax.swing.JMenuItem();
        debtorinvmnit = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JSeparator();
        Receiptmn = new javax.swing.JMenu();
        receiptscopymnit = new javax.swing.JMenuItem();
        receiptperpayermnit = new javax.swing.JMenuItem();
        debreceiptsmnit = new javax.swing.JMenuItem();
        alteredreceiptsmnit = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JSeparator();
        detstmtmn = new javax.swing.JMenu();
        statementofaccmnit = new javax.swing.JMenuItem();
        detailedstmtmnit = new javax.swing.JMenuItem();
        scmepfmmnit = new javax.swing.JMenuItem();
        schmsdebtCollmnit = new javax.swing.JMenuItem();
        schemesalesmnit = new javax.swing.JMenuItem();
        detailedstmtsmnit = new javax.swing.JMenuItem();
        nhifStatementmnit = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JSeparator();
        Statementsmn = new javax.swing.JMenu();
        submStmtmnit = new javax.swing.JMenuItem();
        debtorsStmtmnit = new javax.swing.JMenuItem();
        DebtStatementmnit = new javax.swing.JMenuItem();
        payerdetStmtmnit = new javax.swing.JMenuItem();
        stmtsummperdebtmnit = new javax.swing.JMenuItem();
        debtorsyearlybalmnit = new javax.swing.JMenuItem();
        debtosbalmnit = new javax.swing.JMenuItem();
        exceedlimitsmnit = new javax.swing.JMenuItem();
        extactscmmnit = new javax.swing.JMenuItem();
        payerperfmmnit = new javax.swing.JMenuItem();
        payertnovermnit = new javax.swing.JMenuItem();
        detdebtorsStmtmnit = new javax.swing.JMenuItem();
        DebtStatementtxtmnit = new javax.swing.JMenuItem();
        DebtStatttxtmnit = new javax.swing.JMenuItem();
        DebtStattexlmnit = new javax.swing.JMenuItem();
        debtorSchemeStatementmnit = new javax.swing.JMenuItem();
        jSeparator20 = new javax.swing.JSeparator();
        ageingmn = new javax.swing.JMenu();
        compdebtorsmnit = new javax.swing.JMenuItem();
        payerageingmnit = new javax.swing.JMenuItem();
        payerageingsummnit = new javax.swing.JMenuItem();
        annualageingmnit = new javax.swing.JMenuItem();
        anualPayeragmnit = new javax.swing.JMenuItem();
        annualpayersummnit = new javax.swing.JMenuItem();
        compdebtorstxtmnit = new javax.swing.JMenuItem();
        compdebtorsbynamemnit = new javax.swing.JMenuItem();
        jSeparator22 = new javax.swing.JSeparator();
        SchemeDetailsmn = new javax.swing.JMenu();
        schemestaffmnit = new javax.swing.JMenuItem();
        scmattendsummnit = new javax.swing.JMenuItem();
        attdperscmdetmnit = new javax.swing.JMenuItem();
        payerstaffamdmnit = new javax.swing.JMenuItem();
        Scmammnit = new javax.swing.JMenuItem();
        jSeparator85 = new javax.swing.JSeparator();
        scmstatusmnit = new javax.swing.JMenuItem();
        scmperfrmnit = new javax.swing.JMenuItem();
        autolimitsmnit = new javax.swing.JMenuItem();
        payeractaccmnit = new javax.swing.JMenuItem();
        scmabtlimitmnit = new javax.swing.JMenuItem();
        jSeparator86 = new javax.swing.JSeparator();
        accabtexpiremnit = new javax.swing.JMenuItem();
        expiredaccmnit = new javax.swing.JMenuItem();
        closedschemesmnit = new javax.swing.JMenuItem();
        jSeparator87 = new javax.swing.JSeparator();
        marketertnovermnit = new javax.swing.JMenuItem();
        staffStatementsmnit = new javax.swing.JMenuItem();
        cafeteriaDebtorsStatementmnit = new javax.swing.JMenuItem();
        creditorsmn = new javax.swing.JMenu();
        creditorsinvmnit = new javax.swing.JMenuItem();
        invpercrdmnit = new javax.swing.JMenuItem();
        supplierinvmnit = new javax.swing.JMenuItem();
        invpersuppliermnit = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JSeparator();
        CrdVouchermnit = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        Paymentsmnit = new javax.swing.JMenuItem();
        paymentspercreditormnit = new javax.swing.JMenuItem();
        payeepymtmnit = new javax.swing.JMenuItem();
        creditorsinvSummnit = new javax.swing.JMenuItem();
        jSeparator16 = new javax.swing.JSeparator();
        crdstmtmnit = new javax.swing.JMenuItem();
        crdtstmtmnit = new javax.swing.JMenuItem();
        creditorsLedgermnit = new javax.swing.JMenuItem();
        storesrevmnit = new javax.swing.JMenuItem();
        jSeparator43 = new javax.swing.JSeparator();
        payrollledgermnit = new javax.swing.JMenuItem();
        jSeparator44 = new javax.swing.JSeparator();
        Creditorsmnit = new javax.swing.JMenuItem();
        ageingbycatmnit = new javax.swing.JMenuItem();
        creditorsageingbycatmnit = new javax.swing.JMenuItem();
        grtsuppliermnit = new javax.swing.JMenuItem();
        compdebtortxtsmnit = new javax.swing.JMenuItem();
        unlinkedgrnsmnit = new javax.swing.JMenuItem();
        ageingbysuppmnit = new javax.swing.JMenuItem();
        managmn = new javax.swing.JMenu();
        Doctorslistmn = new javax.swing.JMenu();
        doctorslistmnit = new javax.swing.JMenuItem();
        nursesmnit = new javax.swing.JMenuItem();
        accstatusmnit = new javax.swing.JMenuItem();
        jSeparator54 = new javax.swing.JSeparator();
        Voucherdetailsmn = new javax.swing.JMenu();
        docVouchermnit = new javax.swing.JMenuItem();
        detvouchmnit = new javax.swing.JMenuItem();
        paymentVouchermnit = new javax.swing.JMenuItem();
        jSeparator55 = new javax.swing.JSeparator();
        doctorsStamntmn = new javax.swing.JMenu();
        paymentsperdocmnit = new javax.swing.JMenuItem();
        paymentperdocSummnit = new javax.swing.JMenuItem();
        jSeparator58 = new javax.swing.JSeparator();
        doctorsstmtmnit = new javax.swing.JMenuItem();
        doctstmtpaidinvmnit = new javax.swing.JMenuItem();
        doctorsstatementmnit = new javax.swing.JMenuItem();
        stmtscmmnit = new javax.swing.JMenuItem();
        jSeparator60 = new javax.swing.JSeparator();
        docunpaidinvmnit = new javax.swing.JMenuItem();
        jSeparator59 = new javax.swing.JSeparator();
        stmtperdebtmnit = new javax.swing.JMenuItem();
        paidupperdebtmnit = new javax.swing.JMenuItem();
        paidupbyscmnit = new javax.swing.JMenuItem();
        doctorsallocstmtmnit = new javax.swing.JMenuItem();
        doctorstmtmnit = new javax.swing.JMenuItem();
        jSeparator56 = new javax.swing.JSeparator();
        whtstamentsmn = new javax.swing.JMenu();
        whtmnit = new javax.swing.JMenuItem();
        whtperdocmnit = new javax.swing.JMenuItem();
        whtsummnit = new javax.swing.JMenuItem();
        jSeparator57 = new javax.swing.JSeparator();
        doctorslistsrmtmn = new javax.swing.JMenu();
        doctorspaymentsmnit = new javax.swing.JMenuItem();
        doctorledgermnit = new javax.swing.JMenuItem();
        paidupsummmnit = new javax.swing.JMenuItem();
        docbalsummnit = new javax.swing.JMenuItem();
        docearndeductmnit = new javax.swing.JMenuItem();
        jSeparator83 = new javax.swing.JSeparator();
        financeopermn = new javax.swing.JMenu();
        CashierRepmn = new javax.swing.JMenu();
        shiftrepmnit = new javax.swing.JMenuItem();
        shiftrptbrdwnmnit = new javax.swing.JMenuItem();
        shiftreptotalmnit = new javax.swing.JMenuItem();
        shifttotalpercashpointmnit = new javax.swing.JMenuItem();
        shiftreprecmnit = new javax.swing.JMenuItem();
        shiftrepDetmnit = new javax.swing.JMenuItem();
        shiftstotalmnit = new javax.swing.JMenuItem();
        uncollectedshiftsmnit = new javax.swing.JMenuItem();
        shiftstotalsummnit = new javax.swing.JMenuItem();
        patreceiptsmnit = new javax.swing.JMenuItem();
        totalinpatrecmnit = new javax.swing.JMenuItem();
        allreceiptsmnit = new javax.swing.JMenuItem();
        allreceiptsnomnit = new javax.swing.JMenuItem();
        rptbrdwnmnit = new javax.swing.JMenuItem();
        rptperpointmnit = new javax.swing.JMenuItem();
        rptsummaryperpointmnit = new javax.swing.JMenuItem();
        Cashanalysisdeptmnit = new javax.swing.JMenuItem();
        dailyCashReturnsmnit = new javax.swing.JMenuItem();
        waiverexemnit = new javax.swing.JMenuItem();
        shiftsurrendermnit = new javax.swing.JMenuItem();
        groupedSurrendermnit = new javax.swing.JMenuItem();
        divisionalSurrendermnit = new javax.swing.JMenuItem();
        jSeparator105 = new javax.swing.JPopupMenu.Separator();
        paybillPaymentsmnit = new javax.swing.JMenuItem();
        mobileTxReportsmnit = new javax.swing.JMenuItem();
        jSeparator17 = new javax.swing.JSeparator();
        Salesmn = new javax.swing.JMenu();
        Cashanalysismnit = new javax.swing.JMenuItem();
        Cashsalesmnit = new javax.swing.JMenuItem();
        CashSalesbrdmnit = new javax.swing.JMenuItem();
        Salesmnit = new javax.swing.JMenuItem();
        ipservicesmnit = new javax.swing.JMenuItem();
        debtshiftmnit = new javax.swing.JMenuItem();
        jSeparator103 = new javax.swing.JPopupMenu.Separator();
        universalHealthcareReportsmn = new javax.swing.JMenu();
        creditSalesDepartmentReportsmnit = new javax.swing.JMenuItem();
        creditSalesDepartmentDetailedReportsmnit = new javax.swing.JMenuItem();
        exmptionsWaiversRefundsmnit = new javax.swing.JMenuItem();
        universalHealthcareSalesAnalysismnit = new javax.swing.JMenuItem();
        jSeparator45 = new javax.swing.JSeparator();
        RevRepotmd = new javax.swing.JMenu();
        dailyrevmnit = new javax.swing.JMenuItem();
        revperdepmnit = new javax.swing.JMenuItem();
        transperaccmnit = new javax.swing.JMenuItem();
        revrepmnit = new javax.swing.JMenuItem();
        oprevrptmnit = new javax.swing.JMenuItem();
        oprevbyaccmnit = new javax.swing.JMenuItem();
        iprevrptmnit = new javax.swing.JMenuItem();
        iprevbyaccmnit = new javax.swing.JMenuItem();
        theatrescorecard = new javax.swing.JMenuItem();
        reveagainstmnit = new javax.swing.JMenuItem();
        revenuecountallmnit = new javax.swing.JMenuItem();
        revenuecountlmnit = new javax.swing.JMenuItem();
        jSeparator18 = new javax.swing.JSeparator();
        oprevbrkdwnmnit = new javax.swing.JMenuItem();
        jSeparator47 = new javax.swing.JSeparator();
        pettycashRepmn = new javax.swing.JMenu();
        pettycashpmtmnit = new javax.swing.JMenuItem();
        pettycashreqmnit = new javax.swing.JMenuItem();
        pettycashVouchmnit = new javax.swing.JMenuItem();
        pettycashshiftsmnit = new javax.swing.JMenuItem();
        pettycashshiftsclaimnit = new javax.swing.JMenuItem();
        pettycashshiftssummmnit = new javax.swing.JMenuItem();
        pettycmentmnit = new javax.swing.JMenuItem();
        pettycapaymnit = new javax.swing.JMenuItem();
        jSeparator19 = new javax.swing.JSeparator();
        otherVouchermnit = new javax.swing.JMenuItem();
        jSeparator27 = new javax.swing.JSeparator();
        expensesmnit = new javax.swing.JMenuItem();
        jSeparator28 = new javax.swing.JSeparator();
        journalmnit = new javax.swing.JMenuItem();
        jSeparator46 = new javax.swing.JSeparator();
        pharmacymnit = new javax.swing.JMenuItem();
        vbookmn = new javax.swing.JMenu();
        vallocationmnit = new javax.swing.JMenuItem();
        vcommitmentmnit = new javax.swing.JMenuItem();
        vpaymentsmnit = new javax.swing.JMenuItem();
        outstandingcomitmnit = new javax.swing.JMenuItem();
        jSeparator97 = new javax.swing.JPopupMenu.Separator();
        registersmnit = new javax.swing.JMenuItem();
        glreportsmn = new javax.swing.JMenu();
        transactionslsmnitmnit = new javax.swing.JMenuItem();
        transauditmnit = new javax.swing.JMenuItem();
        transditmnit = new javax.swing.JMenuItem();
        jSeparator48 = new javax.swing.JSeparator();
        CashBookmn = new javax.swing.JMenu();
        cashBookmnit = new javax.swing.JMenuItem();
        postdatedchqmnit = new javax.swing.JMenuItem();
        cancelledchqmnit = new javax.swing.JMenuItem();
        cbookbalancesmnit = new javax.swing.JMenuItem();
        banksummnit = new javax.swing.JMenuItem();
        cashflowoptmnit = new javax.swing.JMenuItem();
        cheqrequmnit = new javax.swing.JMenuItem();
        cashBkmnit = new javax.swing.JMenuItem();
        cashBokmnit = new javax.swing.JMenuItem();
        jSeparator49 = new javax.swing.JSeparator();
        Bankrepmn = new javax.swing.JMenu();
        banksmnit = new javax.swing.JMenuItem();
        bankingsmnit = new javax.swing.JMenuItem();
        bankreccmnit = new javax.swing.JMenuItem();
        Unreconcitemsmnit = new javax.swing.JMenuItem();
        unrecitemsmnit = new javax.swing.JMenuItem();
        bankrecdiscrpmnit = new javax.swing.JMenuItem();
        jSeparator50 = new javax.swing.JSeparator();
        profitlossmn = new javax.swing.JMenu();
        pnlmnit = new javax.swing.JMenuItem();
        anualplmnit = new javax.swing.JMenuItem();
        pnltxtmnit = new javax.swing.JMenuItem();
        pnltxttrdmnit = new javax.swing.JMenuItem();
        incomestmtsummnit = new javax.swing.JMenuItem();
        incomestmdtlmnit = new javax.swing.JMenuItem();
        financistmtmnit = new javax.swing.JMenuItem();
        jSeparator51 = new javax.swing.JSeparator();
        Trialbalancemn = new javax.swing.JMenu();
        trialbalancemnit = new javax.swing.JMenuItem();
        DtlTrialBalancemnit = new javax.swing.JMenuItem();
        Annualtbmnit = new javax.swing.JMenuItem();
        tbmovmentmnit = new javax.swing.JMenuItem();
        Anualtbmnit = new javax.swing.JMenuItem();
        Anatbmnit = new javax.swing.JMenuItem();
        groupedTBmnit = new javax.swing.JMenuItem();
        jSeparator481 = new javax.swing.JSeparator();
        acctdetmnit = new javax.swing.JMenuItem();
        jSeparator491 = new javax.swing.JSeparator();
        balancestmn = new javax.swing.JMenu();
        lbalancesheetmnit = new javax.swing.JMenuItem();
        bsmvmnit = new javax.swing.JMenuItem();
        lbalancesheetdtlmnit = new javax.swing.JMenuItem();
        SubActivimnit = new javax.swing.JMenuItem();
        jSeparator501 = new javax.swing.JSeparator();
        boardMembersmnit = new javax.swing.JMenuItem();
        deptincexpmnit = new javax.swing.JMenuItem();
        jSeparator511 = new javax.swing.JSeparator();
        patientctlaccmnit = new javax.swing.JMenuItem();
        patientctlsumnit = new javax.swing.JMenuItem();
        Transsummnit = new javax.swing.JMenuItem();
        jSeparator52 = new javax.swing.JSeparator();
        journalsviewmnit = new javax.swing.JMenuItem();
        journalsmnit = new javax.swing.JMenuItem();
        paymentssummnit = new javax.swing.JMenuItem();
        jSeparator53 = new javax.swing.JSeparator();
        Taxesmn = new javax.swing.JMenu();
        CorporateTaxmnit = new javax.swing.JMenuItem();
        taxreturnmnit = new javax.swing.JMenuItem();
        chartaccountsmnit = new javax.swing.JMenuItem();
        accountstransmnit = new javax.swing.JMenuItem();
        ManagementReportmn = new javax.swing.JMenu();
        MohCashanalysismnit = new javax.swing.JMenuItem();
        Dailyrevmnit = new javax.swing.JMenuItem();
        jSeparator36 = new javax.swing.JSeparator();
        weeklyrevmnit = new javax.swing.JMenuItem();
        weeklyrevCompmnit = new javax.swing.JMenuItem();
        jSeparator37 = new javax.swing.JSeparator();
        Monthrevmnit = new javax.swing.JMenuItem();
        MonthrevCompmnit = new javax.swing.JMenuItem();
        Monthlyrevmnit = new javax.swing.JMenuItem();
        MonthlyrevCompmnit = new javax.swing.JMenuItem();
        jSeparator38 = new javax.swing.JSeparator();
        Quarterrevmnit = new javax.swing.JMenuItem();
        QuartelyRevCompmnit = new javax.swing.JMenuItem();
        jSeparator39 = new javax.swing.JSeparator();
        Yearyrevmnit = new javax.swing.JMenuItem();
        jSeparator40 = new javax.swing.JSeparator();
        InpatientAnalysismnit = new javax.swing.JMenuItem();
        budgetingmn = new javax.swing.JMenu();
        entireVoteBookmnit = new javax.swing.JMenuItem();
        departmentalVoteBookmnit = new javax.swing.JMenuItem();
        departmentalVoteBookmnit1 = new javax.swing.JMenuItem();
        departmentalVoteBookmnit2 = new javax.swing.JMenuItem();
        entireProcurementPlanmnit = new javax.swing.JMenuItem();
        departmentalProcurementPlanmnit = new javax.swing.JMenuItem();
        divisionalexpendituremnit = new javax.swing.JMenuItem();
        jSeparator84 = new javax.swing.JSeparator();
        listsmn = new javax.swing.JMenu();
        revenuemnit = new javax.swing.JMenuItem();
        schemesmnit = new javax.swing.JMenuItem();
        specimensmnit = new javax.swing.JMenuItem();
        timelogmnit = new javax.swing.JMenuItem();
        pharmperformmnit = new javax.swing.JMenuItem();
        laboratoryresultsmnit = new javax.swing.JMenuItem();
        chekinmnit = new javax.swing.JMenuItem();
        revpricelistmnit = new javax.swing.JMenuItem();
        packagepricelistmnit = new javax.swing.JMenuItem();
        jSeparator841 = new javax.swing.JSeparator();
        claimsmn = new javax.swing.JMenu();
        dispatchschmn = new javax.swing.JMenu();
        dispatchmnit = new javax.swing.JMenuItem();
        displistmnit = new javax.swing.JMenuItem();
        dispperscmnit = new javax.swing.JMenuItem();
        dispperdebtmnit = new javax.swing.JMenuItem();
        nhifdispmnit = new javax.swing.JMenuItem();
        DispatchSummnit = new javax.swing.JMenuItem();
        unpaidDispInvmnit = new javax.swing.JMenuItem();
        dispatchperpayersummnit = new javax.swing.JMenuItem();
        Dispdelnotemnit = new javax.swing.JMenuItem();
        nhif18mnit = new javax.swing.JMenuItem();
        unapprovedinvmn = new javax.swing.JMenu();
        Perschememnit = new javax.swing.JMenuItem();
        Perdebtormnit = new javax.swing.JMenuItem();
        Summarymnit = new javax.swing.JMenuItem();
        approvedinvmn = new javax.swing.JMenu();
        Schememnit = new javax.swing.JMenuItem();
        debtormnit = new javax.swing.JMenuItem();
        dispconf = new javax.swing.JMenu();
        confdispsummnit = new javax.swing.JMenuItem();
        confdispperscmnit = new javax.swing.JMenuItem();
        dispconfperpayermnit = new javax.swing.JMenuItem();
        dormaccmnit = new javax.swing.JMenuItem();
        debtcollsummnit = new javax.swing.JMenuItem();
        ScmsalesSummnit = new javax.swing.JMenuItem();
        retuenedclaims = new javax.swing.JMenu();
        rtclaimssummnit = new javax.swing.JMenuItem();
        rtclaimsbyscmnit = new javax.swing.JMenuItem();
        resubmissionbyschmnit = new javax.swing.JMenuItem();
        allocationmn = new javax.swing.JMenu();
        allocsummnit = new javax.swing.JMenuItem();
        dispatchedmn = new javax.swing.JMenuItem();
        debtallocsumnit = new javax.swing.JMenuItem();
        allocationrepmnit = new javax.swing.JMenuItem();
        scmallocsummnit = new javax.swing.JMenuItem();
        debtrectallocmnit = new javax.swing.JMenuItem();
        invwithbalmnit = new javax.swing.JMenuItem();
        allocsummperdebtmnit = new javax.swing.JMenuItem();
        allocsumnit = new javax.swing.JMenuItem();
        allocchqmnit = new javax.swing.JMenuItem();
        creditsbypayermnit = new javax.swing.JMenuItem();
        Payerallocdetmnit = new javax.swing.JMenuItem();
        creditsSummnit = new javax.swing.JMenuItem();
        unallocpymmnit = new javax.swing.JMenuItem();
        provisionsmn = new javax.swing.JMenu();
        Provisionssummnit = new javax.swing.JMenuItem();
        provperdebtmnit = new javax.swing.JMenuItem();
        provperschmnit = new javax.swing.JMenuItem();
        provperdocmnit = new javax.swing.JMenuItem();
        docprovsummnit = new javax.swing.JMenuItem();
        provdocscmnit = new javax.swing.JMenuItem();
        wrt = new javax.swing.JMenu();
        wrtperscmnit = new javax.swing.JMenuItem();
        wrtsummnit = new javax.swing.JMenuItem();
        jSeparator831 = new javax.swing.JSeparator();
        PatientRecordsmn = new javax.swing.JMenu();
        emrDashBoardmnit = new javax.swing.JMenuItem();
        diagnosist = new javax.swing.JMenu();
        Ipmobiditymatalitymnit = new javax.swing.JMenuItem();
        patientdiagmnit = new javax.swing.JMenuItem();
        Diagnosissummnit = new javax.swing.JMenuItem();
        DiagnosisSumPerSexmnit = new javax.swing.JMenuItem();
        ipMobidityMotaritymnit = new javax.swing.JMenuItem();
        Diagnosisanalysismnit = new javax.swing.JMenuItem();
        MonthlyDiagAnalysismnit = new javax.swing.JMenuItem();
        Diagnosisbydocsummnit = new javax.swing.JMenuItem();
        diagbydocsmnit = new javax.swing.JMenuItem();
        diagnosisperdiesesemnit = new javax.swing.JMenuItem();
        theatrecasesmnit = new javax.swing.JMenuItem();
        conditionfoundmnit = new javax.swing.JMenuItem();
        maternitymn = new javax.swing.JMenu();
        newbornsmnit = new javax.swing.JMenuItem();
        midwivesmnit = new javax.swing.JMenuItem();
        monthlydeliveryretmnit = new javax.swing.JMenuItem();
        BirthWeightmnit = new javax.swing.JMenuItem();
        safedeliveriesmnit = new javax.swing.JMenuItem();
        Labreportsmn = new javax.swing.JMenu();
        labResultsListingmnit = new javax.swing.JMenuItem();
        labresultsindmnit = new javax.swing.JMenuItem();
        laborresultsummnit = new javax.swing.JMenuItem();
        labsspecimensmnit = new javax.swing.JMenuItem();
        patlabresusmnit = new javax.swing.JMenuItem();
        reqbydocmnit = new javax.swing.JMenuItem();
        laboresultsmnit = new javax.swing.JMenuItem();
        laboworktimemnit = new javax.swing.JMenuItem();
        labmonthlyanalysismnit = new javax.swing.JMenuItem();
        xrayrep = new javax.swing.JMenu();
        xraylistmnit = new javax.swing.JMenuItem();
        XrayResultsmnit = new javax.swing.JMenuItem();
        xrayperfmnit = new javax.swing.JMenuItem();
        xraymonthlyanalysismnit = new javax.swing.JMenuItem();
        dental = new javax.swing.JMenu();
        dentregistermnit = new javax.swing.JMenuItem();
        eyemn = new javax.swing.JMenu();
        eyeClinicRegistermnit = new javax.swing.JMenuItem();
        eyeUnitDetailedReportmnit = new javax.swing.JMenuItem();
        eyeServicesSummarymnit = new javax.swing.JMenuItem();
        clinicsbookings = new javax.swing.JMenu();
        Bookingsmnit = new javax.swing.JMenuItem();
        ConfirmedBookingsmnit = new javax.swing.JMenuItem();
        deathsmnit = new javax.swing.JMenuItem();
        sickoffsmnit = new javax.swing.JMenuItem();
        fprepmn = new javax.swing.JMenu();
        fpsummarymnit = new javax.swing.JMenuItem();
        fpercategorymnit = new javax.swing.JMenuItem();
        fpclientpertypemnit = new javax.swing.JMenuItem();
        fpclientpermnit = new javax.swing.JMenuItem();
        contraceptmnit = new javax.swing.JMenuItem();
        fpcontrapercategorymnit = new javax.swing.JMenuItem();
        gbvreportmnit = new javax.swing.JMenu();
        gbvmonthmnit = new javax.swing.JMenuItem();
        survivorprofmnit = new javax.swing.JMenuItem();
        pepetratormnit = new javax.swing.JMenuItem();
        jSeparator104 = new javax.swing.JPopupMenu.Separator();
        tbScreeningReportmnit = new javax.swing.JMenuItem();
        tbScreeningProceduresmnit = new javax.swing.JMenuItem();
        managementmnit = new javax.swing.JMenu();
        Deprecmnit = new javax.swing.JMenuItem();
        Deprecatesmnit = new javax.swing.JMenuItem();
        AssetAlmnit = new javax.swing.JMenuItem();
        asrepmnit = new javax.swing.JMenuItem();
        astregmnit = new javax.swing.JMenuItem();
        aslocmnit = new javax.swing.JMenuItem();
        insuncemnit = new javax.swing.JMenuItem();
        jSeparator32 = new javax.swing.JSeparator();
        BedOccmnit = new javax.swing.JMenuItem();
        Revmnit = new javax.swing.JMenuItem();
        Aiemnit = new javax.swing.JMenuItem();
        AieRepmnit = new javax.swing.JMenuItem();
        useraccountsmn = new javax.swing.JMenuItem();
        jSeparator101 = new javax.swing.JPopupMenu.Separator();
        gisReportermnit = new javax.swing.JMenuItem();
        viewsmn = new javax.swing.JMenu();
        namesearchmnit = new javax.swing.JMenuItem();
        departmentmnit = new javax.swing.JMenuItem();
        patstmtsmnit = new javax.swing.JMenuItem();
        patdocstmtmnit = new javax.swing.JMenuItem();
        changepaymodesmnit = new javax.swing.JMenuItem();
        changeiplimitmnit = new javax.swing.JMenuItem();
        patstmtsummnit = new javax.swing.JMenuItem();
        patmergemnit = new javax.swing.JMenuItem();
        VisitIdmnit = new javax.swing.JMenuItem();
        jSeparator88 = new javax.swing.JSeparator();
        invammendmnit = new javax.swing.JMenuItem();
        merginvmnit = new javax.swing.JMenuItem();
        jSeparator89 = new javax.swing.JSeparator();
        schmdetmnit = new javax.swing.JMenuItem();
        jSeparator881 = new javax.swing.JSeparator();
        stmtmnit = new javax.swing.JMenuItem();
        creditorsView = new javax.swing.JMenuItem();
        creditorssummarybtn = new javax.swing.JMenuItem();
        servicesstmntmnit = new javax.swing.JMenuItem();
        patbillmergemnit = new javax.swing.JMenuItem();
        IpAnalysismnit = new javax.swing.JMenuItem();
        transauditingmnit = new javax.swing.JMenuItem();
        insertNotrackmnit = new javax.swing.JMenuItem();
        changeInvPayermnit = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        activeReportsmnit = new javax.swing.JMenuItem();
        postOpeningBalancesPatientsmnit = new javax.swing.JMenuItem();
        cashSalesReportmnit = new javax.swing.JMenuItem();
        creditSalesReportmnit = new javax.swing.JMenuItem();
        useractivities = new javax.swing.JMenuItem();
        jSeparator108 = new javax.swing.JPopupMenu.Separator();
        approvedVouchersmnit = new javax.swing.JMenuItem();
        rebatesCreditSalesReportmnit = new javax.swing.JMenuItem();
        creditSalesDetailedmnit = new javax.swing.JMenuItem();
        analyseMaternityBillsmnit = new javax.swing.JMenuItem();
        jSeparator107 = new javax.swing.JPopupMenu.Separator();
        urlRegistrationmnit = new javax.swing.JMenuItem();
        systemn = new javax.swing.JMenu();
        stockmnit1 = new javax.swing.JMenuItem();
        accountsmnit1 = new javax.swing.JMenuItem();
        assetmgtmnit1 = new javax.swing.JMenuItem();
        reportsmnit1 = new javax.swing.JMenuItem();
        fahrmnit = new javax.swing.JMenuItem();
        docsmnit1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        lnfmn = new javax.swing.JMenu();
        swinglnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        nimbuzlnfMnits = new javax.swing.JMenuItem();
        winlnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        motiflnfmnit1 = new javax.swing.JCheckBoxMenuItem();
        macmnit1 = new javax.swing.JCheckBoxMenuItem();
        skinmn = new javax.swing.JMenu();
        xpmnit1 = new javax.swing.JRadioButtonMenuItem();
        macos1mnit1 = new javax.swing.JRadioButtonMenuItem();
        whiltmnit1 = new javax.swing.JRadioButtonMenuItem();
        modernmnit1 = new javax.swing.JRadioButtonMenuItem();
        aquamnit1 = new javax.swing.JRadioButtonMenuItem();
        beosmnit1 = new javax.swing.JRadioButtonMenuItem();
        bbjmnit11 = new javax.swing.JRadioButtonMenuItem();
        xpskinmn = new javax.swing.JMenu();
        officexpmn = new javax.swing.JMenuItem();
        office2003mn = new javax.swing.JMenuItem();
        studio2k5mn = new javax.swing.JMenuItem();
        winlnfnewmnits = new javax.swing.JMenuItem();
        utilitymn = new javax.swing.JMenu();
        cpactdatamnit = new javax.swing.JMenuItem();
        validatamnit = new javax.swing.JMenuItem();
        bkupmnit = new javax.swing.JMenuItem();
        optimdbmnit = new javax.swing.JMenuItem();
        FinancialPeriodmn = new javax.swing.JMenu();
        monthlyroutinemnit = new javax.swing.JMenuItem();
        setaccperiodmnit = new javax.swing.JMenuItem();
        setaccperiodmnit1 = new javax.swing.JMenuItem();
        openperiodmnit2 = new javax.swing.JMenuItem();
        yearlyrotinemnit = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JSeparator();
        chgpasswdmnit1 = new javax.swing.JMenuItem();
        changeUserPasswordmnit = new javax.swing.JMenuItem();
        updatedomainsmnit = new javax.swing.JMenuItem();
        restoredatamnit = new javax.swing.JMenuItem();
        Yearlyhlpsetsmnit = new javax.swing.JMenuItem();
        Approvemnit = new javax.swing.JMenuItem();
        mbVerifymnit = new javax.swing.JMenuItem();
        receiptPrefsmnit = new javax.swing.JMenuItem();
        docsdir = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        changeBackgoundImagemnit1 = new javax.swing.JMenuItem();
        writeofflimitsmnit = new javax.swing.JMenuItem();
        textPrintermnit = new javax.swing.JMenuItem();
        receiptPrinterMnit = new javax.swing.JMenuItem();
        jSeparator90 = new javax.swing.JSeparator();
        logonwatermarkmnit = new javax.swing.JMenuItem();
        localeSettingsMnit = new javax.swing.JMenuItem();
        jSeparator92 = new javax.swing.JSeparator();
        readSmartCardMnit = new javax.swing.JMenuItem();
        jSeparator91 = new javax.swing.JSeparator();
        setAccPeriodsmnit = new javax.swing.JMenuItem();
        jSeparator93 = new javax.swing.JSeparator();
        reportDesignerMnit = new javax.swing.JMenuItem();
        messageSnoozePeriodmnit = new javax.swing.JMenuItem();
        mesageRecyclePeriodmnit = new javax.swing.JMenuItem();
        smsFetchSnoozePeriodmnit = new javax.swing.JMenuItem();
        messageCountDelaymnit = new javax.swing.JMenuItem();
        chartDefinitionMnit = new javax.swing.JMenuItem();
        enableExemptionsmnit = new javax.swing.JCheckBoxMenuItem();
        salesPrefsmnit = new javax.swing.JMenuItem();
        jSeparator77 = new javax.swing.JPopupMenu.Separator();
        accessControlMnit = new javax.swing.JMenuItem();
        helpmn = new javax.swing.JMenu();
        hlpcontmnit = new javax.swing.JMenuItem();
        aboutmn = new javax.swing.JMenuItem();
        jSeparator98 = new javax.swing.JPopupMenu.Separator();
        helpDesk = new javax.swing.JMenuItem();

        graphViewDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        graphViewDialog.setTitle("Column Filter");
        graphViewDialog.setModal(true);
        graphViewDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        valuesAxisSelector.setBorder(javax.swing.BorderFactory.createTitledBorder("Column Selector"));
        valuesAxisSelector.setLayout(new java.awt.GridBagLayout());

        columnSelectorScrollPane.setViewportView(columnSelectorTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        valuesAxisSelector.add(columnSelectorScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 50.0;
        gridBagConstraints.weighty = 50.0;
        graphViewDialog.getContentPane().add(valuesAxisSelector, gridBagConstraints);

        xaxisColumnPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("X-Axis Selector"));
        xaxisColumnPanel.setLayout(new java.awt.GridBagLayout());

        xaxisComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xaxisComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        xaxisColumnPanel.add(xaxisComboBox, gridBagConstraints);

        xaxisLabel.setText("Select X-Axis variable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        xaxisColumnPanel.add(xaxisLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        graphViewDialog.getContentPane().add(xaxisColumnPanel, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        submitQuery.setText("Submit Values");
        submitQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitQueryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(submitQuery, gridBagConstraints);

        cancelQuery.setText("Cancel Query");
        cancelQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelQueryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(cancelQuery, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        chartButtonGroup.add(barChart);
        barChart.setMnemonic('B');
        barChart.setText("Bar Chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(barChart, gridBagConstraints);

        chartButtonGroup.add(pieChart);
        pieChart.setMnemonic('P');
        pieChart.setText("Pie Chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(pieChart, gridBagConstraints);

        chartButtonGroup.add(xyChart);
        xyChart.setMnemonic('X');
        xyChart.setText("XY Chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(xyChart, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel2.add(jPanel7, gridBagConstraints);

        closeDialog.setText("Close");
        closeDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeDialogActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(closeDialog, gridBagConstraints);

        help.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(help, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        graphViewDialog.getContentPane().add(jPanel2, gridBagConstraints);

        chartDdefinitionDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        chartDdefinitionDialog.setTitle("Chart Definition Tool");
        chartDdefinitionDialog.setMinimumSize(new java.awt.Dimension(700, 600));
        chartDdefinitionDialog.setModal(true);
        chartDdefinitionDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        valuesAxisSelector1.setBorder(javax.swing.BorderFactory.createTitledBorder("Column Selector"));
        valuesAxisSelector1.setLayout(new java.awt.GridBagLayout());

        columnSelectorScrollPane1.setViewportView(columnSelectorTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        valuesAxisSelector1.add(columnSelectorScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 50.0;
        gridBagConstraints.weighty = 25.0;
        chartDdefinitionDialog.getContentPane().add(valuesAxisSelector1, gridBagConstraints);

        xaxisColumnPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("X-Axis Selector"));
        xaxisColumnPanel1.setLayout(new java.awt.GridBagLayout());

        xaxisComboBox1.setEditable(true);
        xaxisComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xaxisComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(xaxisComboBox1, gridBagConstraints);

        xaxisLabel1.setText("Select X-Axis variable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        xaxisColumnPanel1.add(xaxisLabel1, gridBagConstraints);

        nameOfViewLbl.setText("Name of database Query/View");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(nameOfViewLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(viewNameTxt, gridBagConstraints);

        chartTitleLbl.setText("Chart Title");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(chartTitleLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(chartTitleTxt, gridBagConstraints);

        xAxisLbl.setText("Chart Category (Chart Grouping)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(xAxisLbl, gridBagConstraints);

        yAxisLbl.setText("Y Axis Label");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(yAxisLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(yAxisTxt, gridBagConstraints);

        chartTypeLbl.setText("Define Type of chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        xaxisColumnPanel1.add(chartTypeLbl, gridBagConstraints);

        chartTypeCmbx.setEditable(true);
        chartTypeCmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PIE", "XY", "BAR" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        xaxisColumnPanel1.add(chartTypeCmbx, gridBagConstraints);

        chartCategoryCmbx.setEditable(true);
        chartCategoryCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT DISTINCT chart_category FROM charts_graphs ORDER BY chart_category"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        xaxisColumnPanel1.add(chartCategoryCmbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        chartDdefinitionDialog.getContentPane().add(xaxisColumnPanel1, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        submitQuery1.setText("Save Chart Definition");
        submitQuery1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitQuery1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(submitQuery1, gridBagConstraints);

        cancelQuery1.setText("Cancel Query Definition");
        cancelQuery1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelQuery1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel8.add(cancelQuery1, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        barChart1.setMnemonic('B');
        barChart1.setText("Bar Chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(barChart1, gridBagConstraints);

        pieChart1.setMnemonic('P');
        pieChart1.setText("Pie Chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(pieChart1, gridBagConstraints);

        xyChart1.setMnemonic('X');
        xyChart1.setText("XY Chart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(xyChart1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel8.add(jPanel9, gridBagConstraints);

        closeDialog1.setText("Close");
        closeDialog1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeDialog1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel8.add(closeDialog1, gridBagConstraints);

        help1.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel8.add(help1, gridBagConstraints);

        updateChartBtn.setText("Update Chart Definition");
        updateChartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateChartBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(updateChartBtn, gridBagConstraints);

        deleteChartBtn.setText("Delete Chart Definition");
        deleteChartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteChartBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(deleteChartBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        chartDdefinitionDialog.getContentPane().add(jPanel8, gridBagConstraints);

        queryDefinerPanel.setLayout(new java.awt.GridBagLayout());

        querykiwiTextPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Query Text Field"));
        querykiwiTextPanel.setToolTipText("Please type in your query and press \"submit query\"");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 50.0;
        gridBagConstraints.weighty = 200.0;
        queryDefinerPanel.add(querykiwiTextPanel, gridBagConstraints);

        queryPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Load/Save Query"));
        queryPane.setLayout(new java.awt.GridBagLayout());

        saveQuery.setMnemonic('S');
        saveQuery.setText("Save Query to file ...");
        saveQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveQueryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        queryPane.add(saveQuery, gridBagConstraints);

        clearQuery.setMnemonic('l');
        clearQuery.setText("Clear Query");
        clearQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearQueryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        queryPane.add(clearQuery, gridBagConstraints);

        loadQuery.setMnemonic('L');
        loadQuery.setText("Load Query ...");
        loadQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadQueryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        queryPane.add(loadQuery, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        queryDefinerPanel.add(queryPane, gridBagConstraints);

        subminQueryPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Submit/Close query dialog"));
        subminQueryPane.setLayout(new java.awt.GridBagLayout());

        closeDialog2.setMnemonic('C');
        closeDialog2.setText("Close Query Dialog");
        closeDialog2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeDialog2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        subminQueryPane.add(closeDialog2, gridBagConstraints);

        submitQuery2.setMnemonic('Q');
        submitQuery2.setText("Submit Query");
        submitQuery2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitQuery2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        subminQueryPane.add(submitQuery2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        queryDefinerPanel.add(subminQueryPane, gridBagConstraints);

        mainLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        mainLabel.setLayout(new java.awt.GridBagLayout());

        QueryTipLabel.setForeground(new java.awt.Color(0, 0, 102));
        QueryTipLabel.setText("Type your custom query in the text field provided below.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainLabel.add(QueryTipLabel, gridBagConstraints);

        chartNameLbl.setText("Chart Description (Creates Menu/Button with similar name on Funsoft)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainLabel.add(chartNameLbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainLabel.add(chartNameTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        queryDefinerPanel.add(mainLabel, gridBagConstraints);

        helPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Assistance"));
        helPanel.setLayout(new java.awt.GridBagLayout());

        helpButton1.setMnemonic('H');
        helpButton1.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        helPanel.add(helpButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        queryDefinerPanel.add(helPanel, gridBagConstraints);

        spacerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Chart to edit"));
        spacerPanel.setLayout(new java.awt.GridBagLayout());
        spacerPanel.add(QueryIcon, new java.awt.GridBagConstraints());

        chartEditCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT chart_description FROM charts_graphs ORDER BY chart_description"));
        chartEditCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartEditCmbxActionPerformed(evt);
            }
        });
        spacerPanel.add(chartEditCmbx, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        queryDefinerPanel.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        chartDdefinitionDialog.getContentPane().add(queryDefinerPanel, gridBagConstraints);

        jMenuItem8.setText("jMenuItem8");

        jMenuItem9.setText("jMenuItem9");

        jMenuItem10.setText("jMenuItem10");

        jMenuItem11.setText("jMenuItem11");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        mainSplitPane.setDividerLocation(250);
        mainSplitPane.setName("Hospital Operations"); // NOI18N
        mainSplitPane.setOneTouchExpandable(true);
        mainSplitPane.setOpaque(false);
        mainSplitPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                mainSplitPaneComponentShown(evt);
            }
        });

        treePane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        treePane.setLayout(new java.awt.GridBagLayout());
        mainSplitPane.setLeftComponent(treePane);

        desktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        desktopPane.setOpaque(false);
        desktopPane.setLayout(new java.awt.GridBagLayout());

        saccopn.setBackground(new java.awt.Color(0, 153, 255));
        saccopn.setOpaque(false);
        saccopn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saccopnMousePressed(evt);
            }
        });
        saccopn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                saccopnComponentShown(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        desktopPane.add(saccopn, gridBagConstraints);

        mainSplitPane.setRightComponent(desktopPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        mainPanel.add(mainSplitPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        jToolBar3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar3.setRollover(true);
        jToolBar3.setAutoscrolls(true);

        fmgrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Home 2.png"))); // NOI18N
        fmgrBttn.setToolTipText("File Manager");
        fmgrBttn.setBorderPainted(false);
        fmgrBttn.setFocusPainted(false);
        fmgrBttn.setFocusable(false);
        fmgrBttn.setMaximumSize(new java.awt.Dimension(48, 32));
        fmgrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        fmgrBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmgrBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(fmgrBttn);

        calcBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Appointments.png"))); // NOI18N
        calcBttn.setToolTipText("Calculator");
        calcBttn.setAlignmentX(0.5F);
        calcBttn.setBorderPainted(false);
        calcBttn.setFocusPainted(false);
        calcBttn.setFocusable(false);
        calcBttn.setMaximumSize(new java.awt.Dimension(48, 32));
        calcBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        calcBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(calcBttn);

        brwsrBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Globe 2.png"))); // NOI18N
        brwsrBttn.setToolTipText("Internet browser");
        brwsrBttn.setBorderPainted(false);
        brwsrBttn.setFocusPainted(false);
        brwsrBttn.setFocusable(false);
        brwsrBttn.setMaximumSize(new java.awt.Dimension(48, 32));
        brwsrBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        brwsrBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brwsrBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(brwsrBttn);

        editButtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Document.png"))); // NOI18N
        editButtn.setToolTipText("Word processor");
        editButtn.setBorderPainted(false);
        editButtn.setFocusPainted(false);
        editButtn.setFocusable(false);
        editButtn.setMaximumSize(new java.awt.Dimension(48, 32));
        editButtn.setMinimumSize(new java.awt.Dimension(26, 26));
        editButtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtnActionPerformed(evt);
            }
        });
        jToolBar3.add(editButtn);

        mtmediaBttn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Compose Email.png"))); // NOI18N
        mtmediaBttn1.setToolTipText("Spread Sheet");
        mtmediaBttn1.setBorderPainted(false);
        mtmediaBttn1.setFocusPainted(false);
        mtmediaBttn1.setFocusable(false);
        mtmediaBttn1.setMaximumSize(new java.awt.Dimension(48, 32));
        mtmediaBttn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtmediaBttn1ActionPerformed(evt);
            }
        });
        jToolBar3.add(mtmediaBttn1);

        mailBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Email 3.png"))); // NOI18N
        mailBttn.setToolTipText("Email utility");
        mailBttn.setBorderPainted(false);
        mailBttn.setFocusPainted(false);
        mailBttn.setFocusable(false);
        mailBttn.setMaximumSize(new java.awt.Dimension(48, 32));
        mailBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mailBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(mailBttn);

        mtmediaBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Music Player 1.png"))); // NOI18N
        mtmediaBttn.setToolTipText("Multimedia player");
        mtmediaBttn.setBorderPainted(false);
        mtmediaBttn.setFocusPainted(false);
        mtmediaBttn.setMaximumSize(new java.awt.Dimension(48, 32));
        mtmediaBttn.setMinimumSize(new java.awt.Dimension(26, 26));
        mtmediaBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtmediaBttnActionPerformed(evt);
            }
        });
        jToolBar3.add(mtmediaBttn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar3, gridBagConstraints);

        jToolBar31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar31.setFloatable(false);

        backupDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Devices & Hardware/DVDR.png"))); // NOI18N
        backupDB.setToolTipText("DB Backup");
        backupDB.setBorderPainted(false);
        backupDB.setMaximumSize(new java.awt.Dimension(48, 32));
        backupDB.setMinimumSize(new java.awt.Dimension(26, 26));
        backupDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupDBActionPerformed(evt);
            }
        });
        jToolBar31.add(backupDB);

        compactDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Folders/Folder Blue Stuff.png"))); // NOI18N
        compactDB.setToolTipText("DB Compact");
        compactDB.setBorderPainted(false);
        compactDB.setMaximumSize(new java.awt.Dimension(48, 32));
        compactDB.setMinimumSize(new java.awt.Dimension(26, 26));
        compactDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compactDBActionPerformed(evt);
            }
        });
        jToolBar31.add(compactDB);

        mobilepayBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/M-PESA approved logo.jpg"))); // NOI18N
        mobilepayBtn.setEnabled(false);
        mobilepayBtn.setFocusable(false);
        mobilepayBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mobilepayBtn.setMaximumSize(new java.awt.Dimension(26, 26));
        mobilepayBtn.setMinimumSize(new java.awt.Dimension(26, 26));
        mobilepayBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mobilepayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobilepayBtnActionPerformed(evt);
            }
        });
        jToolBar31.add(mobilepayBtn);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(spacerLbls, gridBagConstraints);

        jToolBar31.add(jPanel1);

        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Help 2.png"))); // NOI18N
        helpButton.setToolTipText("Get system help");
        helpButton.setBorderPainted(false);
        helpButton.setMaximumSize(new java.awt.Dimension(48, 32));
        helpButton.setMinimumSize(new java.awt.Dimension(26, 26));
        jToolBar31.add(helpButton);
        jToolBar31.add(jLabel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar31, gridBagConstraints);

        jToolBar311.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar311.setFloatable(false);

        operationsToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Control Panel 1.png"))); // NOI18N
        operationsToolBar.setToolTipText("Operations");
        operationsToolBar.setBorderPainted(false);
        operationsToolBar.setMaximumSize(new java.awt.Dimension(48, 32));
        operationsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        operationsToolBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationsToolBarActionPerformed(evt);
            }
        });
        jToolBar311.add(operationsToolBar);

        pharmacyToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Software Boxes/Software Green 1.png"))); // NOI18N
        pharmacyToolBar.setToolTipText("Pharmacy");
        pharmacyToolBar.setBorderPainted(false);
        pharmacyToolBar.setMaximumSize(new java.awt.Dimension(48, 32));
        pharmacyToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        pharmacyToolBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyToolBarActionPerformed(evt);
            }
        });
        jToolBar311.add(pharmacyToolBar);

        payrollToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/CD Cases/Software CD 1.png"))); // NOI18N
        payrollToolBar.setToolTipText("Payroll");
        payrollToolBar.setBorderPainted(false);
        payrollToolBar.setMaximumSize(new java.awt.Dimension(48, 32));
        payrollToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        payrollToolBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollToolBarActionPerformed(evt);
            }
        });
        jToolBar311.add(payrollToolBar);

        reportsToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Devices & Hardware/CD Linux.png"))); // NOI18N
        reportsToolBar.setToolTipText("Reports");
        reportsToolBar.setBorderPainted(false);
        reportsToolBar.setMaximumSize(new java.awt.Dimension(48, 32));
        reportsToolBar.setMinimumSize(new java.awt.Dimension(26, 26));
        reportsToolBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsToolBarActionPerformed(evt);
            }
        });
        jToolBar311.add(reportsToolBar);

        openShift.setAction(openShiftAction);
        openShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/AntiVirus.png"))); // NOI18N
        openShift.setToolTipText("Open Shift");
        openShift.setBorderPainted(false);
        openShift.setMaximumSize(new java.awt.Dimension(48, 32));
        openShift.setMinimumSize(new java.awt.Dimension(26, 26));
        openShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openShiftActionPerformed(evt);
            }
        });
        jToolBar311.add(openShift);

        closeShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Devices & Hardware/PC Security 1.png"))); // NOI18N
        closeShift.setToolTipText("Close Shift");
        closeShift.setBorderPainted(false);
        closeShift.setMaximumSize(new java.awt.Dimension(48, 32));
        closeShift.setMinimumSize(new java.awt.Dimension(26, 26));
        closeShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeShiftActionPerformed(evt);
            }
        });
        jToolBar311.add(closeShift);

        suspendShift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Download.png"))); // NOI18N
        suspendShift.setToolTipText("Suspend Shift");
        suspendShift.setBorderPainted(false);
        suspendShift.setEnabled(false);
        suspendShift.setMaximumSize(new java.awt.Dimension(48, 32));
        suspendShift.setMinimumSize(new java.awt.Dimension(26, 26));
        suspendShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspendShiftActionPerformed(evt);
            }
        });
        jToolBar311.add(suspendShift);

        optimizeDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Folders/Folder Yellow Pics 1.png"))); // NOI18N
        optimizeDB.setToolTipText("DB Optimize");
        optimizeDB.setBorderPainted(false);
        optimizeDB.setMaximumSize(new java.awt.Dimension(48, 32));
        optimizeDB.setMinimumSize(new java.awt.Dimension(26, 26));
        optimizeDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optimizeDBActionPerformed(evt);
            }
        });
        jToolBar311.add(optimizeDB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jToolBar311, gridBagConstraints);

        taskBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        taskBar.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        userLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userLabel.setLabelFor(patientdepositsmnit);
        userLabel.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(userLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taskBar.add(jPanel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridBagLayout());

        connectionLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        connectionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        connectionLabel.setLabelFor(patientdepositsmnit);
        connectionLabel.setText(" ");
        jPanel4.add(connectionLabel, new java.awt.GridBagConstraints());

        taskBar.add(jPanel4, new java.awt.GridBagConstraints());

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());

        activePane.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        activePane.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        activePane.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel5.add(activePane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        taskBar.add(jPanel5, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new java.awt.GridBagLayout());

        activeDatabase.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        activeDatabase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        activeDatabase.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel6.add(activeDatabase, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        taskBar.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(taskBar, gridBagConstraints);

        commPanel.setLayout(new java.awt.GridBagLayout());

        sendMessageTxt.setForeground(new java.awt.Color(0, 0, 204));
        sendMessageTxt.setText("Type message here and press <Enter>");
        sendMessageTxt.setToolTipText("Please type your short message here and click on the ");
        sendMessageTxt.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(153, 255, 51), new java.awt.Color(102, 102, 255), new java.awt.Color(0, 153, 153), new java.awt.Color(0, 255, 255)));
        sendMessageTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageTxtActionPerformed(evt);
            }
        });
        sendMessageTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sendMessageTxtFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        commPanel.add(sendMessageTxt, gridBagConstraints);

        msgRecipientLbl.setText("Message Recipient ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commPanel.add(msgRecipientLbl, gridBagConstraints);

        messageRecipientCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT INITCAP(usename) FROM pg_catalog.pg_user ORDER BY usename"));
        messageRecipientCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageRecipientCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commPanel.add(messageRecipientCmbx, gridBagConstraints);

        writeMailBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Email 3.png"))); // NOI18N
        writeMailBtn.setText("Write Mail");
        writeMailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeMailBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commPanel.add(writeMailBtn, gridBagConstraints);

        receivedMessageTxt.setEditable(false);
        receivedMessageTxt.setBackground(new java.awt.Color(51, 51, 51));
        receivedMessageTxt.setForeground(new java.awt.Color(51, 255, 0));
        receivedMessageTxt.setToolTipText(receivedMessageTxt.getText());
        receivedMessageTxt.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 204), null, null));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        commPanel.add(receivedMessageTxt, gridBagConstraints);

        receivedMessageLbl.setText("Received Message");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commPanel.add(receivedMessageLbl, gridBagConstraints);

        sendMessageBtn.setText("Send Message");
        sendMessageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        commPanel.add(sendMessageBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(commPanel, gridBagConstraints);

        commBroadcastPanel.setLayout(new java.awt.GridBagLayout());

        sendSMSBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Compose Email.png"))); // NOI18N
        sendSMSBtn.setText("Send an SMS");
        sendSMSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendSMSBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commBroadcastPanel.add(sendSMSBtn, gridBagConstraints);

        smsBroadcastBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Compose Email.png"))); // NOI18N
        smsBroadcastBtn.setText("SMS Broadcast");
        smsBroadcastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsBroadcastBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        commBroadcastPanel.add(smsBroadcastBtn, gridBagConstraints);

        smsBroadcastTargetCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB,"SELECT sms_group_name FROM sms_broadcast_groups ORDER BY sms_group_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        commBroadcastPanel.add(smsBroadcastTargetCmbx, gridBagConstraints);

        sendMessageTxt1.setForeground(new java.awt.Color(0, 0, 204));
        sendMessageTxt1.setText("Type a broadcast Short Message (SMS) here, select a target group on the right and press <Enter>");
        sendMessageTxt1.setToolTipText("Please type your short message here and click on the ");
        sendMessageTxt1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(153, 255, 51), new java.awt.Color(102, 102, 255), new java.awt.Color(0, 153, 153), new java.awt.Color(0, 255, 255)));
        sendMessageTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageTxt1ActionPerformed(evt);
            }
        });
        sendMessageTxt1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sendMessageTxt1FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 20.0;
        gridBagConstraints.weighty = 1.0;
        commBroadcastPanel.add(sendMessageTxt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(commBroadcastPanel, gridBagConstraints);

        PDFViewerIntfr.setClosable(true);
        PDFViewerIntfr.setIconifiable(true);
        PDFViewerIntfr.setMaximizable(true);
        PDFViewerIntfr.setResizable(true);
        PDFViewerIntfr.setTitle("Funsoft PDF Viewer");
        PDFViewerIntfr.setVisible(true);
        getContentPane().add(PDFViewerIntfr, new java.awt.GridBagConstraints());

        jMenuBar1.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N

        setupmn.setMnemonic('S');
        setupmn.setText("Setup ");

        countryditrmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Globe 2.png"))); // NOI18N
        countryditrmn.setText("Country/Districts");
        countryditrmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryditrmnActionPerformed(evt);
            }
        });

        countrymnit.setText("Country");
        countrymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrymnitActionPerformed(evt);
            }
        });
        countryditrmn.add(countrymnit);

        provincesmnit.setText("Provinces setup");
        provincesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provincesmnitActionPerformed(evt);
            }
        });
        countryditrmn.add(provincesmnit);

        districtmnit.setText("District");
        districtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                districtmnitActionPerformed(evt);
            }
        });
        countryditrmn.add(districtmnit);

        brancmnit.setText("Unit or Branch");
        brancmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brancmnitActionPerformed(evt);
            }
        });
        countryditrmn.add(brancmnit);

        voteDepartmentmnit.setText("Vote Department");
        voteDepartmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteDepartmentmnitActionPerformed(evt);
            }
        });
        countryditrmn.add(voteDepartmentmnit);

        setupmn.add(countryditrmn);
        setupmn.add(jSeparator41);

        profilemn.setText("Profile Setup");

        lgalstatussetupmnit.setText("Legal Status Setup");
        lgalstatussetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgalstatussetupmnitActionPerformed(evt);
            }
        });
        profilemn.add(lgalstatussetupmnit);

        hosptalmnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Home 1.png"))); // NOI18N
        hosptalmnit.setText("Hospital Profile");
        hosptalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hosptalmnitActionPerformed(evt);
            }
        });
        profilemn.add(hosptalmnit);

        headermnit.setText("Statements Header");
        headermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headermnitActionPerformed(evt);
            }
        });
        profilemn.add(headermnit);

        interimnoticemnit.setText("Footer Interim");
        interimnoticemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interimnoticemnitActionPerformed(evt);
            }
        });
        profilemn.add(interimnoticemnit);

        occupationmnit.setText("Occupations");
        occupationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupationmnitActionPerformed(evt);
            }
        });
        profilemn.add(occupationmnit);

        educationmnit.setText("Education Level");
        educationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                educationmnitActionPerformed(evt);
            }
        });
        profilemn.add(educationmnit);

        Infomnit.setText("Information Source");
        Infomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfomnitActionPerformed(evt);
            }
        });
        profilemn.add(Infomnit);

        smsGroupsmnit.setText("SMS Group Definition");
        smsGroupsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsGroupsmnitActionPerformed(evt);
            }
        });
        profilemn.add(smsGroupsmnit);

        nokrelationsmnit.setText("NOK Relationships");
        nokrelationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nokrelationsmnitActionPerformed(evt);
            }
        });
        profilemn.add(nokrelationsmnit);

        patientRegistrationPointsmnit.setText("Patient Registration Points");
        patientRegistrationPointsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientRegistrationPointsmnitActionPerformed(evt);
            }
        });
        profilemn.add(patientRegistrationPointsmnit);

        setupmn.add(profilemn);
        setupmn.add(jSeparator21);

        Financialmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Internet Connections 3.png"))); // NOI18N
        Financialmn.setText("Financial & Cash Point");

        glaccountsmnit.setText("Chart Of Accounts");
        glaccountsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glaccountsmnitActionPerformed(evt);
            }
        });
        Financialmn.add(glaccountsmnit);

        glaccountsmnit1.setText("Enterprise Chart of Accounts");
        glaccountsmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glaccountsmnit1ActionPerformed(evt);
            }
        });
        Financialmn.add(glaccountsmnit1);

        glaccountsupdatemnit.setText("Amend Chart Of Accounts");
        glaccountsupdatemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glaccountsupdatemnitActionPerformed(evt);
            }
        });
        Financialmn.add(glaccountsupdatemnit);
        Financialmn.add(jSeparator67);

        banksetmnit.setText("Banks");
        banksetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banksetmnitActionPerformed(evt);
            }
        });
        Financialmn.add(banksetmnit);

        creditcardsmnit.setText("Credit Cards");
        creditcardsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditcardsmnitActionPerformed(evt);
            }
        });
        Financialmn.add(creditcardsmnit);

        paymentmodesmnit.setText("Payment Modes");
        paymentmodesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentmodesmnitActionPerformed(evt);
            }
        });
        Financialmn.add(paymentmodesmnit);

        cashpointmnit.setText("Cash Points");
        cashpointmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashpointmnitActionPerformed(evt);
            }
        });
        Financialmn.add(cashpointmnit);

        patientdepositsmnit.setText("Type of Transactions");
        patientdepositsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientdepositsmnitActionPerformed(evt);
            }
        });
        Financialmn.add(patientdepositsmnit);
        Financialmn.add(jSeparator68);

        iplimitmnit.setText("Inpatient limit");
        iplimitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iplimitmnitActionPerformed(evt);
            }
        });
        Financialmn.add(iplimitmnit);

        accrualsmnit.setText("Accruals");
        accrualsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accrualsmnitActionPerformed(evt);
            }
        });
        Financialmn.add(accrualsmnit);
        Financialmn.add(jSeparator69);

        deductionsmnit.setText("Tax Rates & Deductions");
        deductionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deductionsmnitActionPerformed(evt);
            }
        });
        Financialmn.add(deductionsmnit);

        taxsetupmnit.setText("Tax Set Up");
        taxsetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxsetupmnitActionPerformed(evt);
            }
        });
        Financialmn.add(taxsetupmnit);

        Corporatemnit.setText("Corporate Disallowables");
        Corporatemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorporatemnitActionPerformed(evt);
            }
        });
        Financialmn.add(Corporatemnit);

        projecmn.setText("Project Setup");

        donormnit.setText("Donors Setup");
        donormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donormnitActionPerformed(evt);
            }
        });
        projecmn.add(donormnit);

        projmnit.setText("Projects");
        projmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projmnitActionPerformed(evt);
            }
        });
        projecmn.add(projmnit);
        projecmn.add(jSeparator73);

        Financialmn.add(projecmn);

        storeAllocationsmnit.setText("Store Allocations");
        storeAllocationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeAllocationsmnitActionPerformed(evt);
            }
        });
        Financialmn.add(storeAllocationsmnit);

        billingStationAllocationmnit.setText("Billing station allocation");
        billingStationAllocationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingStationAllocationmnitActionPerformed(evt);
            }
        });
        Financialmn.add(billingStationAllocationmnit);

        serviceCharterAdjustmentmnit.setText("Service charter adjustments");
        serviceCharterAdjustmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceCharterAdjustmentmnitActionPerformed(evt);
            }
        });
        Financialmn.add(serviceCharterAdjustmentmnit);

        setupmn.add(Financialmn);
        setupmn.add(jSeparator6);

        LegalDocumentmn.setText("Legal Documents Register");

        docregistermnit.setText("Document Register");
        docregistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docregistermnitActionPerformed(evt);
            }
        });
        LegalDocumentmn.add(docregistermnit);

        impdocregmnit.setText("Important Doc. Register");
        impdocregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impdocregmnitActionPerformed(evt);
            }
        });
        LegalDocumentmn.add(impdocregmnit);

        setupmn.add(LegalDocumentmn);
        setupmn.add(jSeparator64);

        departmentalmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Compose Email.png"))); // NOI18N
        departmentalmn.setText("Service Charter definition");

        maindeptmnit.setText("Main Department");
        maindeptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maindeptmnitActionPerformed(evt);
            }
        });
        departmentalmn.add(maindeptmnit);

        depatmnit.setText("Departments");
        depatmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depatmnitActionPerformed(evt);
            }
        });
        departmentalmn.add(depatmnit);

        Operatingchamn.setText("Operating Parameters");

        Operatingparamertersmnit.setText("Operating Parameters");
        Operatingparamertersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperatingparamertersmnitActionPerformed(evt);
            }
        });
        Operatingchamn.add(Operatingparamertersmnit);

        TheatreChargesmnit.setText("Theatre Fixed Rates");
        TheatreChargesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TheatreChargesmnitActionPerformed(evt);
            }
        });
        Operatingchamn.add(TheatreChargesmnit);

        adjpricesmnit.setText("Adjust Rates");
        adjpricesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjpricesmnitActionPerformed(evt);
            }
        });
        Operatingchamn.add(adjpricesmnit);

        mergedepmnit.setText("Categorise Parameters");
        mergedepmnit.setActionCommand("Interim Inv. Bf");
        mergedepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergedepmnitActionPerformed(evt);
            }
        });
        Operatingchamn.add(mergedepmnit);

        transferItemsmnit.setText("Transfer Service Items");
        transferItemsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferItemsmnitActionPerformed(evt);
            }
        });
        Operatingchamn.add(transferItemsmnit);

        departmentalmn.add(Operatingchamn);

        laboratorymn.setText("Lab");
        laboratorymn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laboratorymnActionPerformed(evt);
            }
        });

        labspecimensmnit.setText("Lab Specimens");
        labspecimensmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labspecimensmnitActionPerformed(evt);
            }
        });
        laboratorymn.add(labspecimensmnit);

        labSpecimenSourcemnit.setText("Specimen Source");
        labSpecimenSourcemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labSpecimenSourcemnitActionPerformed(evt);
            }
        });
        laboratorymn.add(labSpecimenSourcemnit);

        labtestsmnit.setText("Lab Tests");
        labtestsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labtestsmnitActionPerformed(evt);
            }
        });
        laboratorymn.add(labtestsmnit);

        labresultsmnit.setText("Lab Parameters");
        labresultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labresultsmnitActionPerformed(evt);
            }
        });
        laboratorymn.add(labresultsmnit);

        LabHierachymnit.setText("Laboratory Hierachy");
        LabHierachymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabHierachymnitActionPerformed(evt);
            }
        });
        laboratorymn.add(LabHierachymnit);

        departmentalmn.add(laboratorymn);

        laboratorymn1.setText("Packages Setup");
        laboratorymn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laboratorymn1ActionPerformed(evt);
            }
        });

        packagesmnit.setText("Packages Category");
        packagesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packagesmnitActionPerformed(evt);
            }
        });
        laboratorymn1.add(packagesmnit);

        packageslistmnit.setText("Package Combination");
        packageslistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packageslistmnitActionPerformed(evt);
            }
        });
        laboratorymn1.add(packageslistmnit);

        departmentalmn.add(laboratorymn1);

        automatedChargesmnit.setText("Automated Charges");
        automatedChargesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automatedChargesmnitActionPerformed(evt);
            }
        });
        departmentalmn.add(automatedChargesmnit);

        clerkingServicesmnit.setText("Clerking Services Set");
        clerkingServicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clerkingServicesmnitActionPerformed(evt);
            }
        });
        departmentalmn.add(clerkingServicesmnit);

        xrayFilmTypesmnit.setText("Xray Film Types");
        xrayFilmTypesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xrayFilmTypesmnitActionPerformed(evt);
            }
        });
        departmentalmn.add(xrayFilmTypesmnit);

        setupmn.add(departmentalmn);
        setupmn.add(jSeparator31);

        patientCategorymn.setText("Patient Categories");

        patcategmnit.setText("Patient Categories");
        patcategmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patcategmnitActionPerformed(evt);
            }
        });
        patientCategorymn.add(patcategmnit);

        patientcollateralmnit.setText("Patient Collateral");
        patientcollateralmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientcollateralmnitActionPerformed(evt);
            }
        });
        patientCategorymn.add(patientcollateralmnit);

        setupmn.add(patientCategorymn);
        setupmn.add(jSeparator8);

        wardsetupmn.setText("IP Resources");
        wardsetupmn.setActionCommand("IP Department Resources");

        wardprocmnit.setText("Wards");
        wardprocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardprocmnitActionPerformed(evt);
            }
        });
        wardsetupmn.add(wardprocmnit);

        theatreSetup.setText("Theatre");
        theatreSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatreSetupActionPerformed(evt);
            }
        });
        wardsetupmn.add(theatreSetup);

        bedsetupmnit.setText("Bed Setup");
        bedsetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedsetupmnitActionPerformed(evt);
            }
        });
        wardsetupmn.add(bedsetupmnit);

        Categorysetupmnit.setText("Bed Category");
        Categorysetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategorysetupmnitActionPerformed(evt);
            }
        });
        wardsetupmn.add(Categorysetupmnit);

        setupmn.add(wardsetupmn);
        setupmn.add(jSeparator26);

        medicalRecordsmn.setText("Medical Records Categories");
        medicalRecordsmn.setActionCommand("Medical Records Indicators");

        diseasesmnit.setText("Diseases Setup");
        diseasesmnit.setActionCommand("Diseases Setup (ICD10)");
        diseasesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diseasesmnitActionPerformed(evt);
            }
        });
        medicalRecordsmn.add(diseasesmnit);

        clinicsSpecialtiesmnit.setText("Clinics");
        clinicsSpecialtiesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clinicsSpecialtiesmnitActionPerformed(evt);
            }
        });
        medicalRecordsmn.add(clinicsSpecialtiesmnit);

        allergiesmnit.setText("Allergies");
        allergiesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allergiesmnitActionPerformed(evt);
            }
        });
        medicalRecordsmn.add(allergiesmnit);

        setupmn.add(medicalRecordsmn);
        setupmn.add(jSeparator65);

        staffmn.setText("Staff Registry");

        docnursmnit.setText("Doctor & Nurses");
        docnursmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docnursmnitActionPerformed(evt);
            }
        });
        staffmn.add(docnursmnit);

        closedocaccmnit.setText("Close/Suspend Doc Acc.");
        closedocaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedocaccmnitActionPerformed(evt);
            }
        });
        staffmn.add(closedocaccmnit);

        Mergedocaccmnit.setText("Merge Doctors");
        Mergedocaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MergedocaccmnitActionPerformed(evt);
            }
        });
        staffmn.add(Mergedocaccmnit);

        nursessetupmnit.setText("Allocate Nurses To Operation Points");
        nursessetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursessetupmnitActionPerformed(evt);
            }
        });
        staffmn.add(nursessetupmnit);

        setupmn.add(staffmn);
        setupmn.add(jSeparator66);

        schememn.setText("Medical Schemes");

        schemeprovmnit.setText("Payer/Debtors");
        schemeprovmnit.setToolTipText("");
        schemeprovmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeprovmnitActionPerformed(evt);
            }
        });
        schememn.add(schemeprovmnit);

        debtorTypemnit.setText("Debtor Type ");
        debtorTypemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorTypemnitActionPerformed(evt);
            }
        });
        schememn.add(debtorTypemnit);

        schemeregmnit.setText("Schemes Registration");
        schemeregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeregmnitActionPerformed(evt);
            }
        });
        schememn.add(schemeregmnit);

        schemeallmnit.setText("Scheme Membership Register");
        schemeallmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeallmnitActionPerformed(evt);
            }
        });
        schememn.add(schemeallmnit);

        suspschemepovmnit.setText("Suspend Payer/Debtors");
        suspschemepovmnit.setToolTipText("");
        suspschemepovmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspschemepovmnitActionPerformed(evt);
            }
        });
        schememn.add(suspschemepovmnit);

        suspschememnit.setText("Scheme Management");
        suspschememnit.setToolTipText("");
        suspschememnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspschememnitActionPerformed(evt);
            }
        });
        schememn.add(suspschememnit);

        Ammendstaffregmnit.setText("Staff Register");
        Ammendstaffregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmmendstaffregmnitActionPerformed(evt);
            }
        });
        schememn.add(Ammendstaffregmnit);
        schememn.add(jSeparator70);

        nhifrebatesmnit.setText("N.H.I.F Rebate");
        nhifrebatesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhifrebatesmnitActionPerformed(evt);
            }
        });
        schememn.add(nhifrebatesmnit);

        limitconsmnit.setText("Limit Constants");
        limitconsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limitconsmnitActionPerformed(evt);
            }
        });
        schememn.add(limitconsmnit);
        schememn.add(jSeparator71);

        approvedagentsmnit.setText("Approved Agents");
        approvedagentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvedagentsmnitActionPerformed(evt);
            }
        });
        schememn.add(approvedagentsmnit);

        schemememberjmnit.setText("Suspend Scheme Member");
        schemememberjmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemememberjmnitActionPerformed(evt);
            }
        });
        schememn.add(schemememberjmnit);

        schemeExclusionsmnit.setText("Scheme Exclusions");
        schemeExclusionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeExclusionsmnitActionPerformed(evt);
            }
        });
        schememn.add(schemeExclusionsmnit);

        setupmn.add(schememn);
        setupmn.add(jSeparator42);

        supmn.setMnemonic('S');
        supmn.setText("Creditors Register");

        supplrmnit.setText("Suppliers Registration");
        supplrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplrmnitActionPerformed(evt);
            }
        });
        supmn.add(supplrmnit);

        closesupplaccmnit.setText("Close Suppliers Account");
        closesupplaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closesupplaccmnitActionPerformed(evt);
            }
        });
        supmn.add(closesupplaccmnit);

        mergesuppliermnit.setText("Merge Suppliers Accounts");
        mergesuppliermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergesuppliermnitActionPerformed(evt);
            }
        });
        supmn.add(mergesuppliermnit);

        setupmn.add(supmn);
        setupmn.add(jSeparator25);

        jMenu5.setText("Vote-Book Setup");

        hcmACL1mnit.setText("Votes Setup");
        hcmACL1mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hcmACL1mnitActionPerformed(evt);
            }
        });
        jMenu5.add(hcmACL1mnit);

        payrollACL1mnit.setText("Quarters Setup");
        payrollACL1mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollACL1mnitActionPerformed(evt);
            }
        });
        jMenu5.add(payrollACL1mnit);

        setupmn.add(jMenu5);

        jMenu1.setText("Security/Access Control");

        userprofmnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Users 1.png"))); // NOI18N
        userprofmnit.setText("Operations and General Applications - ACL");
        userprofmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userprofmnitActionPerformed(evt);
            }
        });
        jMenu1.add(userprofmnit);

        inventoryACLmnit.setText("Stores and Inventory - ACL");
        inventoryACLmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryACLmnitActionPerformed(evt);
            }
        });
        jMenu1.add(inventoryACLmnit);

        hcmACLmnit.setText("Human Capital Management - ACL");
        hcmACLmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hcmACLmnitActionPerformed(evt);
            }
        });
        jMenu1.add(hcmACLmnit);

        payrollACLmnit.setText("Payroll and Wages - ACL");
        payrollACLmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollACLmnitActionPerformed(evt);
            }
        });
        jMenu1.add(payrollACLmnit);

        setupmn.add(jMenu1);

        exitmnITb.setMnemonic('x');
        exitmnITb.setText("Exit");
        exitmnITb.setToolTipText("Exit System");
        exitmnITb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitmnITbActionPerformed(evt);
            }
        });
        setupmn.add(exitmnITb);

        jMenuBar1.add(setupmn);

        emrmn.setText("EMR");
        emrmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emrmnActionPerformed(evt);
            }
        });

        patientregstmnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        patientregstmnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Contacts 1.png"))); // NOI18N
        patientregstmnit.setText("OUT-Patient Registration");
        patientregstmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientregstmnitActionPerformed(evt);
            }
        });
        emrmn.add(patientregstmnit);

        namesearchmnit1.setText("Name Search");
        namesearchmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesearchmnit1ActionPerformed(evt);
            }
        });
        emrmn.add(namesearchmnit1);

        editPatientNamesmnit.setText("Editing Patient Names");
        editPatientNamesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatientNamesmnitActionPerformed(evt);
            }
        });
        emrmn.add(editPatientNamesmnit);

        inpprvvstmnit.setText("IP / OP Previous Visits");
        inpprvvstmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpprvvstmnitActionPerformed(evt);
            }
        });
        emrmn.add(inpprvvstmnit);

        patientregnummnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        patientregnummnit.setText("Registration With OPD No.");
        patientregnummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientregnummnitActionPerformed(evt);
            }
        });
        emrmn.add(patientregnummnit);

        inpatientmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Pics 1.png"))); // NOI18N
        inpatientmn.setText("IN-Patient");

        ipOperationsmnit.setMnemonic('O');
        ipOperationsmnit.setText("In Patient Operations");
        ipOperationsmnit.setToolTipText("Select this menu to access front end operations");
        ipOperationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipOperationsmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(ipOperationsmnit);

        admmssionntmnit.setText("Admission");
        admmssionntmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admmssionntmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(admmssionntmnit);

        admrqmnit.setText("Admission Request");
        admrqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admrqmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(admrqmnit);

        wardproceduresmnit.setText("Ward Procedures");
        wardproceduresmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardproceduresmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(wardproceduresmnit);

        nursestationmnit.setText("Nurses Station");
        nursestationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursestationmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(nursestationmnit);

        Bedchargesmnit.setText("Bed Charges");
        Bedchargesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BedchargesmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(Bedchargesmnit);

        patienttransfrmn.setText("Patient Transfer");

        wardtfrmnit.setText("Ward to Ward Transfer");
        wardtfrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardtfrmnitActionPerformed(evt);
            }
        });
        patienttransfrmn.add(wardtfrmnit);

        Bedtrnsfrmnit.setText("Bed to Bed Transfer");
        Bedtrnsfrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BedtrnsfrmnitActionPerformed(evt);
            }
        });
        patienttransfrmn.add(Bedtrnsfrmnit);

        inpatientmn.add(patienttransfrmn);
        inpatientmn.add(jSeparator9);

        patdischmnit.setText("Patient Discharge");
        patdischmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patdischmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(patdischmnit);

        nhifcreditsmnit.setText("Nhif Rebate");
        nhifcreditsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhifcreditsmnitActionPerformed(evt);
            }
        });
        inpatientmn.add(nhifcreditsmnit);

        jMenuItem6.setText("Paediatric Record");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        inpatientmn.add(jMenuItem6);

        emrmn.add(inpatientmn);

        bedmagmentmn.setText("Bed Management");

        bedmangtmnit.setText("Bed Management and Transfer");
        bedmangtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedmangtmnitActionPerformed(evt);
            }
        });
        bedmagmentmn.add(bedmangtmnit);

        newbedmnit.setText("New Bed");
        newbedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbedmnitActionPerformed(evt);
            }
        });
        bedmagmentmn.add(newbedmnit);

        bedbrekgsmnit.setText("Bed Breakages");
        bedbrekgsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedbrekgsmnitActionPerformed(evt);
            }
        });
        bedmagmentmn.add(bedbrekgsmnit);

        emrmn.add(bedmagmentmn);

        Clinical.setText("Clinical");

        clinicalhistmnit.setText("Clinical History");
        clinicalhistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clinicalhistmnitActionPerformed(evt);
            }
        });
        Clinical.add(clinicalhistmnit);

        opattendbydocmnit.setText("Attendace By Doctor");
        opattendbydocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opattendbydocmnitActionPerformed(evt);
            }
        });
        Clinical.add(opattendbydocmnit);

        refferalsmnit.setText("Referrals");
        refferalsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refferalsmnitActionPerformed(evt);
            }
        });
        Clinical.add(refferalsmnit);

        emrmn.add(Clinical);

        medicalrecordsmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/AntiVirus.png"))); // NOI18N
        medicalrecordsmn.setText("Medical Records");

        bthregistermnit.setText("Maternity Register");
        bthregistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthregistermnitActionPerformed(evt);
            }
        });
        medicalrecordsmn.add(bthregistermnit);
        medicalrecordsmn.add(jSeparator61);

        patientdiagnosismnit.setText("Coding & Indexing");
        patientdiagnosismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientdiagnosismnitActionPerformed(evt);
            }
        });
        medicalrecordsmn.add(patientdiagnosismnit);

        patientdiagnosisreportmnit.setText("Coding & Indexing Report");
        patientdiagnosisreportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientdiagnosisreportmnitActionPerformed(evt);
            }
        });
        medicalrecordsmn.add(patientdiagnosisreportmnit);

        diagsummarymnit.setText("Diagnosis Summary");
        diagsummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagsummarymnitActionPerformed(evt);
            }
        });
        medicalrecordsmn.add(diagsummarymnit);
        medicalrecordsmn.add(jSeparator62);

        fpmn.setText("Family Health");

        fpclientsmnit.setText("FP Clients");
        fpclientsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpclientsmnitActionPerformed(evt);
            }
        });
        fpmn.add(fpclientsmnit);

        fpservicesmnit.setText("FP Services");
        fpservicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpservicesmnitActionPerformed(evt);
            }
        });
        fpmn.add(fpservicesmnit);

        FPmethodsmnit.setText("FP Methods");
        FPmethodsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FPmethodsmnitActionPerformed(evt);
            }
        });
        fpmn.add(FPmethodsmnit);

        fpcontraceptivesmnit.setText("Types of Contraceptives");
        fpcontraceptivesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpcontraceptivesmnitActionPerformed(evt);
            }
        });
        fpmn.add(fpcontraceptivesmnit);

        fpregistermnit.setText("FP Clients Register");
        fpregistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpregistermnitActionPerformed(evt);
            }
        });
        fpmn.add(fpregistermnit);

        fprecordsmnit.setText("FP Records");
        fprecordsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fprecordsmnitActionPerformed(evt);
            }
        });
        fpmn.add(fprecordsmnit);

        medicalrecordsmn.add(fpmn);
        medicalrecordsmn.add(jSeparator63);

        sickleavemnit.setText("Sick Leave Form");
        sickleavemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sickleavemnitActionPerformed(evt);
            }
        });
        medicalrecordsmn.add(sickleavemnit);

        jMenuItem5.setText("Coding & Indexing Edit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        medicalrecordsmn.add(jMenuItem5);

        emrmn.add(medicalrecordsmn);

        clinicsapp.setText("Clinics & Appointments");

        bookingschsmnit.setText("Booking");
        bookingschsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingschsmnitActionPerformed(evt);
            }
        });
        clinicsapp.add(bookingschsmnit);

        bookingsconfchmnit.setText("Bookings Confirmation");
        bookingsconfchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingsconfchmnitActionPerformed(evt);
            }
        });
        clinicsapp.add(bookingsconfchmnit);

        clinicBookingsmnit.setText("Clinic Appointments");
        clinicBookingsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clinicBookingsmnitActionPerformed(evt);
            }
        });
        clinicsapp.add(clinicBookingsmnit);

        emrmn.add(clinicsapp);

        anteNatalCaremnit.setText("MCH ANC Services");
        anteNatalCaremnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteNatalCaremnitActionPerformed(evt);
            }
        });
        emrmn.add(anteNatalCaremnit);

        postNatalCaremnit.setText("MCH Post Natal Care");
        postNatalCaremnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postNatalCaremnitActionPerformed(evt);
            }
        });
        emrmn.add(postNatalCaremnit);

        cwcRegistermnit.setText("Child Welfare Clinic Register");
        cwcRegistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cwcRegistermnitActionPerformed(evt);
            }
        });
        emrmn.add(cwcRegistermnit);

        immunisationmnit.setText("Immunisation Register");
        immunisationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                immunisationmnitActionPerformed(evt);
            }
        });
        emrmn.add(immunisationmnit);

        fpRHServicesmnit.setText("RH - Family Planning Services ");
        fpRHServicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpRHServicesmnitActionPerformed(evt);
            }
        });
        emrmn.add(fpRHServicesmnit);

        rhCentreMnit.setText("Reproductive Health Centre");
        rhCentreMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rhCentreMnitActionPerformed(evt);
            }
        });
        emrmn.add(rhCentreMnit);

        gbvmnit.setSelected(true);
        gbvmnit.setText("GBV Recorder");
        gbvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gbvmnitActionPerformed(evt);
            }
        });
        emrmn.add(gbvmnit);
        emrmn.add(jSeparator29);

        communityHealthmn.setText("Community Health Extension");

        communityHealthRegistermnit.setText("Community Health Extension Register");
        communityHealthRegistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communityHealthRegistermnitActionPerformed(evt);
            }
        });
        communityHealthmn.add(communityHealthRegistermnit);

        houseHoldRegistermnit.setText("House Hold Register");
        houseHoldRegistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseHoldRegistermnitActionPerformed(evt);
            }
        });
        communityHealthmn.add(houseHoldRegistermnit);

        rehabilitationServicesmnit.setText("Rehabilitation Services");
        rehabilitationServicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rehabilitationServicesmnitActionPerformed(evt);
            }
        });
        communityHealthmn.add(rehabilitationServicesmnit);

        socialWorkServicesmnit.setText("Social Work Services");
        socialWorkServicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socialWorkServicesmnitActionPerformed(evt);
            }
        });
        communityHealthmn.add(socialWorkServicesmnit);

        emrmn.add(communityHealthmn);
        emrmn.add(jSeparator100);

        morturymn.setText("Farewell Home");

        admissmnit.setText("Body Registration");
        admissmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admissmnitActionPerformed(evt);
            }
        });
        morturymn.add(admissmnit);

        deathregistermnit.setText("Billing");
        deathregistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deathregistermnitActionPerformed(evt);
            }
        });
        morturymn.add(deathregistermnit);

        mortTransferMnit.setText("Body Transfer");
        mortTransferMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mortTransferMnitActionPerformed(evt);
            }
        });
        morturymn.add(mortTransferMnit);

        deathnotficationmnit.setText("Death Notification");
        deathnotficationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deathnotficationmnitActionPerformed(evt);
            }
        });
        morturymn.add(deathnotficationmnit);

        mortdischmnit.setText("Body Release");
        mortdischmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mortdischmnitActionPerformed(evt);
            }
        });
        morturymn.add(mortdischmnit);

        bodycollectionmnit.setText("Body Collection");
        bodycollectionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodycollectionmnitActionPerformed(evt);
            }
        });
        morturymn.add(bodycollectionmnit);

        permitcollectormnit.setText("Permit Collector");
        permitcollectormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permitcollectormnitActionPerformed(evt);
            }
        });
        morturymn.add(permitcollectormnit);

        mortOccupancymnit.setText("Farewell Home Occupancy");
        mortOccupancymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mortOccupancymnitActionPerformed(evt);
            }
        });
        morturymn.add(mortOccupancymnit);

        emrmn.add(morturymn);

        jMenuBar1.add(emrmn);

        nursing.setText("Nursing");

        jMenu4.setText("Nursing Center");

        triagemnit.setText("OUT-Patients");
        triagemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triagemnitActionPerformed(evt);
            }
        });
        jMenu4.add(triagemnit);

        casualtymnit.setText("IN-Patients");
        casualtymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casualtymnitActionPerformed(evt);
            }
        });
        jMenu4.add(casualtymnit);

        theatermnit.setText("Theatre");
        theatermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatermnitActionPerformed(evt);
            }
        });
        jMenu4.add(theatermnit);

        ward2wardtransfermnit.setText("Inter-Ward Transfer");
        ward2wardtransfermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward2wardtransfermnitActionPerformed(evt);
            }
        });
        jMenu4.add(ward2wardtransfermnit);

        nursing.add(jMenu4);

        nursingOperationsmnit.setText("Nursing Operations Centre");
        nursingOperationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursingOperationsmnitActionPerformed(evt);
            }
        });
        nursing.add(nursingOperationsmnit);

        extendedNursingmnit.setText("Extended Nursing Operations");
        extendedNursingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extendedNursingmnitActionPerformed(evt);
            }
        });
        nursing.add(extendedNursingmnit);

        jMenu2.setText("Observations and Vital Signs");

        vitalsignmnit.setText("Triage centre");
        vitalsignmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vitalsignmnitActionPerformed(evt);
            }
        });
        jMenu2.add(vitalsignmnit);

        nursing.add(jMenu2);

        jMenu3.setText("Nursing Procedures");

        pendinginjmnit.setText("Injections");
        pendinginjmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendinginjmnitActionPerformed(evt);
            }
        });
        jMenu3.add(pendinginjmnit);

        nurseprofmnit.setText("Nursing Profile");
        nurseprofmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nurseprofmnitActionPerformed(evt);
            }
        });
        jMenu3.add(nurseprofmnit);

        icuProceduresmnit.setText("ICU HDU Procedures");
        jMenu3.add(icuProceduresmnit);

        wardProceduresmnit.setText("Ward Procedures");
        wardProceduresmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardProceduresmnitActionPerformed(evt);
            }
        });
        jMenu3.add(wardProceduresmnit);

        Consentmnit.setText("Recording Consent");
        Consentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsentmnitActionPerformed(evt);
            }
        });
        jMenu3.add(Consentmnit);

        progressmnit.setText("Daily Progresss");
        progressmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                progressmnitActionPerformed(evt);
            }
        });
        jMenu3.add(progressmnit);

        fluidchartmnit.setText("Fluid Chart");
        fluidchartmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fluidchartmnitActionPerformed(evt);
            }
        });
        jMenu3.add(fluidchartmnit);

        radreqmnit.setText("Radiological Request");
        radreqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radreqmnitActionPerformed(evt);
            }
        });
        jMenu3.add(radreqmnit);

        Ambreqmnit.setText("Ambulance Request");
        Ambreqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmbreqmnitActionPerformed(evt);
            }
        });
        jMenu3.add(Ambreqmnit);

        milknutritionmnit.setText("Milk Nutrition");
        milknutritionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                milknutritionmnitActionPerformed(evt);
            }
        });
        jMenu3.add(milknutritionmnit);

        certficatemnit.setText("Exam Certificate");
        certficatemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                certficatemnitActionPerformed(evt);
            }
        });
        jMenu3.add(certficatemnit);

        turnchartmnit.setText("Turning Chart");
        turnchartmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnchartmnitActionPerformed(evt);
            }
        });
        jMenu3.add(turnchartmnit);

        Clinicalexamnit.setText("Clinical Examination");
        Clinicalexamnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClinicalexamnitActionPerformed(evt);
            }
        });
        jMenu3.add(Clinicalexamnit);

        nursing.add(jMenu3);

        dispensingMnit.setText("Medicines Administration");
        nursing.add(dispensingMnit);

        nursingBillingmn.setText("Billing Nursing Operations");
        nursingBillingmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursingBillingmnActionPerformed(evt);
            }
        });

        nurseraisebillmnit.setText("Raise Bill (For Prescriptions)");
        nurseraisebillmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nurseraisebillmnitActionPerformed(evt);
            }
        });
        nursingBillingmn.add(nurseraisebillmnit);

        nursingGeneralBillingmnit.setText("General Billing");
        nursingGeneralBillingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursingGeneralBillingmnitActionPerformed(evt);
            }
        });
        nursingBillingmn.add(nursingGeneralBillingmnit);

        theatrebillingNursingmnit.setText("Theatre Billing");
        theatrebillingNursingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatrebillingNursingmnitActionPerformed(evt);
            }
        });
        nursingBillingmn.add(theatrebillingNursingmnit);

        suppliesDressingmnit.setText("Supplies  Dressings Billing");
        suppliesDressingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesDressingmnitActionPerformed(evt);
            }
        });
        nursingBillingmn.add(suppliesDressingmnit);

        pharmacyBillingmnit.setText("Medicines Billing");
        pharmacyBillingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyBillingmnitActionPerformed(evt);
            }
        });
        nursingBillingmn.add(pharmacyBillingmnit);

        nurseDutyRotamnit.setText("Nurses Duty Scheduling");
        nursingBillingmn.add(nurseDutyRotamnit);

        nursing.add(nursingBillingmn);

        nursingStatisticsmn.setText("Nursing Statistics");
        nursing.add(nursingStatisticsmn);

        nursingStoresmn.setText("Nursing Supply Chain");
        nursingStoresmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursingStoresmnActionPerformed(evt);
            }
        });

        medicineRequisitionsmnit.setText("Medicine Requisitions - S11");
        nursingStoresmn.add(medicineRequisitionsmnit);

        suppliesDressingsrequistmnit.setText("Supplies  Dressing Requisitions - S11");
        nursingStoresmn.add(suppliesDressingsrequistmnit);

        consumablesmnit.setText("Expensing Consumables");
        nursingStoresmn.add(consumablesmnit);

        stockCountmnit.setText("Stock Count");
        nursingStoresmn.add(stockCountmnit);

        nursing.add(nursingStoresmn);

        nursingReportingmn.setText("Nursing Reporting");

        jMenuItem1.setText("Admissions by Ward");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        nursingReportingmn.add(jMenuItem1);

        nursing.add(nursingReportingmn);
        nursing.add(jSeparator102);

        nursingIndicatorsmn.setText("Nursing Indicators and Parameters");

        childDiseasesmnit.setText("Child Diseases");
        childDiseasesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childDiseasesmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(childDiseasesmnit);

        anteNataRoutineExamsmnit.setText("Routine Exams");
        anteNataRoutineExamsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteNataRoutineExamsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(anteNataRoutineExamsmnit);

        anteNatalTestsmnit.setText("Ante Natal Tests");
        anteNatalTestsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteNatalTestsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(anteNatalTestsmnit);

        religionmnit.setText("Religion");
        religionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                religionmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(religionmnit);

        typesOfUIDsmnit.setText("Types of IUDs");
        typesOfUIDsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typesOfUIDsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(typesOfUIDsmnit);

        feedingMethodsmnit.setText("Methods of feeding milk");
        feedingMethodsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedingMethodsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(feedingMethodsmnit);

        typesofMilkmnit.setText("Types of milk");
        typesofMilkmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typesofMilkmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(typesofMilkmnit);

        reasonforFPlanningmnit.setText("Reasons for FP services");
        reasonforFPlanningmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reasonforFPlanningmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(reasonforFPlanningmnit);

        fitnessLevelmnit.setText("Physical fitness level");
        fitnessLevelmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fitnessLevelmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(fitnessLevelmnit);

        maritalStatusmnit.setText("Marital Status");
        maritalStatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maritalStatusmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(maritalStatusmnit);

        deliveryStatemnit.setText("State of delivery at birth");
        deliveryStatemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryStatemnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(deliveryStatemnit);

        childDeliveryMethodsmnit.setText("Child delivery methods");
        childDeliveryMethodsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childDeliveryMethodsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(childDeliveryMethodsmnit);

        typesOfHospitalsmnit.setText("Types of hospitals");
        typesOfHospitalsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typesOfHospitalsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(typesOfHospitalsmnit);

        placeofDeliverymnit.setText("Place of child delivery");
        placeofDeliverymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeofDeliverymnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(placeofDeliverymnit);

        riskLevelsmnit.setText("Risk levels");
        riskLevelsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riskLevelsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(riskLevelsmnit);

        qtyLevelsmnit.setText("Quantity levels");
        qtyLevelsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyLevelsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(qtyLevelsmnit);

        childDeliveryStatusmnit.setText("Child delivery status");
        childDeliveryStatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childDeliveryStatusmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(childDeliveryStatusmnit);

        genderParamsmnit.setText("Gender parameters");
        genderParamsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderParamsmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(genderParamsmnit);

        hcBranchesmnit.setText("Health Centre Branches");
        hcBranchesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hcBranchesmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(hcBranchesmnit);

        bloodRhesusmnit.setText("Blood Rhesus Factors");
        bloodRhesusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodRhesusmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(bloodRhesusmnit);

        bloodGrpmnit.setText("Blood Groups");
        bloodGrpmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGrpmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(bloodGrpmnit);

        immunisationProceduresmnit.setText("Immunisation Procedures");
        immunisationProceduresmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                immunisationProceduresmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(immunisationProceduresmnit);

        cwcIndicatormnit.setText("Child Welfare Clinic Indicators");
        cwcIndicatormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cwcIndicatormnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(cwcIndicatormnit);

        fpIndicatorsSetupmnit.setText("Family Planning Services Setup");
        fpIndicatorsSetupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpIndicatorsSetupmnitActionPerformed(evt);
            }
        });
        nursingIndicatorsmn.add(fpIndicatorsSetupmnit);

        nursing.add(nursingIndicatorsmn);

        jMenuBar1.add(nursing);

        patientmanagemn.setMnemonic('o');
        patientmanagemn.setText("Operations");
        patientmanagemn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientmanagemnActionPerformed(evt);
            }
        });

        frontEndOperationsmnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.SHIFT_MASK));
        frontEndOperationsmnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Devices & Hardware/PC Security 1.png"))); // NOI18N
        frontEndOperationsmnit.setMnemonic('O');
        frontEndOperationsmnit.setText("Front End Operations");
        frontEndOperationsmnit.setToolTipText("Select this menu to access front end operations");
        frontEndOperationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontEndOperationsmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(frontEndOperationsmnit);

        fpoperationmnit.setText("FP Operations");
        fpoperationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpoperationmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(fpoperationmnit);
        patientmanagemn.add(tasksSeparator);

        serviceAccptslipmnit.setText("Service Acceptance Slip");
        serviceAccptslipmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceAccptslipmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(serviceAccptslipmnit);

        bloodpackmnit.setText("Register Blood Packs ");
        bloodpackmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodpackmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(bloodpackmnit);

        docRequestMn.setText("Clinical Requests");

        consultationmnit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        consultationmnit.setForeground(new java.awt.Color(0, 0, 255));
        consultationmnit.setText("Clerking of Patients (CPOE)");
        consultationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultationmnitActionPerformed(evt);
            }
        });
        docRequestMn.add(consultationmnit);

        dconsultationmnit.setText("Detailed Clerking Of Patient");
        dconsultationmnit.setEnabled(false);
        dconsultationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dconsultationmnitActionPerformed(evt);
            }
        });
        docRequestMn.add(dconsultationmnit);

        patientmanagemn.add(docRequestMn);
        patientmanagemn.add(jSeparator30);

        labmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Recent Documents.png"))); // NOI18N
        labmn.setText("Laboratory");

        labtestsresultmnit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labtestsresultmnit.setForeground(new java.awt.Color(0, 0, 255));
        labtestsresultmnit.setText("Lab Results");
        labtestsresultmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labtestsresultmnitActionPerformed(evt);
            }
        });
        labmn.add(labtestsresultmnit);

        labpendingmnit.setText("Test Pending");
        labpendingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labpendingmnitActionPerformed(evt);
            }
        });
        labmn.add(labpendingmnit);

        labregmnit.setText("Lab Register");
        labregmnit.setEnabled(false);
        labregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labregmnitActionPerformed(evt);
            }
        });
        labmn.add(labregmnit);

        labprocmnit.setText("Lab Procedures");
        labprocmnit.setEnabled(false);
        labprocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labprocmnitActionPerformed(evt);
            }
        });
        labmn.add(labprocmnit);

        patientmanagemn.add(labmn);

        xray.setText("Radiology & Imaging");

        xrayresults.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        xrayresults.setForeground(new java.awt.Color(0, 0, 255));
        xrayresults.setText("Imaging/Xray Results");
        xrayresults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xrayresultsActionPerformed(evt);
            }
        });
        xray.add(xrayresults);

        xraysmnit.setText("Diagnostic Imaging Procedure");
        xraysmnit.setEnabled(false);
        xraysmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xraysmnitActionPerformed(evt);
            }
        });
        xray.add(xraysmnit);

        xraypendingReq.setText("Imaging/Xray Requests");
        xraypendingReq.setEnabled(false);
        xraypendingReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xraypendingReqActionPerformed(evt);
            }
        });
        xray.add(xraypendingReq);

        xraymnit.setEnabled(false);
        xraymnit.setLabel("Xray Reporting");
        xraymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xraymnitActionPerformed(evt);
            }
        });
        xray.add(xraymnit);

        patientmanagemn.add(xray);

        physiotherapy.setText("Physiotherapy");

        physioReqmnit.setText("Physiotherapy Requests");
        physioReqmnit.setEnabled(false);
        physioReqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                physioReqmnitActionPerformed(evt);
            }
        });
        physiotherapy.add(physioReqmnit);

        physioresultsmnit.setText("Physiotherapy Results");
        physioresultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                physioresultsmnitActionPerformed(evt);
            }
        });
        physiotherapy.add(physioresultsmnit);

        rehabmnitmnit.setText("Rehab Procedure");
        rehabmnitmnit.setEnabled(false);
        rehabmnitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rehabmnitmnitActionPerformed(evt);
            }
        });
        physiotherapy.add(rehabmnitmnit);

        patientmanagemn.add(physiotherapy);

        eyeUnitmnit.setText("Eye Unit Module");
        eyeUnitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eyeUnitmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(eyeUnitmnit);

        Dental.setText("Dental");

        dentalReqmnit.setText("Dental Clerking Requests");
        dentalReqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dentalReqmnitActionPerformed(evt);
            }
        });
        Dental.add(dentalReqmnit);

        dentalresultsmnit.setText("Dental Results");
        dentalresultsmnit.setEnabled(false);
        dentalresultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dentalresultsmnitActionPerformed(evt);
            }
        });
        Dental.add(dentalresultsmnit);

        Dentalmnit.setText("Dental Procedure");
        Dentalmnit.setActionCommand("Dental Module");
        Dentalmnit.setEnabled(false);
        Dentalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DentalmnitActionPerformed(evt);
            }
        });
        Dental.add(Dentalmnit);

        patientmanagemn.add(Dental);
        patientmanagemn.add(jSeparator5);

        theatremn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Devices & Hardware/Hard Drive Users 1.png"))); // NOI18N
        theatremn.setText("Theatre ");

        theaterManagementmnit.setText("Theater Management and Operations");
        theatremn.add(theaterManagementmnit);

        theatrediagmnit.setText("Theatre Billing");
        theatrediagmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatrediagmnitActionPerformed(evt);
            }
        });
        theatremn.add(theatrediagmnit);

        theatreprocmnit.setText("Theatre Procedures");
        theatreprocmnit.setEnabled(false);
        theatreprocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatreprocmnitActionPerformed(evt);
            }
        });
        theatremn.add(theatreprocmnit);

        patientmanagemn.add(theatremn);

        Endoscopymnit.setText("Endoscopy Procedures");
        Endoscopymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndoscopymnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(Endoscopymnit);
        patientmanagemn.add(jSeparator7);

        launchDashBoardmnit.setText("Enterprise Dashboard");
        launchDashBoardmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchDashBoardmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(launchDashBoardmnit);

        poprequestmnit.setText("POP Pending Request");
        poprequestmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poprequestmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(poprequestmnit);

        securityReleasemnit.setText("Security Release");
        securityReleasemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                securityReleasemnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(securityReleasemnit);

        storesSecuritymnit.setText("Security - Stores Item Release");
        storesSecuritymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storesSecuritymnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(storesSecuritymnit);

        wardOccupancyReportsmnit.setText("Ward Occupancy Report");
        wardOccupancyReportsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardOccupancyReportsmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(wardOccupancyReportsmnit);
        patientmanagemn.add(jSeparator99);

        helpdeskOperationsmnit.setText("ICT Help Desk ");
        helpdeskOperationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpdeskOperationsmnitActionPerformed(evt);
            }
        });
        patientmanagemn.add(helpdeskOperationsmnit);

        jMenuBar1.add(patientmanagemn);

        billingmn.setText("Billing");

        shiftmn.setText("Shift Operations");

        closeshiftmnit.setText("Close");
        closeshiftmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeshiftmnitActionPerformed(evt);
            }
        });
        shiftmn.add(closeshiftmnit);

        suspendmnit.setText("Suspend");
        suspendmnit.setEnabled(false);
        suspendmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspendmnitActionPerformed(evt);
            }
        });
        shiftmn.add(suspendmnit);

        billingmn.add(shiftmn);

        receiptsmn.setText("Cash Sale");

        receiptsmnit.setAction(openShiftAction);
        receiptsmnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        receiptsmnit.setText("Cash Sales");
        receiptsmnit.setEnabled(false);
        receiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptsmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(receiptsmnit);

        govPosmnit.setText("Cash Sale (POS)");
        govPosmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                govPosmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(govPosmnit);

        inReceiptsmnit.setText("InPatient Receipts");
        inReceiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inReceiptsmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(inReceiptsmnit);

        Receiptsmnit.setText("Debtors Receipts");
        Receiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceiptsmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(Receiptsmnit);

        otherrecptmnit.setText("Patient Deposit / Payment");
        otherrecptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherrecptmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(otherrecptmnit);

        rctdocfeesmnit.setText("Pharmacy Prescriptions");
        rctdocfeesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rctdocfeesmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(rctdocfeesmnit);
        receiptsmn.add(jSeparator72);

        directcashsalesmnit.setText("Payment Mode Adjustment");
        directcashsalesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directcashsalesmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(directcashsalesmnit);

        refundsmnit.setBackground(new java.awt.Color(204, 204, 204));
        refundsmnit.setText("Cancel Receipt");
        refundsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refundsmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(refundsmnit);

        rcttrfmnit.setText("Receipt Transfer");
        rcttrfmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rcttrfmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(rcttrfmnit);

        fpPosmnit.setText("FP Cash Sale");
        fpPosmnit.setEnabled(false);
        fpPosmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpPosmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(fpPosmnit);

        otherReceiptsmnit.setText("Other Receipts");
        otherReceiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherReceiptsmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(otherReceiptsmnit);

        cafeteriaSalesmnit.setText("Cafeteria Sales");
        cafeteriaSalesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cafeteriaSalesmnitActionPerformed(evt);
            }
        });
        receiptsmn.add(cafeteriaSalesmnit);

        billingmn.add(receiptsmn);

        generalmnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Tech Support.png"))); // NOI18N
        generalmnit.setText("General Billing");
        generalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generalmnitActionPerformed(evt);
            }
        });
        billingmn.add(generalmnit);

        billadjustmentmnit.setText("Bill Adjustments");
        billadjustmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billadjustmentmnitActionPerformed(evt);
            }
        });
        billingmn.add(billadjustmentmnit);

        exemptionmnit.setText("Waiver/Exemptions");
        exemptionmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exemptionmnitActionPerformed(evt);
            }
        });
        billingmn.add(exemptionmnit);

        jMenuBar1.add(billingmn);

        invoicingmn.setText("Invoicing");

        SchemeInvoicinmn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Document Blank.png"))); // NOI18N
        SchemeInvoicinmn.setText("Debtor Invoicing");

        schememnit.setText("Online Invoicing");
        schememnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schememnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(schememnit);

        finaliseipnhifmnit.setEnabled(false);
        finaliseipnhifmnit.setLabel("NHIF/NHIS Rebate");
        finaliseipnhifmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finaliseipnhifmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(finaliseipnhifmnit);

        finaliseipmnit.setText("Finalise Inpatient Invoice");
        finaliseipmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finaliseipmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(finaliseipmnit);

        patientReleasemnit.setText("Patient Release");
        patientReleasemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientReleasemnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(patientReleasemnit);

        debtinvoicingmnit.setText("Debtors Invoicing");
        debtinvoicingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtinvoicingmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(debtinvoicingmnit);
        SchemeInvoicinmn.add(jSeparator79);

        approveinvmnit.setText("Dispatch Invoices");
        approveinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveinvmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(approveinvmnit);

        approvinvmnit.setText("Dispatch Invoices Per Payer");
        approvinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvinvmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(approvinvmnit);

        mergdispmnit.setText("Merge Dispatches");
        mergdispmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergdispmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(mergdispmnit);

        DispConfirmationmnit.setText("Dispatch Confirmation");
        DispConfirmationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispConfirmationmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(DispConfirmationmnit);

        DispConfSummnit.setText("Dispatch Confirmation Summary");
        DispConfSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispConfSummnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(DispConfSummnit);
        SchemeInvoicinmn.add(jSeparator80);

        CreditnoteSchmnit.setText("Patient Credit Note");
        CreditnoteSchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreditnoteSchmnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(CreditnoteSchmnit);

        unfinalizeInvoicemnit.setText("Unfinalize Invoice");
        unfinalizeInvoicemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfinalizeInvoicemnitActionPerformed(evt);
            }
        });
        SchemeInvoicinmn.add(unfinalizeInvoicemnit);

        invoicingmn.add(SchemeInvoicinmn);

        inpatcashinvmnit.setText("Cash Invoices");
        inpatcashinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpatcashinvmnitActionPerformed(evt);
            }
        });
        invoicingmn.add(inpatcashinvmnit);

        Billinginvoicesmnit.setText("Billing Invoices");
        Billinginvoicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BillinginvoicesmnitActionPerformed(evt);
            }
        });
        invoicingmn.add(Billinginvoicesmnit);

        jMenuBar1.add(invoicingmn);

        gledgermn.setMnemonic('C');
        gledgermn.setText("Accounting");

        allocation.setText("A/C Receivables");

        debtorsTransactionsmn.setText("Debtors Transactions");

        credittransfmnit.setText("Credit Transfer");
        credittransfmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credittransfmnitActionPerformed(evt);
            }
        });
        debtorsTransactionsmn.add(credittransfmnit);

        miscdebtorsmnit.setText("Misc Debtors");
        miscdebtorsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miscdebtorsmnitActionPerformed(evt);
            }
        });
        debtorsTransactionsmn.add(miscdebtorsmnit);

        mergschaccmnit.setText("Merge Scheme Accounts");
        mergschaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergschaccmnitActionPerformed(evt);
            }
        });
        debtorsTransactionsmn.add(mergschaccmnit);

        changepayermnit.setText("Change Payer");
        changepayermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepayermnitActionPerformed(evt);
            }
        });
        debtorsTransactionsmn.add(changepayermnit);

        chgintrmnit.setText("Charge Interest");
        chgintrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chgintrmnitActionPerformed(evt);
            }
        });
        debtorsTransactionsmn.add(chgintrmnit);

        returnedclms.setText("Returned Claims");

        rtclaimsmnit.setText("Returned Claims");
        rtclaimsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtclaimsmnitActionPerformed(evt);
            }
        });
        returnedclms.add(rtclaimsmnit);

        resubmitclaimsmnit.setText("Resurbmit Claims");
        resubmitclaimsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resubmitclaimsmnitActionPerformed(evt);
            }
        });
        returnedclms.add(resubmitclaimsmnit);

        debtorsTransactionsmn.add(returnedclms);

        allocation.add(debtorsTransactionsmn);

        SchemeAllocmnit.setText("Allocate Scheme Invoices");
        SchemeAllocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SchemeAllocmnitActionPerformed(evt);
            }
        });
        allocation.add(SchemeAllocmnit);

        partlyallocinvmnit.setText("Allocate Invoice Partly");
        partlyallocinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partlyallocinvmnitActionPerformed(evt);
            }
        });
        allocation.add(partlyallocinvmnit);

        allocbypayermnit.setText("Allocation By Payer");
        allocbypayermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocbypayermnitActionPerformed(evt);
            }
        });
        allocation.add(allocbypayermnit);

        adjustinvmnit.setText("Allocation Doc. Excempted");
        adjustinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjustinvmnitActionPerformed(evt);
            }
        });
        allocation.add(adjustinvmnit);

        allocatewtocrtmnit.setText("Allocation Without Credits");
        allocatewtocrtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocatewtocrtmnitActionPerformed(evt);
            }
        });
        allocation.add(allocatewtocrtmnit);

        automatedwoffsmnit.setText("Automated Writeoffs");
        automatedwoffsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automatedwoffsmnitActionPerformed(evt);
            }
        });
        allocation.add(automatedwoffsmnit);

        appdocinvmnit.setText("Allocate DoctorsBills.");
        appdocinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appdocinvmnitActionPerformed(evt);
            }
        });
        allocation.add(appdocinvmnit);
        allocation.add(jSeparator94);

        alloConfrmmnit.setText("Revise Allocation");
        alloConfrmmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alloConfrmmnitActionPerformed(evt);
            }
        });
        allocation.add(alloConfrmmnit);

        Provisiontransmn.setText("Debtors Provision ");

        provisionsmnit.setText("Provisions");
        provisionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provisionsmnitActionPerformed(evt);
            }
        });
        Provisiontransmn.add(provisionsmnit);

        provisionsperdebtormnit.setText("Provisions per debtors");
        provisionsperdebtormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provisionsperdebtormnitActionPerformed(evt);
            }
        });
        Provisiontransmn.add(provisionsperdebtormnit);

        allocation.add(Provisiontransmn);
        allocation.add(jSeparator95);

        receivablesDashboardmnit.setText("Receivables Dashboard");
        receivablesDashboardmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivablesDashboardmnitActionPerformed(evt);
            }
        });
        allocation.add(receivablesDashboardmnit);

        gledgermn.add(allocation);

        cashbkmn.setText("A/C Payables");

        postInvoicesmnit.setText("Register Creditor Invoices");
        postInvoicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postInvoicesmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(postInvoicesmnit);

        raisevouchmnit.setText("Enter Bills and Invoices");
        raisevouchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raisevouchmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(raisevouchmnit);

        LinkGrnmnit.setText("Generate Payables from GRN");
        LinkGrnmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinkGrnmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(LinkGrnmnit);

        LinkGrn1mnit.setText("AIE Holder");
        LinkGrn1mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinkGrn1mnitActionPerformed(evt);
            }
        });
        cashbkmn.add(LinkGrn1mnit);

        LinkGrn2mnit.setText("Examination");
        LinkGrn2mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinkGrn2mnitActionPerformed(evt);
            }
        });
        cashbkmn.add(LinkGrn2mnit);

        LinkGrn3mnit.setText("Authority to Pay");
        LinkGrn3mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinkGrn3mnitActionPerformed(evt);
            }
        });
        cashbkmn.add(LinkGrn3mnit);

        nonstockitemmnit.setText("Enter Surrendered Non Stock Item");
        nonstockitemmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonstockitemmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(nonstockitemmnit);

        examineimpresmnit.setText("Examine Surrendered Imprest");

        examineImprestmnit.setText("Examine Surrendered Imprest");
        examineImprestmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examineImprestmnitActionPerformed(evt);
            }
        });
        examineimpresmnit.add(examineImprestmnit);

        approvedImprestmnit.setText("Approve Surrendered Imprest");
        approvedImprestmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvedImprestmnitActionPerformed(evt);
            }
        });
        examineimpresmnit.add(approvedImprestmnit);

        cashbkmn.add(examineimpresmnit);

        jMenuItem12.setText("Upload Remitance");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        cashbkmn.add(jMenuItem12);

        patientrefundmnit.setText("Patient Refund");
        patientrefundmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientrefundmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(patientrefundmnit);

        debitNotemnit.setText("Debit Notes");
        debitNotemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debitNotemnitActionPerformed(evt);
            }
        });
        cashbkmn.add(debitNotemnit);
        cashbkmn.add(jSeparator3);

        creditallocmnit.setText("Creditors Allocation");
        creditallocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditallocmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(creditallocmnit);
        cashbkmn.add(jSeparator74);

        doctorsledgermnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        doctorsledgermnit.setText("Doctors Ledger");
        doctorsledgermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorsledgermnitActionPerformed(evt);
            }
        });
        cashbkmn.add(doctorsledgermnit);

        votepaymentmnit.setText("Creditors Document Tracker");
        votepaymentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                votepaymentmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(votepaymentmnit);

        jMenuItem2.setText(" Document Tracker");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        cashbkmn.add(jMenuItem2);

        mergeLPOmnit.setText("LPO Number update");
        mergeLPOmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeLPOmnitActionPerformed(evt);
            }
        });
        cashbkmn.add(mergeLPOmnit);

        gledgermn.add(cashbkmn);
        gledgermn.add(jSeparator4);

        creditorOperationsmnit.setMnemonic('O');
        creditorOperationsmnit.setText("Creditors Operations");
        creditorOperationsmnit.setToolTipText("Select this menu to access front end operations");
        creditorOperationsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorOperationsmnitActionPerformed(evt);
            }
        });
        gledgermn.add(creditorOperationsmnit);

        miscsCreditorsmnit.setText("Misc Creditors");
        miscsCreditorsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miscsCreditorsmnitActionPerformed(evt);
            }
        });
        gledgermn.add(miscsCreditorsmnit);
        gledgermn.add(jSeparator75);

        jrnloansmnit.setText("Journal");
        jrnloansmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrnloansmnitActionPerformed(evt);
            }
        });
        gledgermn.add(jrnloansmnit);

        projectjrnloansmnit.setText("Project Journals");
        projectjrnloansmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectjrnloansmnitActionPerformed(evt);
            }
        });
        gledgermn.add(projectjrnloansmnit);
        gledgermn.add(jSeparator76);

        writeoffs.setText("Write Offs");

        Writeoffsmnit.setText("Write Offs Debits");
        Writeoffsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WriteoffsmnitActionPerformed(evt);
            }
        });
        writeoffs.add(Writeoffsmnit);

        Writeoffscrtmnit.setText("Write Offs Credits");
        Writeoffscrtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WriteoffscrtmnitActionPerformed(evt);
            }
        });
        writeoffs.add(Writeoffscrtmnit);

        gledgermn.add(writeoffs);
        gledgermn.add(jSeparator78);

        mergeacmnit.setText("Merge GL Ac");
        mergeacmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeacmnitActionPerformed(evt);
            }
        });
        gledgermn.add(mergeacmnit);

        auditAccountsmnit.setText("Audit Accounts");
        auditAccountsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditAccountsmnitActionPerformed(evt);
            }
        });
        gledgermn.add(auditAccountsmnit);

        jMenuBar1.add(gledgermn);

        financialsmn.setText("Treasury");

        CashBookMangmnit.setMnemonic('O');
        CashBookMangmnit.setText("Cash Book Management");
        CashBookMangmnit.setToolTipText("Select this menu to access front end operations");
        CashBookMangmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashBookMangmnitActionPerformed(evt);
            }
        });
        financialsmn.add(CashBookMangmnit);

        bankingmnit.setText("Cash Point Rec.");
        bankingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankingmnitActionPerformed(evt);
            }
        });
        financialsmn.add(bankingmnit);

        shiftTotalsmnit.setText("Shift Totals");
        shiftTotalsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftTotalsmnitActionPerformed(evt);
            }
        });
        financialsmn.add(shiftTotalsmnit);

        Bankingmnit.setText("Banking");
        Bankingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BankingmnitActionPerformed(evt);
            }
        });
        financialsmn.add(Bankingmnit);

        bankreconcmnit.setText("Bank Reconciliation");
        bankreconcmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankreconcmnitActionPerformed(evt);
            }
        });
        financialsmn.add(bankreconcmnit);

        unrecordedRecItemsmnit.setText("Unrecorded Reconciling Items");
        unrecordedRecItemsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unrecordedRecItemsmnitActionPerformed(evt);
            }
        });
        financialsmn.add(unrecordedRecItemsmnit);

        reconcilationreportermnit.setText("Reconcilation Reporter");
        reconcilationreportermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reconcilationreportermnitActionPerformed(evt);
            }
        });
        financialsmn.add(reconcilationreportermnit);

        comfbankingmnit.setText("Comfirm Banking");
        comfbankingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comfbankingmnitActionPerformed(evt);
            }
        });
        financialsmn.add(comfbankingmnit);

        bnkchargesmnit.setText("Bank Charges");
        bnkchargesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnkchargesmnitActionPerformed(evt);
            }
        });
        financialsmn.add(bnkchargesmnit);

        directbankingmnit.setText("Direct Banking");
        directbankingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directbankingmnitActionPerformed(evt);
            }
        });
        financialsmn.add(directbankingmnit);

        paymenmn.setText("Payments");

        otherprmnit.setText("Payments");
        otherprmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherprmnitActionPerformed(evt);
            }
        });
        paymenmn.add(otherprmnit);

        paymentSchedulemnit.setText("Pay via Payment Schedule");
        paymentSchedulemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentSchedulemnitActionPerformed(evt);
            }
        });
        paymenmn.add(paymentSchedulemnit);

        Lumpotherprmnit.setText("Lump Sum Payments");
        Lumpotherprmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LumpotherprmnitActionPerformed(evt);
            }
        });
        paymenmn.add(Lumpotherprmnit);

        consultantspmnit.setText("Consultants");
        consultantspmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultantspmnitActionPerformed(evt);
            }
        });
        paymenmn.add(consultantspmnit);

        paymntadjmnit.setText("Payment Adjustment");
        paymntadjmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymntadjmnitActionPerformed(evt);
            }
        });
        paymenmn.add(paymntadjmnit);

        financialsmn.add(paymenmn);

        pettycashmn.setMnemonic('C');
        pettycashmn.setText("Cash Payments");

        imprestPettyCashPaymentsmnit.setText("Imprest - Petty Cash Payments");
        imprestPettyCashPaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestPettyCashPaymentsmnitActionPerformed(evt);
            }
        });
        pettycashmn.add(imprestPettyCashPaymentsmnit);

        raisecashVouchmnit.setText("Raise Voucher");
        raisecashVouchmnit.setEnabled(false);
        raisecashVouchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raisecashVouchmnitActionPerformed(evt);
            }
        });
        pettycashmn.add(raisecashVouchmnit);

        payvouchermnit.setText("Approve Voucher");
        payvouchermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payvouchermnitActionPerformed(evt);
            }
        });
        pettycashmn.add(payvouchermnit);

        pettycashpaymnit.setText("Petty Cash Payment");
        pettycashpaymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashpaymnitActionPerformed(evt);
            }
        });
        pettycashmn.add(pettycashpaymnit);

        pettycashpaywhmnit.setText("Direct NGO Petty Cash Payment");
        pettycashpaywhmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashpaywhmnitActionPerformed(evt);
            }
        });
        pettycashmn.add(pettycashpaywhmnit);

        pettycashpaydirmnit.setText("Direct Cash Payment");
        pettycashpaydirmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashpaydirmnitActionPerformed(evt);
            }
        });
        pettycashmn.add(pettycashpaydirmnit);

        printvouchermnit.setText("Petty Cash Adj.");
        printvouchermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printvouchermnitActionPerformed(evt);
            }
        });
        pettycashmn.add(printvouchermnit);

        financialsmn.add(pettycashmn);

        Loanregmnit.setText("Loan Registration");
        Loanregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoanregmnitActionPerformed(evt);
            }
        });
        financialsmn.add(Loanregmnit);
        financialsmn.add(jSeparator96);

        cashbookReportsmnit.setText("Treasury Dashboard");
        cashbookReportsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashbookReportsmnitActionPerformed(evt);
            }
        });
        financialsmn.add(cashbookReportsmnit);

        jMenuBar1.add(financialsmn);

        aiemn.setText("Vote-Book");
        aiemn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aiemnActionPerformed(evt);
            }
        });

        allocation1mnit.setText("Yearly Allocation");
        allocation1mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocation1mnitActionPerformed(evt);
            }
        });
        aiemn.add(allocation1mnit);

        voteBookBalancesmnit.setText("Vote Book Balances");
        voteBookBalancesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteBookBalancesmnitActionPerformed(evt);
            }
        });
        aiemn.add(voteBookBalancesmnit);

        allocation3mnit.setText("Votebook adjustment");
        allocation3mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocation3mnitActionPerformed(evt);
            }
        });
        aiemn.add(allocation3mnit);

        allocation2mnit.setText("Quarterly Spill Overs");
        allocation2mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocation2mnitActionPerformed(evt);
            }
        });
        aiemn.add(allocation2mnit);

        allocation4mnit.setText("Commitment for Orders");
        allocation4mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocation4mnitActionPerformed(evt);
            }
        });
        aiemn.add(allocation4mnit);

        allocationmnitd.setText("Reverse Commitment/Payment");
        allocationmnitd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocationmnitdActionPerformed(evt);
            }
        });
        aiemn.add(allocationmnitd);

        commitmentmnit.setText("Order/Imprest Votebok Commitment");
        commitmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitmentmnitActionPerformed(evt);
            }
        });
        aiemn.add(commitmentmnit);

        orderPaymentCommitmentsmnit.setText("Payment /Commitment Made Off System");
        orderPaymentCommitmentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderPaymentCommitmentsmnitActionPerformed(evt);
            }
        });
        aiemn.add(orderPaymentCommitmentsmnit);

        procurementPlanmnit.setText("Annual Procurement Plan");
        procurementPlanmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procurementPlanmnitActionPerformed(evt);
            }
        });
        aiemn.add(procurementPlanmnit);
        aiemn.add(jSeparator81);

        directPaymentsmnit.setText("Direct Purchases/Payments");
        directPaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directPaymentsmnitActionPerformed(evt);
            }
        });
        aiemn.add(directPaymentsmnit);

        allocation5mnit.setText("Vote Expenditure");
        allocation5mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocation5mnitActionPerformed(evt);
            }
        });
        aiemn.add(allocation5mnit);

        jMenuBar1.add(aiemn);

        budgetmn.setText("Budget");

        budgetsectmint.setText("Proposed Budget");
        budgetsectmint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetsectmintActionPerformed(evt);
            }
        });
        budgetmn.add(budgetsectmint);

        budgetdeptmnit.setText("Budget per Dept.");
        budgetdeptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetdeptmnitActionPerformed(evt);
            }
        });
        budgetmn.add(budgetdeptmnit);

        budgettotalmnit.setText("Total Budget");
        budgettotalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgettotalmnitActionPerformed(evt);
            }
        });
        budgetmn.add(budgettotalmnit);

        budgetamendmnit.setText("Amend Budget");
        budgetamendmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetamendmnitActionPerformed(evt);
            }
        });
        budgetmn.add(budgetamendmnit);

        jMenuBar1.add(budgetmn);

        payrollmn.setText("Payroll");
        jMenuBar1.add(payrollmn);

        auditingmn.setText("Auditing");

        billingAuditmnit.setText("Billing Audit");
        billingAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(billingAuditmnit);

        receivablesAuditmnit.setText("Receivables Audit");
        receivablesAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivablesAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(receivablesAuditmnit);

        inventoryAuditmnit.setText("Inventory Audit");
        inventoryAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(inventoryAuditmnit);

        invoicingAuditmnit.setText("Invoicing Audit");
        invoicingAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicingAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(invoicingAuditmnit);

        userAccessAuditmnit.setText("User Access Audit");
        userAccessAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userAccessAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(userAccessAuditmnit);

        sysAdminAuditmnit.setText("System Admin Audit");
        sysAdminAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sysAdminAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(sysAdminAuditmnit);

        auditTrailmnit.setText("Accounts Audit Trail");
        auditTrailmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditTrailmnitActionPerformed(evt);
            }
        });
        auditingmn.add(auditTrailmnit);

        payablesAuditmnit.setText("Payables Audit");
        payablesAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payablesAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(payablesAuditmnit);

        patientRegistrationmnit.setText("Patient Attendance Trail");
        patientRegistrationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientRegistrationmnitActionPerformed(evt);
            }
        });
        auditingmn.add(patientRegistrationmnit);

        cashBookAuditmnit.setText("Treasury/Cash Book Audit");
        cashBookAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashBookAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(cashBookAuditmnit);

        imprestAuditmnit.setText("Imprest/Petty Cash Audit");
        imprestAuditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprestAuditmnitActionPerformed(evt);
            }
        });
        auditingmn.add(imprestAuditmnit);

        jMenuBar1.add(auditingmn);

        reportsmn.setMnemonic('p');
        reportsmn.setText("Reports");

        outpatmn.setText("OUT-Patient");

        attsheetmnit.setText("Attendance Sheet");
        attsheetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attsheetmnitActionPerformed(evt);
            }
        });
        outpatmn.add(attsheetmnit);

        Attendancesummnit.setText("Attendance Summary");
        Attendancesummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttendancesummnitActionPerformed(evt);
            }
        });
        outpatmn.add(Attendancesummnit);

        attendancepaidupmnit.setText("Attendance Paid-up Confirmation");
        attendancepaidupmnit.setName("Attenance Paid-up Confirmation"); // NOI18N
        attendancepaidupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendancepaidupmnitActionPerformed(evt);
            }
        });
        outpatmn.add(attendancepaidupmnit);

        attdencebydptmnit.setText("Departmental Attendance Listing");
        attdencebydptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attdencebydptmnitActionPerformed(evt);
            }
        });
        outpatmn.add(attdencebydptmnit);

        AttendancePerDeptmnit.setText("Departmental Attendance Summary");
        AttendancePerDeptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttendancePerDeptmnitActionPerformed(evt);
            }
        });
        outpatmn.add(AttendancePerDeptmnit);

        opmobidityundermnit.setText("MOH705A");
        opmobidityundermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opmobidityundermnitActionPerformed(evt);
            }
        });
        outpatmn.add(opmobidityundermnit);

        mohovermnit.setText("MOH705B");
        mohovermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mohovermnitActionPerformed(evt);
            }
        });
        outpatmn.add(mohovermnit);

        patperdeptmnit.setText("Patients Per Dept.");
        patperdeptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patperdeptmnitActionPerformed(evt);
            }
        });
        outpatmn.add(patperdeptmnit);
        outpatmn.add(jSeparator23);

        printreceiptmnit.setText("Patient Receipt Copy");
        printreceiptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printreceiptmnitActionPerformed(evt);
            }
        });
        outpatmn.add(printreceiptmnit);

        intinvmnit.setText("Interim Invoice");
        intinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intinvmnitActionPerformed(evt);
            }
        });
        outpatmn.add(intinvmnit);

        invbyinvmnit.setText("Invoice By Invoice");
        invbyinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invbyinvmnitActionPerformed(evt);
            }
        });
        outpatmn.add(invbyinvmnit);

        Outpatientinvoicetxtmnit.setText("Out Patient Invoice Txt");
        Outpatientinvoicetxtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutpatientinvoicetxtmnitActionPerformed(evt);
            }
        });
        outpatmn.add(Outpatientinvoicetxtmnit);

        Detinvbyinvmnit.setText("Detailed Invoice By Invoice");
        Detinvbyinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetinvbyinvmnitActionPerformed(evt);
            }
        });
        outpatmn.add(Detinvbyinvmnit);

        patstmtmnit.setText("Patient Statement");
        patstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patstmtmnitActionPerformed(evt);
            }
        });
        outpatmn.add(patstmtmnit);

        detailedpatstmtmnit.setText("Detailed Patient Statement");
        detailedpatstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedpatstmtmnitActionPerformed(evt);
            }
        });
        outpatmn.add(detailedpatstmtmnit);
        outpatmn.add(jSeparator24);

        stockbalancesmnit.setText("Patient Card");
        stockbalancesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockbalancesmnitActionPerformed(evt);
            }
        });
        outpatmn.add(stockbalancesmnit);

        clinicsmnit.setText("Clinics and Appointments ");
        clinicsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clinicsmnitActionPerformed(evt);
            }
        });
        outpatmn.add(clinicsmnit);

        patlabresultsmnit.setText("Patient Lab Results");
        patlabresultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patlabresultsmnitActionPerformed(evt);
            }
        });
        outpatmn.add(patlabresultsmnit);

        detoprevmnit.setText("DetailedOpRev");
        detoprevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detoprevmnitActionPerformed(evt);
            }
        });
        outpatmn.add(detoprevmnit);

        unfinalisedOpmnit.setText("Outpatient Unfinalise");
        unfinalisedOpmnit.setActionCommand("Out Patient Bills");
        unfinalisedOpmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfinalisedOpmnitActionPerformed(evt);
            }
        });
        outpatmn.add(unfinalisedOpmnit);

        cashUnbalancedOpmnit.setText("OP Cash Transactions");
        cashUnbalancedOpmnit.setActionCommand("Out Patient Bills");
        cashUnbalancedOpmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashUnbalancedOpmnitActionPerformed(evt);
            }
        });
        outpatmn.add(cashUnbalancedOpmnit);

        prntreceiptmnit.setText("Receipt Copy TXT");
        prntreceiptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prntreceiptmnitActionPerformed(evt);
            }
        });
        outpatmn.add(prntreceiptmnit);

        opworkloadmnit.setText("OP Monthly Workload");
        opworkloadmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opworkloadmnitActionPerformed(evt);
            }
        });
        outpatmn.add(opworkloadmnit);
        outpatmn.add(jSeparator106);

        dailyWorkloadsmnit.setText("Daily Workloads Report");
        dailyWorkloadsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyWorkloadsmnitActionPerformed(evt);
            }
        });
        outpatmn.add(dailyWorkloadsmnit);

        unhNHIFClaimmnit.setText("UHC NHIF Claim Form");
        unhNHIFClaimmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unhNHIFClaimmnitActionPerformed(evt);
            }
        });
        outpatmn.add(unhNHIFClaimmnit);

        reportsmn.add(outpatmn);

        inpatmn.setText("IN-Patient");

        Pregistermn.setText("Patients Attendance");
        Pregistermn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PregistermnActionPerformed(evt);
            }
        });

        rpatientmnit.setText("Registered Patients");
        rpatientmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpatientmnitActionPerformed(evt);
            }
        });
        Pregistermn.add(rpatientmnit);

        admissiomnit.setText("Daily Admissions");
        admissiomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admissiomnitActionPerformed(evt);
            }
        });
        Pregistermn.add(admissiomnit);

        dischargesmnit.setText("Discharged Patients");
        dischargesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dischargesmnitActionPerformed(evt);
            }
        });
        Pregistermn.add(dischargesmnit);

        Iperdeptmnit.setText("Patient Per Department IP");
        Iperdeptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IperdeptmnitActionPerformed(evt);
            }
        });
        Pregistermn.add(Iperdeptmnit);

        AdmisDischargesmnit.setText("Admission & Discharges");
        AdmisDischargesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdmisDischargesmnitActionPerformed(evt);
            }
        });
        Pregistermn.add(AdmisDischargesmnit);

        inpatmn.add(Pregistermn);

        Wardsmn.setText("Wards Managements");

        quotationmnit.setText("No of Wards");
        quotationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quotationmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(quotationmnit);

        admissbywardmnit.setText("Admissions by ward");
        admissbywardmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admissbywardmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(admissbywardmnit);

        patbedoccupancymnit.setText("Wards Occupancy");
        patbedoccupancymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patbedoccupancymnitActionPerformed(evt);
            }
        });
        Wardsmn.add(patbedoccupancymnit);

        wardoccstatisticsmnit.setText("Ward Occupancy Statistics");
        wardoccstatisticsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardoccstatisticsmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(wardoccstatisticsmnit);

        bedoccupancymnit.setText("Bed Occupancy");
        bedoccupancymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedoccupancymnitActionPerformed(evt);
            }
        });
        Wardsmn.add(bedoccupancymnit);

        wardoccupancymnit.setText("Patient Bed Occupancy");
        wardoccupancymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardoccupancymnitActionPerformed(evt);
            }
        });
        Wardsmn.add(wardoccupancymnit);

        ipdaysmnit.setText("Inpatient Days");
        ipdaysmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipdaysmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(ipdaysmnit);

        dailybltmnit.setText("Daily Bulletin");
        dailybltmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailybltmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(dailybltmnit);

        ipBillStatusmnit.setText("IP Bills Status");
        ipBillStatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipBillStatusmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(ipBillStatusmnit);

        ipbillmnit.setText("IP Bills Summary");
        ipbillmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipbillmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(ipbillmnit);

        dailywardstmtmnit.setText("Daily Ward Statement");
        dailywardstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailywardstmtmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(dailywardstmtmnit);

        dailywardsdischmnit.setText("Daily Ward Discharges");
        dailywardsdischmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailywardsdischmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(dailywardsdischmnit);

        inpatientstmtmnit.setText("Statement of IN-Patient");
        inpatientstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpatientstmtmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(inpatientstmtmnit);

        ipanalysisformmnit.setText("IN Patient Analysis Form");
        ipanalysisformmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipanalysisformmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(ipanalysisformmnit);

        ipmorbmotaritymnit.setText("IP Morbidity and Mortality");
        ipmorbmotaritymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipmorbmotaritymnitActionPerformed(evt);
            }
        });
        Wardsmn.add(ipmorbmotaritymnit);

        dailybedreturnmnit.setText("Daily Bed Return");
        dailybedreturnmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailybedreturnmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(dailybedreturnmnit);

        dailybedreturnSummarymnit.setText("Daily Bed Return Summary");
        dailybedreturnSummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailybedreturnSummarymnitActionPerformed(evt);
            }
        });
        Wardsmn.add(dailybedreturnSummarymnit);

        dailybedreturnDetailedmnit.setText("Detailed Daily Bed Return");
        dailybedreturnDetailedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailybedreturnDetailedmnitActionPerformed(evt);
            }
        });
        Wardsmn.add(dailybedreturnDetailedmnit);

        inpatmn.add(Wardsmn);
        inpatmn.add(jSeparator11);

        Interiminvoicemn.setText("Interim Invoices");

        patientstatementmnit.setText("Patient Statement ");
        patientstatementmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientstatementmnitActionPerformed(evt);
            }
        });
        Interiminvoicemn.add(patientstatementmnit);

        billsummnit.setText("Interim Invoice Summary");
        billsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billsummnitActionPerformed(evt);
            }
        });
        Interiminvoicemn.add(billsummnit);

        interimdescinvmnit.setText("Interim Invoice Breakdown");
        interimdescinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interimdescinvmnitActionPerformed(evt);
            }
        });
        Interiminvoicemn.add(interimdescinvmnit);

        interimInvoicePlainmnit.setText("Interim Invoice");
        interimInvoicePlainmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interimInvoicePlainmnitActionPerformed(evt);
            }
        });
        Interiminvoicemn.add(interimInvoicePlainmnit);

        patientaccmnit.setText("Patient Balances");
        patientaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientaccmnitActionPerformed(evt);
            }
        });
        Interiminvoicemn.add(patientaccmnit);

        inpatmn.add(Interiminvoicemn);

        finalinvmn.setText("Final Invoices");

        detailedfinalinvmnit.setText("Detailed Final Invoice");
        detailedfinalinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedfinalinvmnitActionPerformed(evt);
            }
        });
        finalinvmn.add(detailedfinalinvmnit);

        sumfinalinvmnit.setText("Summarised Final Invoice");
        sumfinalinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumfinalinvmnitActionPerformed(evt);
            }
        });
        finalinvmn.add(sumfinalinvmnit);

        InPatInvCashmnit.setText("Final Inpatient Cash Invoices");
        InPatInvCashmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InPatInvCashmnitActionPerformed(evt);
            }
        });
        finalinvmn.add(InPatInvCashmnit);

        InPatsInvTotalmnit.setText("IP Finalised Invoices ");
        InPatsInvTotalmnit.setRolloverEnabled(true);
        InPatsInvTotalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InPatsInvTotalmnitActionPerformed(evt);
            }
        });
        finalinvmn.add(InPatsInvTotalmnit);

        finalInPatientInvmnit.setText("Final InPatient Inv");
        finalInPatientInvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalInPatientInvmnitActionPerformed(evt);
            }
        });
        finalinvmn.add(finalInPatientInvmnit);

        inpatmn.add(finalinvmn);
        inpatmn.add(jSeparator35);

        suppliersmnit.setText("Diagonistic History");
        suppliersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliersmnitActionPerformed(evt);
            }
        });
        inpatmn.add(suppliersmnit);

        outstandingordersmnit.setText("Drugs Prescribed");
        outstandingordersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outstandingordersmnitActionPerformed(evt);
            }
        });
        inpatmn.add(outstandingordersmnit);

        releasepapermnit.setText("Release Paper");
        releasepapermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releasepapermnitActionPerformed(evt);
            }
        });
        inpatmn.add(releasepapermnit);

        reportsmn.add(inpatmn);

        nursingReportermn.setText("Nursing Reporter");

        bedsoremn.setText("Bed Sore");
        bedsoremn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedsoremnActionPerformed(evt);
            }
        });
        nursingReportermn.add(bedsoremn);

        patientrepotsmn.setText(" Patient Reports");
        patientrepotsmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientrepotsmnActionPerformed(evt);
            }
        });
        nursingReportermn.add(patientrepotsmn);

        reportingdepartmentalMenuItemnit.setText("Departmental Reporting");
        reportingdepartmentalMenuItemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportingdepartmentalMenuItemnitActionPerformed(evt);
            }
        });
        nursingReportermn.add(reportingdepartmentalMenuItemnit);

        departmentalreportMenuItemnit.setText("Departmental Report");
        departmentalreportMenuItemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentalreportMenuItemnitActionPerformed(evt);
            }
        });
        nursingReportermn.add(departmentalreportMenuItemnit);

        reportsmn.add(nursingReportermn);

        incidenceMenumn.setText("Incidence Reporting");

        reportincidenceMenuItemnit.setText("Report Incidence");
        reportincidenceMenuItemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportincidenceMenuItemnitActionPerformed(evt);
            }
        });
        incidenceMenumn.add(reportincidenceMenuItemnit);

        approveincidenceMenuItemnit.setText("Approve Incidence");
        approveincidenceMenuItemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveincidenceMenuItemnitActionPerformed(evt);
            }
        });
        incidenceMenumn.add(approveincidenceMenuItemnit);

        viewincidenceMenuItemnit.setText("View Incidences");
        viewincidenceMenuItemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewincidenceMenuItemnitActionPerformed(evt);
            }
        });
        incidenceMenumn.add(viewincidenceMenuItemnit);

        reportsmn.add(incidenceMenumn);

        patDepositsmn.setText("Patient Deposits");

        unutilisedepositmnit.setText("Unutilised Patient Deposit");
        unutilisedepositmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unutilisedepositmnitActionPerformed(evt);
            }
        });
        patDepositsmn.add(unutilisedepositmnit);

        depositsviewmnit.setSelected(true);
        depositsviewmnit.setText("Deposits Reports");
        depositsviewmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositsviewmnitActionPerformed(evt);
            }
        });
        patDepositsmn.add(depositsviewmnit);

        reportsmn.add(patDepositsmn);
        reportsmn.add(jSeparator82);

        patacctmn.setText("Receivables / Debtors");

        invoicesmn.setText("Invoices & Credit Notes");

        unfinalisedinvmnit.setText("Unfinalised Inv.");
        unfinalisedinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfinalisedinvmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(unfinalisedinvmnit);

        unfinalinvmnit.setText("In Patient Unfinalised Inv.");
        unfinalinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfinalinvmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(unfinalinvmnit);

        finalisedinvmnit.setText("Finalised Invoices");
        finalisedinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalisedinvmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(finalisedinvmnit);

        totalschemeinvlistmnit.setText("Invoices (Total)");
        totalschemeinvlistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalschemeinvlistmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(totalschemeinvlistmnit);

        pativoicesmnit.setText("Final Inv. Per Patient");
        pativoicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pativoicesmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(pativoicesmnit);
        invoicesmn.add(jSeparator33);

        invoicemnit.setText("Scheme Invoices");
        invoicemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicemnitActionPerformed(evt);
            }
        });
        invoicesmn.add(invoicemnit);

        distinvmnit.setText("Invoices Per Scheme");
        distinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distinvmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(distinvmnit);

        nhifinvoicemnit.setText("NHIF Invoice");
        nhifinvoicemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhifinvoicemnitActionPerformed(evt);
            }
        });
        invoicesmn.add(nhifinvoicemnit);

        nhiflistcreditsmnit.setText("NHIF Credits");
        nhiflistcreditsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhiflistcreditsmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(nhiflistcreditsmnit);

        nhifcreditscompmnit.setText("NHIF Comprehensive");
        nhifcreditscompmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhifcreditscompmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(nhifcreditscompmnit);
        invoicesmn.add(jSeparator34);

        IPCreditmnit.setText("Detailed Credit Note");
        IPCreditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPCreditmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(IPCreditmnit);

        Opcreditmnit.setText("Out Patient CR Note");
        Opcreditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcreditmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(Opcreditmnit);

        Debtorscrnotemnit.setText("Debtors Credit Note");
        Debtorscrnotemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebtorscrnotemnitActionPerformed(evt);
            }
        });
        invoicesmn.add(Debtorscrnotemnit);

        creditnotesmnit.setText("Credit Notes");
        creditnotesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditnotesmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(creditnotesmnit);

        Outpatientinvoicetmnit.setText("Debtors Invoice");
        Outpatientinvoicetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutpatientinvoicetmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(Outpatientinvoicetmnit);

        debtorinvmnit.setText("Debtor Invoices (Reprint)");
        debtorinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorinvmnitActionPerformed(evt);
            }
        });
        invoicesmn.add(debtorinvmnit);

        patacctmn.add(invoicesmn);
        patacctmn.add(jSeparator12);

        Receiptmn.setText("Receipts");

        receiptscopymnit.setText("Other Receipts Copy");
        receiptscopymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptscopymnitActionPerformed(evt);
            }
        });
        Receiptmn.add(receiptscopymnit);

        receiptperpayermnit.setText("Receipt Per Payer");
        receiptperpayermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptperpayermnitActionPerformed(evt);
            }
        });
        Receiptmn.add(receiptperpayermnit);

        debreceiptsmnit.setText("Debtors Receipts Listing");
        debreceiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debreceiptsmnitActionPerformed(evt);
            }
        });
        Receiptmn.add(debreceiptsmnit);

        alteredreceiptsmnit.setText("Cancelled/Transfered Receipt");
        alteredreceiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alteredreceiptsmnitActionPerformed(evt);
            }
        });
        Receiptmn.add(alteredreceiptsmnit);

        patacctmn.add(Receiptmn);

        jSeparator13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "wwww", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        patacctmn.add(jSeparator13);

        detstmtmn.setText("Statement Per Scheme");

        statementofaccmnit.setText("Statement of Account");
        statementofaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statementofaccmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(statementofaccmnit);

        detailedstmtmnit.setText("Detailed Statement");
        detailedstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedstmtmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(detailedstmtmnit);

        scmepfmmnit.setText("Scheme Performance(Periodical)");
        scmepfmmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scmepfmmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(scmepfmmnit);

        schmsdebtCollmnit.setText("Debt Collector Report");
        schmsdebtCollmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schmsdebtCollmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(schmsdebtCollmnit);

        schemesalesmnit.setText("Scheme Sales Report");
        schemesalesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemesalesmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(schemesalesmnit);

        detailedstmtsmnit.setText("Detailed Statement Breakdown");
        detailedstmtsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedstmtsmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(detailedstmtsmnit);

        nhifStatementmnit.setText("NHIF Statement");
        nhifStatementmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhifStatementmnitActionPerformed(evt);
            }
        });
        detstmtmn.add(nhifStatementmnit);

        patacctmn.add(detstmtmn);
        patacctmn.add(jSeparator14);

        Statementsmn.setText("Statements Per Scheme Manager");

        submStmtmnit.setText("Submission Form");
        submStmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submStmtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(submStmtmnit);

        debtorsStmtmnit.setText("Payers Statement");
        debtorsStmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorsStmtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(debtorsStmtmnit);

        DebtStatementmnit.setText("Debtors Statement");
        DebtStatementmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebtStatementmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(DebtStatementmnit);

        payerdetStmtmnit.setText("Payer Statement(Detailed)");
        payerdetStmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerdetStmtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(payerdetStmtmnit);

        stmtsummperdebtmnit.setText("Summarised Statement Per Debt");
        stmtsummperdebtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stmtsummperdebtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(stmtsummperdebtmnit);

        debtorsyearlybalmnit.setText("Annual Debtors Balance");
        debtorsyearlybalmnit.setPreferredSize(new java.awt.Dimension(0, 0));
        debtorsyearlybalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorsyearlybalmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(debtorsyearlybalmnit);

        debtosbalmnit.setText("Debtors OS Balances");
        debtosbalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtosbalmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(debtosbalmnit);

        exceedlimitsmnit.setText("Exceeded Limits");
        exceedlimitsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exceedlimitsmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(exceedlimitsmnit);

        extactscmmnit.setText("Active Acc. With Limits Exceeded");
        extactscmmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extactscmmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(extactscmmnit);

        payerperfmmnit.setText("Payer Performance");
        payerperfmmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerperfmmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(payerperfmmnit);

        payertnovermnit.setText("Payer Turnover");
        payertnovermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payertnovermnitActionPerformed(evt);
            }
        });
        Statementsmn.add(payertnovermnit);

        detdebtorsStmtmnit.setText("Payers  Statement Breakdown");
        detdebtorsStmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detdebtorsStmtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(detdebtorsStmtmnit);

        DebtStatementtxtmnit.setText("Debtors Statement Txt");
        DebtStatementtxtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebtStatementtxtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(DebtStatementtxtmnit);

        DebtStatttxtmnit.setText("Debtors Statement Per Scheme");
        DebtStatttxtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebtStatttxtmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(DebtStatttxtmnit);

        DebtStattexlmnit.setText("Debtors Statement Per Scheme SpreadSheet");
        DebtStattexlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebtStattexlmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(DebtStattexlmnit);

        debtorSchemeStatementmnit.setText("Debtor Per Scheme Statement");
        debtorSchemeStatementmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtorSchemeStatementmnitActionPerformed(evt);
            }
        });
        Statementsmn.add(debtorSchemeStatementmnit);

        patacctmn.add(Statementsmn);

        jSeparator20.setBorder(javax.swing.BorderFactory.createTitledBorder("xxxx"));
        patacctmn.add(jSeparator20);

        ageingmn.setText("Ageing");

        compdebtorsmnit.setText("Debtors Ageing");
        compdebtorsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compdebtorsmnitActionPerformed(evt);
            }
        });
        ageingmn.add(compdebtorsmnit);

        payerageingmnit.setText("Ageing By Payer");
        payerageingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerageingmnitActionPerformed(evt);
            }
        });
        ageingmn.add(payerageingmnit);

        payerageingsummnit.setText("Payer ageing Summary");
        payerageingsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerageingsummnitActionPerformed(evt);
            }
        });
        ageingmn.add(payerageingsummnit);

        annualageingmnit.setText("Aged Allocation");
        annualageingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annualageingmnitActionPerformed(evt);
            }
        });
        ageingmn.add(annualageingmnit);

        anualPayeragmnit.setText("Annual Ageing By Payer");
        anualPayeragmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anualPayeragmnitActionPerformed(evt);
            }
        });
        ageingmn.add(anualPayeragmnit);

        annualpayersummnit.setText("Annual Ageing By Payer Summary");
        annualpayersummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annualpayersummnitActionPerformed(evt);
            }
        });
        ageingmn.add(annualpayersummnit);

        compdebtorstxtmnit.setText("Debtors Ageing Txt");
        compdebtorstxtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compdebtorstxtmnitActionPerformed(evt);
            }
        });
        ageingmn.add(compdebtorstxtmnit);

        compdebtorsbynamemnit.setText("Debtors Ageing By Name");
        compdebtorsbynamemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compdebtorsbynamemnitActionPerformed(evt);
            }
        });
        ageingmn.add(compdebtorsbynamemnit);

        patacctmn.add(ageingmn);
        patacctmn.add(jSeparator22);

        SchemeDetailsmn.setText("Schemes  Information");

        schemestaffmnit.setText("Scheme Staff");
        schemestaffmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemestaffmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(schemestaffmnit);

        scmattendsummnit.setText("Scheme Attendance");
        scmattendsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scmattendsummnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(scmattendsummnit);

        attdperscmdetmnit.setText("Attendace Per Scheme");
        attdperscmdetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attdperscmdetmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(attdperscmdetmnit);

        payerstaffamdmnit.setText("Payer Staff Amendments");
        payerstaffamdmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payerstaffamdmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(payerstaffamdmnit);

        Scmammnit.setText("Scheme Amendments");
        Scmammnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScmammnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(Scmammnit);
        SchemeDetailsmn.add(jSeparator85);

        scmstatusmnit.setText("Scheme status");
        scmstatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scmstatusmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(scmstatusmnit);

        scmperfrmnit.setText("Scheme Performance");
        scmperfrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scmperfrmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(scmperfrmnit);

        autolimitsmnit.setText("Automated Limits");
        autolimitsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autolimitsmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(autolimitsmnit);

        payeractaccmnit.setText("Payer Active Accounts");
        payeractaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payeractaccmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(payeractaccmnit);

        scmabtlimitmnit.setText("Scheme About To Exceed Limit");
        scmabtlimitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scmabtlimitmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(scmabtlimitmnit);
        SchemeDetailsmn.add(jSeparator86);

        accabtexpiremnit.setText("Accounts About To Expire");
        accabtexpiremnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accabtexpiremnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(accabtexpiremnit);

        expiredaccmnit.setText("Expired Accounts");
        expiredaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expiredaccmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(expiredaccmnit);

        closedschemesmnit.setText("Closed Schemes");
        closedschemesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedschemesmnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(closedschemesmnit);
        SchemeDetailsmn.add(jSeparator87);

        marketertnovermnit.setText("Marketer Turnover");
        marketertnovermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketertnovermnitActionPerformed(evt);
            }
        });
        SchemeDetailsmn.add(marketertnovermnit);

        patacctmn.add(SchemeDetailsmn);

        staffStatementsmnit.setText("Staff Statements");
        staffStatementsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffStatementsmnitActionPerformed(evt);
            }
        });
        patacctmn.add(staffStatementsmnit);

        cafeteriaDebtorsStatementmnit.setText("Cafeteria Debtors Statement");
        cafeteriaDebtorsStatementmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cafeteriaDebtorsStatementmnitActionPerformed(evt);
            }
        });
        patacctmn.add(cafeteriaDebtorsStatementmnit);

        reportsmn.add(patacctmn);

        creditorsmn.setText("Creditors");
        creditorsmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsmnActionPerformed(evt);
            }
        });

        creditorsinvmnit.setText("Creditors Invoices");
        creditorsinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsinvmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(creditorsinvmnit);

        invpercrdmnit.setText("Invoice Per Creditor");
        invpercrdmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invpercrdmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(invpercrdmnit);

        supplierinvmnit.setText("Suppliers Invoices");
        supplierinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierinvmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(supplierinvmnit);

        invpersuppliermnit.setText("Invoice Per Supplier");
        invpersuppliermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invpersuppliermnitActionPerformed(evt);
            }
        });
        creditorsmn.add(invpersuppliermnit);
        creditorsmn.add(jSeparator15);

        CrdVouchermnit.setText("Creditors Voucher");
        CrdVouchermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrdVouchermnitActionPerformed(evt);
            }
        });
        creditorsmn.add(CrdVouchermnit);

        jMenuItem7.setText("Received G.R.N ");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        creditorsmn.add(jMenuItem7);

        Paymentsmnit.setText("Payments");
        Paymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaymentsmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(Paymentsmnit);

        paymentspercreditormnit.setText("Payments Per Creditor");
        paymentspercreditormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentspercreditormnitActionPerformed(evt);
            }
        });
        creditorsmn.add(paymentspercreditormnit);

        payeepymtmnit.setText("Payment Per Creditor(detailed)");
        payeepymtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payeepymtmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(payeepymtmnit);

        creditorsinvSummnit.setText("Creditors Invoices Summary");
        creditorsinvSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsinvSummnitActionPerformed(evt);
            }
        });
        creditorsmn.add(creditorsinvSummnit);
        creditorsmn.add(jSeparator16);

        crdstmtmnit.setText("Creditors Statement");
        crdstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crdstmtmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(crdstmtmnit);

        crdtstmtmnit.setText("Creditors Statement Det.");
        crdtstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crdtstmtmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(crdtstmtmnit);

        creditorsLedgermnit.setText("Creditors Ledger");
        creditorsLedgermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsLedgermnitActionPerformed(evt);
            }
        });
        creditorsmn.add(creditorsLedgermnit);

        storesrevmnit.setText("Stores Revenue");
        storesrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storesrevmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(storesrevmnit);
        creditorsmn.add(jSeparator43);

        payrollledgermnit.setText("Payroll Ledger");
        payrollledgermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollledgermnitActionPerformed(evt);
            }
        });
        creditorsmn.add(payrollledgermnit);
        creditorsmn.add(jSeparator44);

        Creditorsmnit.setText("Creditors Ageing");
        Creditorsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreditorsmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(Creditorsmnit);

        ageingbycatmnit.setText("Ageing By Category");
        ageingbycatmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageingbycatmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(ageingbycatmnit);

        creditorsageingbycatmnit.setText("Invoice Ageing");
        creditorsageingbycatmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsageingbycatmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(creditorsageingbycatmnit);

        grtsuppliermnit.setText("Creditors Grt.");
        grtsuppliermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grtsuppliermnitActionPerformed(evt);
            }
        });
        creditorsmn.add(grtsuppliermnit);

        compdebtortxtsmnit.setText("Creditors Ageing Txt");
        compdebtortxtsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compdebtortxtsmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(compdebtortxtsmnit);

        unlinkedgrnsmnit.setText("UnLinked GRNs");
        unlinkedgrnsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlinkedgrnsmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(unlinkedgrnsmnit);

        ageingbysuppmnit.setText("Ageing By Supplier");
        ageingbysuppmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageingbysuppmnitActionPerformed(evt);
            }
        });
        creditorsmn.add(ageingbysuppmnit);

        reportsmn.add(creditorsmn);

        managmn.setText("Consultants");

        Doctorslistmn.setText("Doctors Information");

        doctorslistmnit.setText("Doctors List");
        doctorslistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorslistmnitActionPerformed(evt);
            }
        });
        Doctorslistmn.add(doctorslistmnit);

        nursesmnit.setText("Nurses List");
        Doctorslistmn.add(nursesmnit);

        accstatusmnit.setText("Closed Accounts");
        accstatusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accstatusmnitActionPerformed(evt);
            }
        });
        Doctorslistmn.add(accstatusmnit);

        managmn.add(Doctorslistmn);
        managmn.add(jSeparator54);

        Voucherdetailsmn.setText("Doctors Vouchers");

        docVouchermnit.setText("Voucher");
        docVouchermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docVouchermnitActionPerformed(evt);
            }
        });
        Voucherdetailsmn.add(docVouchermnit);

        detvouchmnit.setText("Detailed Voucher");
        detvouchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detvouchmnitActionPerformed(evt);
            }
        });
        Voucherdetailsmn.add(detvouchmnit);

        paymentVouchermnit.setText("Payment Voucher");
        paymentVouchermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentVouchermnitActionPerformed(evt);
            }
        });
        Voucherdetailsmn.add(paymentVouchermnit);

        managmn.add(Voucherdetailsmn);
        managmn.add(jSeparator55);

        doctorsStamntmn.setText("Doctors Statements");

        paymentsperdocmnit.setText("Payments Per Doctor");
        paymentsperdocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentsperdocmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(paymentsperdocmnit);

        paymentperdocSummnit.setText("Payments Per Doc(Summary)");
        paymentperdocSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentperdocSummnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(paymentperdocSummnit);
        doctorsStamntmn.add(jSeparator58);

        doctorsstmtmnit.setText("Doctors Statement");
        doctorsstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorsstmtmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(doctorsstmtmnit);

        doctstmtpaidinvmnit.setText("Doctors Statement(Paidup)");
        doctstmtpaidinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctstmtpaidinvmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(doctstmtpaidinvmnit);

        doctorsstatementmnit.setText("Statement");
        doctorsstatementmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorsstatementmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(doctorsstatementmnit);

        stmtscmmnit.setText("Statement Including Scheme");
        stmtscmmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stmtscmmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(stmtscmmnit);
        doctorsStamntmn.add(jSeparator60);

        docunpaidinvmnit.setText("Doctors Unpaid Inv.");
        docunpaidinvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docunpaidinvmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(docunpaidinvmnit);
        doctorsStamntmn.add(jSeparator59);

        stmtperdebtmnit.setText("Statement Per Debtor");
        stmtperdebtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stmtperdebtmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(stmtperdebtmnit);

        paidupperdebtmnit.setText("Paidup Per Debtor");
        paidupperdebtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidupperdebtmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(paidupperdebtmnit);

        paidupbyscmnit.setText("Paidup By Scheme");
        paidupbyscmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidupbyscmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(paidupbyscmnit);

        doctorsallocstmtmnit.setText("Doctors Allocation");
        doctorsallocstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorsallocstmtmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(doctorsallocstmtmnit);

        doctorstmtmnit.setText("Doctors Statement Inc. Corporates");
        doctorstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorstmtmnitActionPerformed(evt);
            }
        });
        doctorsStamntmn.add(doctorstmtmnit);

        managmn.add(doctorsStamntmn);
        managmn.add(jSeparator56);

        whtstamentsmn.setText("Withholding Tax Statements");

        whtmnit.setText("Withholding Tax");
        whtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whtmnitActionPerformed(evt);
            }
        });
        whtstamentsmn.add(whtmnit);

        whtperdocmnit.setText("Withholding Tax Per Doc.");
        whtperdocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whtperdocmnitActionPerformed(evt);
            }
        });
        whtstamentsmn.add(whtperdocmnit);

        whtsummnit.setText("WHT Summary");
        whtsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whtsummnitActionPerformed(evt);
            }
        });
        whtstamentsmn.add(whtsummnit);

        managmn.add(whtstamentsmn);
        managmn.add(jSeparator57);

        doctorslistsrmtmn.setText("Statements Summary");

        doctorspaymentsmnit.setText("Doctors Payments");
        doctorspaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorspaymentsmnitActionPerformed(evt);
            }
        });
        doctorslistsrmtmn.add(doctorspaymentsmnit);

        doctorledgermnit.setText("Doctors Ledger");
        doctorledgermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorledgermnitActionPerformed(evt);
            }
        });
        doctorslistsrmtmn.add(doctorledgermnit);

        paidupsummmnit.setText("Paidup Summary");
        paidupsummmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidupsummmnitActionPerformed(evt);
            }
        });
        doctorslistsrmtmn.add(paidupsummmnit);

        docbalsummnit.setText("Doctors Balances");
        docbalsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docbalsummnitActionPerformed(evt);
            }
        });
        doctorslistsrmtmn.add(docbalsummnit);

        docearndeductmnit.setText("Doctors earnings & Deductions");
        docearndeductmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docearndeductmnitActionPerformed(evt);
            }
        });
        doctorslistsrmtmn.add(docearndeductmnit);

        managmn.add(doctorslistsrmtmn);

        reportsmn.add(managmn);
        reportsmn.add(jSeparator83);

        financeopermn.setText("Accounting Reports");
        financeopermn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                financeopermnActionPerformed(evt);
            }
        });

        CashierRepmn.setText("Cash Reports");

        shiftrepmnit.setText("Shift Report");
        shiftrepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftrepmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftrepmnit);

        shiftrptbrdwnmnit.setText("Shift Breakdown");
        shiftrptbrdwnmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftrptbrdwnmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftrptbrdwnmnit);

        shiftreptotalmnit.setText("Shift Total Per Cashier");
        shiftreptotalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftreptotalmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftreptotalmnit);

        shifttotalpercashpointmnit.setText("Shift Total Per Cash Point");
        shifttotalpercashpointmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shifttotalpercashpointmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shifttotalpercashpointmnit);

        shiftreprecmnit.setText("Shift Report (Receipt Paper)");
        shiftreprecmnit.setEnabled(false);
        shiftreprecmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftreprecmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftreprecmnit);

        shiftrepDetmnit.setText("Detailed Shift Report");
        shiftrepDetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftrepDetmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftrepDetmnit);

        shiftstotalmnit.setText("Total Shifts");
        shiftstotalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftstotalmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftstotalmnit);

        uncollectedshiftsmnit.setText("Uncollected Shifts");
        uncollectedshiftsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncollectedshiftsmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(uncollectedshiftsmnit);

        shiftstotalsummnit.setText("Total Shifts Summary");
        shiftstotalsummnit.setEnabled(false);
        shiftstotalsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftstotalsummnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftstotalsummnit);

        patreceiptsmnit.setText("Shift Reconcilliation Report");
        patreceiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patreceiptsmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(patreceiptsmnit);

        totalinpatrecmnit.setText("Inpatients Receipts(total)");
        totalinpatrecmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalinpatrecmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(totalinpatrecmnit);

        allreceiptsmnit.setText("Receipts List Per Date");
        allreceiptsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allreceiptsmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(allreceiptsmnit);

        allreceiptsnomnit.setText("Receipts List Per Receipt No");
        allreceiptsnomnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allreceiptsnomnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(allreceiptsnomnit);

        rptbrdwnmnit.setText("Receipts Breakdown");
        rptbrdwnmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptbrdwnmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(rptbrdwnmnit);

        rptperpointmnit.setText("Receipts Brwk Per Cash Point");
        rptperpointmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptperpointmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(rptperpointmnit);

        rptsummaryperpointmnit.setText("Receipts  Summary Per Cash Point");
        rptsummaryperpointmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptsummaryperpointmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(rptsummaryperpointmnit);

        Cashanalysisdeptmnit.setText("Cash Per Day Analysis");
        Cashanalysisdeptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashanalysisdeptmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(Cashanalysisdeptmnit);

        dailyCashReturnsmnit.setText("Daily Cash Returns");
        dailyCashReturnsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyCashReturnsmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(dailyCashReturnsmnit);

        waiverexemnit.setText("Exemptions / Waivers");
        waiverexemnit.setActionCommand("Exemption / Waivers");
        waiverexemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waiverexemnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(waiverexemnit);

        shiftsurrendermnit.setText("Shift Surrender Report");
        shiftsurrendermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftsurrendermnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(shiftsurrendermnit);

        groupedSurrendermnit.setText("Departmental Shift Surrender");
        groupedSurrendermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupedSurrendermnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(groupedSurrendermnit);

        divisionalSurrendermnit.setText("Divisional Shift Surrender");
        divisionalSurrendermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionalSurrendermnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(divisionalSurrendermnit);
        CashierRepmn.add(jSeparator105);

        paybillPaymentsmnit.setText("Paybill Payments Report");
        paybillPaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paybillPaymentsmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(paybillPaymentsmnit);

        mobileTxReportsmnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/M-PESA approved logo.jpg"))); // NOI18N
        mobileTxReportsmnit.setText("MobilePay Transactions");
        mobileTxReportsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileTxReportsmnitActionPerformed(evt);
            }
        });
        CashierRepmn.add(mobileTxReportsmnit);

        financeopermn.add(CashierRepmn);
        financeopermn.add(jSeparator17);

        Salesmn.setText("Sales Reports");

        Cashanalysismnit.setText("Cash Collected Analysis");
        Cashanalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashanalysismnitActionPerformed(evt);
            }
        });
        Salesmn.add(Cashanalysismnit);

        Cashsalesmnit.setText("Receipts Summary Report");
        Cashsalesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashsalesmnitActionPerformed(evt);
            }
        });
        Salesmn.add(Cashsalesmnit);

        CashSalesbrdmnit.setText("Cash Sales Breakdown");
        CashSalesbrdmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashSalesbrdmnitActionPerformed(evt);
            }
        });
        Salesmn.add(CashSalesbrdmnit);

        Salesmnit.setText("Departmental Sales Report");
        Salesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalesmnitActionPerformed(evt);
            }
        });
        Salesmn.add(Salesmnit);

        ipservicesmnit.setText("IP Services Summary");
        ipservicesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipservicesmnitActionPerformed(evt);
            }
        });
        Salesmn.add(ipservicesmnit);

        debtshiftmnit.setText("Invoices Shift Report");
        debtshiftmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtshiftmnitActionPerformed(evt);
            }
        });
        Salesmn.add(debtshiftmnit);
        Salesmn.add(jSeparator103);

        universalHealthcareReportsmn.setText("Universal Healthcare Reports");

        creditSalesDepartmentReportsmnit.setText("Credit Sale Departmental Reports");
        creditSalesDepartmentReportsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditSalesDepartmentReportsmnitActionPerformed(evt);
            }
        });
        universalHealthcareReportsmn.add(creditSalesDepartmentReportsmnit);

        creditSalesDepartmentDetailedReportsmnit.setText("Credit Sale Detailed Departmental Reports");
        creditSalesDepartmentDetailedReportsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditSalesDepartmentDetailedReportsmnitActionPerformed(evt);
            }
        });
        universalHealthcareReportsmn.add(creditSalesDepartmentDetailedReportsmnit);

        exmptionsWaiversRefundsmnit.setText("Exemptions/Waivers and Refunds");
        exmptionsWaiversRefundsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exmptionsWaiversRefundsmnitActionPerformed(evt);
            }
        });
        universalHealthcareReportsmn.add(exmptionsWaiversRefundsmnit);

        universalHealthcareSalesAnalysismnit.setText("Unviversal Healthcare Sales Summary");
        universalHealthcareSalesAnalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                universalHealthcareSalesAnalysismnitActionPerformed(evt);
            }
        });
        universalHealthcareReportsmn.add(universalHealthcareSalesAnalysismnit);

        Salesmn.add(universalHealthcareReportsmn);

        financeopermn.add(Salesmn);
        financeopermn.add(jSeparator45);

        RevRepotmd.setText("Revenue Reports");

        dailyrevmnit.setText("Daily Revenue");
        dailyrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyrevmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(dailyrevmnit);

        revperdepmnit.setText("Departmental Revenue");
        revperdepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revperdepmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(revperdepmnit);

        transperaccmnit.setText("Transaction Per Account");
        transperaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transperaccmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(transperaccmnit);

        revrepmnit.setText("Revenue Report");
        revrepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revrepmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(revrepmnit);

        oprevrptmnit.setText("Out Patient Rev.");
        oprevrptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oprevrptmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(oprevrptmnit);

        oprevbyaccmnit.setText("Op Rev By Account");
        oprevbyaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oprevbyaccmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(oprevbyaccmnit);

        iprevrptmnit.setText("IP Revenue");
        iprevrptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iprevrptmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(iprevrptmnit);

        iprevbyaccmnit.setText("IP Rev By Acc.");
        iprevbyaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iprevbyaccmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(iprevbyaccmnit);

        theatrescorecard.setText("Theater Revenue");
        theatrescorecard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatrescorecardActionPerformed(evt);
            }
        });
        RevRepotmd.add(theatrescorecard);

        reveagainstmnit.setText("Revenue vs Budget");
        reveagainstmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reveagainstmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(reveagainstmnit);

        revenuecountallmnit.setText("Activity vs Revenue");
        revenuecountallmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revenuecountallmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(revenuecountallmnit);

        revenuecountlmnit.setMnemonic('v');
        revenuecountlmnit.setText("Activity vs Revenue Average");
        revenuecountlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revenuecountlmnitActionPerformed(evt);
            }
        });
        RevRepotmd.add(revenuecountlmnit);

        financeopermn.add(RevRepotmd);
        financeopermn.add(jSeparator18);

        oprevbrkdwnmnit.setText("Ambulance Report");
        oprevbrkdwnmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oprevbrkdwnmnitActionPerformed(evt);
            }
        });
        financeopermn.add(oprevbrkdwnmnit);
        financeopermn.add(jSeparator47);

        pettycashRepmn.setText("Petty Cash");

        pettycashpmtmnit.setText("Petty Cash Payments rep");
        pettycashpmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashpmtmnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycashpmtmnit);

        pettycashreqmnit.setText("Petty Cash Requisitions.");
        pettycashreqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashreqmnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycashreqmnit);

        pettycashVouchmnit.setText("Petty Cash Vouchers");
        pettycashVouchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashVouchmnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycashVouchmnit);

        pettycashshiftsmnit.setText("Petty Cash Shifts");
        pettycashshiftsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashshiftsmnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycashshiftsmnit);

        pettycashshiftsclaimnit.setText("Petty Cash Reimbursement");
        pettycashshiftsclaimnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashshiftsclaimnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycashshiftsclaimnit);

        pettycashshiftssummmnit.setText("Petty Cash Shifts Summary");
        pettycashshiftssummmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycashshiftssummmnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycashshiftssummmnit);

        pettycmentmnit.setText("Petty Cash Shifts Payment");
        pettycmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycmentmnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycmentmnit);

        pettycapaymnit.setText("Petty Cash Payment Summary");
        pettycapaymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pettycapaymnitActionPerformed(evt);
            }
        });
        pettycashRepmn.add(pettycapaymnit);

        financeopermn.add(pettycashRepmn);
        financeopermn.add(jSeparator19);

        otherVouchermnit.setText("Other Voucher");
        otherVouchermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherVouchermnitActionPerformed(evt);
            }
        });
        financeopermn.add(otherVouchermnit);
        financeopermn.add(jSeparator27);

        expensesmnit.setText("Expenses");
        expensesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expensesmnitActionPerformed(evt);
            }
        });
        financeopermn.add(expensesmnit);
        financeopermn.add(jSeparator28);

        journalmnit.setText("Journal By Journal");
        journalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                journalmnitActionPerformed(evt);
            }
        });
        financeopermn.add(journalmnit);
        financeopermn.add(jSeparator46);

        pharmacymnit.setText("Pharmacy");
        pharmacymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacymnitActionPerformed(evt);
            }
        });
        financeopermn.add(pharmacymnit);

        vbookmn.setText("Vote Book Reports");

        vallocationmnit.setText("Aie Allocations");
        vallocationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vallocationmnitActionPerformed(evt);
            }
        });
        vbookmn.add(vallocationmnit);

        vcommitmentmnit.setText("Aie Commitment");
        vcommitmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vcommitmentmnitActionPerformed(evt);
            }
        });
        vbookmn.add(vcommitmentmnit);

        vpaymentsmnit.setText("Aie Payments");
        vpaymentsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vpaymentsmnitActionPerformed(evt);
            }
        });
        vbookmn.add(vpaymentsmnit);

        outstandingcomitmnit.setText("Out Standing Commitments");
        outstandingcomitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outstandingcomitmnitActionPerformed(evt);
            }
        });
        vbookmn.add(outstandingcomitmnit);

        financeopermn.add(vbookmn);
        financeopermn.add(jSeparator97);

        registersmnit.setText("Workload and Billing Registers");
        registersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registersmnitActionPerformed(evt);
            }
        });
        financeopermn.add(registersmnit);

        reportsmn.add(financeopermn);

        glreportsmn.setText("Financial Report");

        transactionslsmnitmnit.setText("Transactions List");
        transactionslsmnitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionslsmnitmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(transactionslsmnitmnit);

        transauditmnit.setText("Transactions Audit");
        transauditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transauditmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(transauditmnit);

        transditmnit.setText("Transactions Audit Per date");
        transditmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transditmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(transditmnit);
        glreportsmn.add(jSeparator48);

        CashBookmn.setText("Cash Book");

        cashBookmnit.setText("Cash Book");
        cashBookmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashBookmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cashBookmnit);

        postdatedchqmnit.setText("Post Dated Cheques");
        postdatedchqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postdatedchqmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(postdatedchqmnit);

        cancelledchqmnit.setText("Cancelled Cheques");
        cancelledchqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelledchqmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cancelledchqmnit);

        cbookbalancesmnit.setText("CashBook Balances");
        cbookbalancesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbookbalancesmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cbookbalancesmnit);

        banksummnit.setText("CashBook Summary");
        banksummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banksummnitActionPerformed(evt);
            }
        });
        CashBookmn.add(banksummnit);

        cashflowoptmnit.setText("Cash Flow Operations");
        cashflowoptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashflowoptmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cashflowoptmnit);

        cheqrequmnit.setText("Cheque Requisition");
        cheqrequmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheqrequmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cheqrequmnit);

        cashBkmnit.setText("Bank Reconciliation Summary");
        cashBkmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashBkmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cashBkmnit);

        cashBokmnit.setText("Payroll Cash Payment");
        cashBokmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashBokmnitActionPerformed(evt);
            }
        });
        CashBookmn.add(cashBokmnit);

        glreportsmn.add(CashBookmn);
        glreportsmn.add(jSeparator49);

        Bankrepmn.setText("Bank Statements");

        banksmnit.setText("Deposit Per Bank");
        banksmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banksmnitActionPerformed(evt);
            }
        });
        Bankrepmn.add(banksmnit);

        bankingsmnit.setText("Banking Per Bank");
        bankingsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankingsmnitActionPerformed(evt);
            }
        });
        Bankrepmn.add(bankingsmnit);

        bankreccmnit.setText("Bank Recconciliation");
        bankreccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankreccmnitActionPerformed(evt);
            }
        });
        Bankrepmn.add(bankreccmnit);

        Unreconcitemsmnit.setText("UnReconcilled Items");
        Unreconcitemsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnreconcitemsmnitActionPerformed(evt);
            }
        });
        Bankrepmn.add(Unreconcitemsmnit);

        unrecitemsmnit.setText("Unreconcilled Item Per Bank");
        unrecitemsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unrecitemsmnitActionPerformed(evt);
            }
        });
        Bankrepmn.add(unrecitemsmnit);

        bankrecdiscrpmnit.setText("Bank Recon. Discripancies");
        bankrecdiscrpmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankrecdiscrpmnitActionPerformed(evt);
            }
        });
        Bankrepmn.add(bankrecdiscrpmnit);

        glreportsmn.add(Bankrepmn);
        glreportsmn.add(jSeparator50);

        profitlossmn.setText("Profit & Loss");

        pnlmnit.setText("Profit & Loss");
        pnlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnlmnitActionPerformed(evt);
            }
        });
        profitlossmn.add(pnlmnit);

        anualplmnit.setText("Profit & Loss Analysis");
        anualplmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anualplmnitActionPerformed(evt);
            }
        });
        profitlossmn.add(anualplmnit);

        pnltxtmnit.setText("Profit & Loss Txt.");
        pnltxtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnltxtmnitActionPerformed(evt);
            }
        });
        profitlossmn.add(pnltxtmnit);

        pnltxttrdmnit.setText("Trading Profit & Loss");
        pnltxttrdmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnltxttrdmnitActionPerformed(evt);
            }
        });
        profitlossmn.add(pnltxttrdmnit);

        incomestmtsummnit.setText("Income Statement Summary");
        incomestmtsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomestmtsummnitActionPerformed(evt);
            }
        });
        profitlossmn.add(incomestmtsummnit);

        incomestmdtlmnit.setText("Income Statement Detailed");
        incomestmdtlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomestmdtlmnitActionPerformed(evt);
            }
        });
        profitlossmn.add(incomestmdtlmnit);

        financistmtmnit.setText("Financial Statement");
        financistmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                financistmtmnitActionPerformed(evt);
            }
        });
        profitlossmn.add(financistmtmnit);

        glreportsmn.add(profitlossmn);
        glreportsmn.add(jSeparator51);

        Trialbalancemn.setText("Trial Balance");

        trialbalancemnit.setText("Trial Balance");
        trialbalancemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trialbalancemnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(trialbalancemnit);

        DtlTrialBalancemnit.setText("Detailed Trial Balance Txt");
        DtlTrialBalancemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DtlTrialBalancemnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(DtlTrialBalancemnit);

        Annualtbmnit.setText("Annual Trial Balance");
        Annualtbmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnualtbmnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(Annualtbmnit);

        tbmovmentmnit.setText("Trial Balance Movement");
        tbmovmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbmovmentmnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(tbmovmentmnit);

        Anualtbmnit.setText("Trial Balance Per Period");
        Anualtbmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnualtbmnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(Anualtbmnit);

        Anatbmnit.setText("Trial Balance As Balance");
        Anatbmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnatbmnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(Anatbmnit);

        groupedTBmnit.setText("Grouped Trial Balance");
        groupedTBmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupedTBmnitActionPerformed(evt);
            }
        });
        Trialbalancemn.add(groupedTBmnit);

        glreportsmn.add(Trialbalancemn);
        glreportsmn.add(jSeparator481);

        acctdetmnit.setText("General Ledger");
        acctdetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acctdetmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(acctdetmnit);
        glreportsmn.add(jSeparator491);

        balancestmn.setText("Balance Sheet");

        lbalancesheetmnit.setText("Balance Sheet");
        lbalancesheetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbalancesheetmnitActionPerformed(evt);
            }
        });
        balancestmn.add(lbalancesheetmnit);

        bsmvmnit.setText("Balance Sheet Movnt");
        bsmvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsmvmnitActionPerformed(evt);
            }
        });
        balancestmn.add(bsmvmnit);

        lbalancesheetdtlmnit.setText("Balance Sheet Detailed");
        lbalancesheetdtlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbalancesheetdtlmnitActionPerformed(evt);
            }
        });
        balancestmn.add(lbalancesheetdtlmnit);

        SubActivimnit.setText("Balance Sheet BreakDown");
        SubActivimnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubActivimnitActionPerformed(evt);
            }
        });
        balancestmn.add(SubActivimnit);

        glreportsmn.add(balancestmn);
        glreportsmn.add(jSeparator501);

        boardMembersmnit.setText("Board Members Report");
        boardMembersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boardMembersmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(boardMembersmnit);

        deptincexpmnit.setText("Departmental Inc. & Exp.");
        deptincexpmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptincexpmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(deptincexpmnit);
        glreportsmn.add(jSeparator511);

        patientctlaccmnit.setText("Patient Control Acc");
        patientctlaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientctlaccmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(patientctlaccmnit);

        patientctlsumnit.setText("Patient Ctl Summary");
        patientctlsumnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientctlsumnitActionPerformed(evt);
            }
        });
        glreportsmn.add(patientctlsumnit);

        Transsummnit.setText("Transaction By Acc. Summary");
        Transsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TranssummnitActionPerformed(evt);
            }
        });
        glreportsmn.add(Transsummnit);
        glreportsmn.add(jSeparator52);

        journalsviewmnit.setText("Journals View");
        journalsviewmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                journalsviewmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(journalsviewmnit);

        journalsmnit.setText("Journals");
        journalsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                journalsmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(journalsmnit);

        paymentssummnit.setText("Payments Summary");
        paymentssummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentssummnitActionPerformed(evt);
            }
        });
        glreportsmn.add(paymentssummnit);
        glreportsmn.add(jSeparator53);

        Taxesmn.setText("Taxes");

        CorporateTaxmnit.setText("Corporation Tax");
        CorporateTaxmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorporateTaxmnitActionPerformed(evt);
            }
        });
        Taxesmn.add(CorporateTaxmnit);

        taxreturnmnit.setText("Tax Return");
        taxreturnmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxreturnmnitActionPerformed(evt);
            }
        });
        Taxesmn.add(taxreturnmnit);

        glreportsmn.add(Taxesmn);

        chartaccountsmnit.setText("Chart of Accounts");
        chartaccountsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartaccountsmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(chartaccountsmnit);

        accountstransmnit.setText("Transactions by Account");
        accountstransmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountstransmnitActionPerformed(evt);
            }
        });
        glreportsmn.add(accountstransmnit);

        reportsmn.add(glreportsmn);

        ManagementReportmn.setText("Management Report");
        ManagementReportmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glreportsmn(evt);
            }
        });

        MohCashanalysismnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        MohCashanalysismnit.setText("MOH Cash Collection Analysis");
        MohCashanalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MohCashanalysismnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(MohCashanalysismnit);

        Dailyrevmnit.setText("Daily Revenue Comparison");
        Dailyrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DailyrevmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(Dailyrevmnit);
        ManagementReportmn.add(jSeparator36);

        weeklyrevmnit.setText("Weekly Revenue");
        weeklyrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weeklyrevmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(weeklyrevmnit);

        weeklyrevCompmnit.setText("Weekly Comparison Revenue");
        weeklyrevCompmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weeklyrevCompmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(weeklyrevCompmnit);
        ManagementReportmn.add(jSeparator37);

        Monthrevmnit.setText("Monthly Revenue Comparison");
        Monthrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthrevmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(Monthrevmnit);

        MonthrevCompmnit.setText("Monthly Revenue Differentials");
        MonthrevCompmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthrevCompmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(MonthrevCompmnit);

        Monthlyrevmnit.setText("Monthly Rent Revenue Comparison");
        Monthlyrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyrevmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(Monthlyrevmnit);

        MonthlyrevCompmnit.setText("Monthly Revenue Breakdown");
        MonthlyrevCompmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyrevCompmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(MonthlyrevCompmnit);
        ManagementReportmn.add(jSeparator38);

        Quarterrevmnit.setText("Quarterly Revenue");
        Quarterrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuarterrevmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(Quarterrevmnit);

        QuartelyRevCompmnit.setText("Quaterly Revenue Differentials");
        QuartelyRevCompmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuartelyRevCompmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(QuartelyRevCompmnit);
        ManagementReportmn.add(jSeparator39);

        Yearyrevmnit.setText("Yearly Revenue Comparison");
        Yearyrevmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearyrevmnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(Yearyrevmnit);
        ManagementReportmn.add(jSeparator40);

        InpatientAnalysismnit.setText("In Patient Visit Analysis");
        InpatientAnalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InpatientAnalysismnitActionPerformed(evt);
            }
        });
        ManagementReportmn.add(InpatientAnalysismnit);

        reportsmn.add(ManagementReportmn);

        budgetingmn.setText("Budgeting/Vote Book");

        entireVoteBookmnit.setText("Entire Budget");
        entireVoteBookmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entireVoteBookmnitActionPerformed(evt);
            }
        });
        budgetingmn.add(entireVoteBookmnit);

        departmentalVoteBookmnit.setText("Budget Expenditure/ Balances");
        departmentalVoteBookmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentalVoteBookmnitActionPerformed(evt);
            }
        });
        budgetingmn.add(departmentalVoteBookmnit);

        departmentalVoteBookmnit1.setText("Budget Quaterly Expenditure");
        departmentalVoteBookmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentalVoteBookmnit1ActionPerformed(evt);
            }
        });
        budgetingmn.add(departmentalVoteBookmnit1);

        departmentalVoteBookmnit2.setText("Divisional VoteHeads");
        departmentalVoteBookmnit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentalVoteBookmnit2ActionPerformed(evt);
            }
        });
        budgetingmn.add(departmentalVoteBookmnit2);

        entireProcurementPlanmnit.setText("Entire Procurement Plan");
        entireProcurementPlanmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entireProcurementPlanmnitActionPerformed(evt);
            }
        });
        budgetingmn.add(entireProcurementPlanmnit);

        departmentalProcurementPlanmnit.setText("Departmental Procurement Plan");
        budgetingmn.add(departmentalProcurementPlanmnit);

        divisionalexpendituremnit.setText("Divisional Expenditure");
        divisionalexpendituremnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionalexpendituremnitActionPerformed(evt);
            }
        });
        budgetingmn.add(divisionalexpendituremnit);

        reportsmn.add(budgetingmn);
        reportsmn.add(jSeparator84);

        listsmn.setText("Lists");

        revenuemnit.setText("Entire Charge Sheet");
        revenuemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revenuemnitActionPerformed(evt);
            }
        });
        listsmn.add(revenuemnit);

        schemesmnit.setText("Schemes");
        schemesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemesmnitActionPerformed(evt);
            }
        });
        listsmn.add(schemesmnit);

        specimensmnit.setText("Lab Specimens");
        specimensmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specimensmnitActionPerformed(evt);
            }
        });
        listsmn.add(specimensmnit);

        timelogmnit.setText("Time Log");
        timelogmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timelogmnitActionPerformed(evt);
            }
        });
        listsmn.add(timelogmnit);

        pharmperformmnit.setText("Pharmacy Performance");
        pharmperformmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmperformmnitActionPerformed(evt);
            }
        });
        listsmn.add(pharmperformmnit);

        laboratoryresultsmnit.setText("Lab Results");
        laboratoryresultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laboratoryresultsmnitActionPerformed(evt);
            }
        });
        listsmn.add(laboratoryresultsmnit);

        chekinmnit.setText("Patient Visit");
        chekinmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chekinmnitActionPerformed(evt);
            }
        });
        listsmn.add(chekinmnit);

        revpricelistmnit.setText("Departmental Price List");
        revpricelistmnit.setActionCommand("Departmental Charge Sheet ..");
        revpricelistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revpricelistmnitActionPerformed(evt);
            }
        });
        listsmn.add(revpricelistmnit);

        packagepricelistmnit.setText("Packages Price List");
        packagepricelistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packagepricelistmnitActionPerformed(evt);
            }
        });
        listsmn.add(packagepricelistmnit);

        reportsmn.add(listsmn);
        reportsmn.add(jSeparator841);

        claimsmn.setText("Claim Reports");

        dispatchschmn.setText("Claim Dispatch Schedules");
        dispatchschmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchschmnActionPerformed(evt);
            }
        });

        dispatchmnit.setText("Dispatch Schedules");
        dispatchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchmnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(dispatchmnit);

        displistmnit.setText("Dispatch Listing");
        displistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displistmnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(displistmnit);

        dispperscmnit.setText("Dispatch Per Scheme");
        dispperscmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispperscmnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(dispperscmnit);

        dispperdebtmnit.setText("Dispatch Per Debtor");
        dispperdebtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispperdebtmnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(dispperdebtmnit);

        nhifdispmnit.setText("NHIF Dispatch");
        nhifdispmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhifdispmnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(nhifdispmnit);

        DispatchSummnit.setText("Dispatch Summary");
        DispatchSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchSummnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(DispatchSummnit);

        unpaidDispInvmnit.setText("Skipped Invoices");
        unpaidDispInvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unpaidDispInvmnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(unpaidDispInvmnit);

        dispatchperpayersummnit.setText("Dispatch Per Payer Summ");
        dispatchperpayersummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchperpayersummnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(dispatchperpayersummnit);

        Dispdelnotemnit.setText("Dispatch Delivery Note");
        Dispdelnotemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispdelnotemnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(Dispdelnotemnit);

        nhif18mnit.setText("Nhif 18 Dispatch");
        nhif18mnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhif18mnitActionPerformed(evt);
            }
        });
        dispatchschmn.add(nhif18mnit);

        claimsmn.add(dispatchschmn);

        unapprovedinvmn.setText("Undispatched Claims");

        Perschememnit.setText("Per Scheme");
        Perschememnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerschememnitActionPerformed(evt);
            }
        });
        unapprovedinvmn.add(Perschememnit);

        Perdebtormnit.setText("Per Debtor");
        Perdebtormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerdebtormnitActionPerformed(evt);
            }
        });
        unapprovedinvmn.add(Perdebtormnit);

        Summarymnit.setText("Summary");
        Summarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SummarymnitActionPerformed(evt);
            }
        });
        unapprovedinvmn.add(Summarymnit);

        claimsmn.add(unapprovedinvmn);

        approvedinvmn.setText("Dispatched Claims");

        Schememnit.setText("Per Scheme");
        Schememnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SchememnitActionPerformed(evt);
            }
        });
        approvedinvmn.add(Schememnit);

        debtormnit.setText("Per Debtor");
        debtormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtormnitActionPerformed(evt);
            }
        });
        approvedinvmn.add(debtormnit);

        claimsmn.add(approvedinvmn);

        dispconf.setText("Confirmed Dispatches");

        confdispsummnit.setText("Confirmed Disp. Summary");
        confdispsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confdispsummnitActionPerformed(evt);
            }
        });
        dispconf.add(confdispsummnit);

        confdispperscmnit.setText("Confirmed Disp. Per Scheme");
        confdispperscmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confdispperscmnitActionPerformed(evt);
            }
        });
        dispconf.add(confdispperscmnit);

        dispconfperpayermnit.setText("Dispatch Conf. By Payer");
        dispconfperpayermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispconfperpayermnitActionPerformed(evt);
            }
        });
        dispconf.add(dispconfperpayermnit);

        claimsmn.add(dispconf);

        dormaccmnit.setText("Dormant Accounts");
        dormaccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dormaccmnitActionPerformed(evt);
            }
        });
        claimsmn.add(dormaccmnit);

        debtcollsummnit.setText("Debt Collector Summary");
        debtcollsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtcollsummnitActionPerformed(evt);
            }
        });
        claimsmn.add(debtcollsummnit);

        ScmsalesSummnit.setText("Scheme Sales Summary");
        ScmsalesSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScmsalesSummnitActionPerformed(evt);
            }
        });
        claimsmn.add(ScmsalesSummnit);

        retuenedclaims.setText("Returned Claims");

        rtclaimssummnit.setText("Returned Claims Summary");
        rtclaimssummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtclaimssummnitActionPerformed(evt);
            }
        });
        retuenedclaims.add(rtclaimssummnit);

        rtclaimsbyscmnit.setText("Returned Calim By Scheme");
        rtclaimsbyscmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtclaimsbyscmnitActionPerformed(evt);
            }
        });
        retuenedclaims.add(rtclaimsbyscmnit);

        resubmissionbyschmnit.setText("Resurbmission By Scheme");
        resubmissionbyschmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resubmissionbyschmnitActionPerformed(evt);
            }
        });
        retuenedclaims.add(resubmissionbyschmnit);

        claimsmn.add(retuenedclaims);

        reportsmn.add(claimsmn);

        allocationmn.setText("Allocation  Reports");

        allocsummnit.setText("Allocation Summary");
        allocsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocsummnitActionPerformed(evt);
            }
        });
        allocationmn.add(allocsummnit);

        dispatchedmn.setText("Dispatched Invoices");
        dispatchedmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchedmnActionPerformed(evt);
            }
        });
        allocationmn.add(dispatchedmn);

        debtallocsumnit.setText("Debtors Allocation Summary");
        debtallocsumnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtallocsumnitActionPerformed(evt);
            }
        });
        allocationmn.add(debtallocsumnit);

        allocationrepmnit.setText("Scheme Allocation Report");
        allocationrepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocationrepmnitActionPerformed(evt);
            }
        });
        allocationmn.add(allocationrepmnit);

        scmallocsummnit.setText("Receipt Alloc Summary");
        scmallocsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scmallocsummnitActionPerformed(evt);
            }
        });
        allocationmn.add(scmallocsummnit);

        debtrectallocmnit.setText("Debtors Receipts Alloc Summary");
        debtrectallocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debtrectallocmnitActionPerformed(evt);
            }
        });
        allocationmn.add(debtrectallocmnit);

        invwithbalmnit.setText("Invoices With Balances");
        invwithbalmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invwithbalmnitActionPerformed(evt);
            }
        });
        allocationmn.add(invwithbalmnit);

        allocsummperdebtmnit.setText("Allocation Summary Per Debtor");
        allocsummperdebtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocsummperdebtmnitActionPerformed(evt);
            }
        });
        allocationmn.add(allocsummperdebtmnit);

        allocsumnit.setText("Allocation Detailed");
        allocsumnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocsumnitActionPerformed(evt);
            }
        });
        allocationmn.add(allocsumnit);

        allocchqmnit.setText("Allocation By Cheque");
        allocchqmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocchqmnitActionPerformed(evt);
            }
        });
        allocationmn.add(allocchqmnit);

        creditsbypayermnit.setText("Credits By Payer");
        creditsbypayermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditsbypayermnitActionPerformed(evt);
            }
        });
        allocationmn.add(creditsbypayermnit);

        Payerallocdetmnit.setText("Payer Alloc. Detailed");
        Payerallocdetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayerallocdetmnitActionPerformed(evt);
            }
        });
        allocationmn.add(Payerallocdetmnit);

        creditsSummnit.setText("Credits Summary");
        creditsSummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditsSummnitActionPerformed(evt);
            }
        });
        allocationmn.add(creditsSummnit);

        unallocpymmnit.setText("Unallocated Cheques");
        unallocpymmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unallocpymmnitActionPerformed(evt);
            }
        });
        allocationmn.add(unallocpymmnit);

        reportsmn.add(allocationmn);

        provisionsmn.setText("Provisions");

        Provisionssummnit.setText("Provisions Summary");
        Provisionssummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProvisionssummnitActionPerformed(evt);
            }
        });
        provisionsmn.add(Provisionssummnit);

        provperdebtmnit.setText("Provision Per Debtor");
        provperdebtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provperdebtmnitActionPerformed(evt);
            }
        });
        provisionsmn.add(provperdebtmnit);

        provperschmnit.setText("Provision Per Scheme");
        provperschmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provperschmnitActionPerformed(evt);
            }
        });
        provisionsmn.add(provperschmnit);

        provperdocmnit.setText("Provision By Doctor");
        provperdocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provperdocmnitActionPerformed(evt);
            }
        });
        provisionsmn.add(provperdocmnit);

        docprovsummnit.setText("Doctors Provisions Summary");
        docprovsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docprovsummnitActionPerformed(evt);
            }
        });
        provisionsmn.add(docprovsummnit);

        provdocscmnit.setText("Scheme And Doc ");
        provdocscmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provdocscmnitActionPerformed(evt);
            }
        });
        provisionsmn.add(provdocscmnit);

        reportsmn.add(provisionsmn);

        wrt.setText("Writeoffs");

        wrtperscmnit.setText("WriteOff Per Scheme");
        wrtperscmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wrtperscmnitActionPerformed(evt);
            }
        });
        wrt.add(wrtperscmnit);

        wrtsummnit.setText("Writeoff Summary");
        wrtsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wrtsummnitActionPerformed(evt);
            }
        });
        wrt.add(wrtsummnit);

        reportsmn.add(wrt);
        reportsmn.add(jSeparator831);

        PatientRecordsmn.setText("EMR Reporting");

        emrDashBoardmnit.setText("EMR Dashboard");
        emrDashBoardmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emrDashBoardmnitActionPerformed(evt);
            }
        });
        PatientRecordsmn.add(emrDashBoardmnit);

        diagnosist.setText("Diagnosis");
        diagnosist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosistActionPerformed(evt);
            }
        });

        Ipmobiditymatalitymnit.setText("IN Patient Mortality");
        Ipmobiditymatalitymnit.setActionCommand("IN Patient Morbidity & Mortality");
        Ipmobiditymatalitymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IpmobiditymatalitymnitActionPerformed(evt);
            }
        });
        diagnosist.add(Ipmobiditymatalitymnit);

        patientdiagmnit.setText("Patient Diagnosis");
        patientdiagmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientdiagmnitActionPerformed(evt);
            }
        });
        diagnosist.add(patientdiagmnit);

        Diagnosissummnit.setText("Diagnosis Summary");
        Diagnosissummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosissummnitActionPerformed(evt);
            }
        });
        diagnosist.add(Diagnosissummnit);

        DiagnosisSumPerSexmnit.setText("Diagnosis Summary By Gender");
        DiagnosisSumPerSexmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosisSumPerSexmnitActionPerformed(evt);
            }
        });
        diagnosist.add(DiagnosisSumPerSexmnit);

        ipMobidityMotaritymnit.setText("Diagnosis By Age");
        ipMobidityMotaritymnit.setActionCommand("IP Morbidity and Mortality Summary");
        ipMobidityMotaritymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipMobidityMotaritymnitActionPerformed(evt);
            }
        });
        diagnosist.add(ipMobidityMotaritymnit);

        Diagnosisanalysismnit.setText("Diagnosis Analysis");
        Diagnosisanalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosisanalysismnitActionPerformed(evt);
            }
        });
        diagnosist.add(Diagnosisanalysismnit);

        MonthlyDiagAnalysismnit.setText("Monthly Diagnosis Analysis");
        MonthlyDiagAnalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyDiagAnalysismnitActionPerformed(evt);
            }
        });
        diagnosist.add(MonthlyDiagAnalysismnit);

        Diagnosisbydocsummnit.setText("Diagnosis By Doc Summary");
        Diagnosisbydocsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosisbydocsummnitActionPerformed(evt);
            }
        });
        diagnosist.add(Diagnosisbydocsummnit);

        diagbydocsmnit.setText("Diagnosis By Doctor");
        diagbydocsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagbydocsmnitActionPerformed(evt);
            }
        });
        diagnosist.add(diagbydocsmnit);

        diagnosisperdiesesemnit.setText("Diagnosis Per Disease");
        diagnosisperdiesesemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosisperdiesesemnitActionPerformed(evt);
            }
        });
        diagnosist.add(diagnosisperdiesesemnit);

        theatrecasesmnit.setText("Theatre Cases");
        theatrecasesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theatrecasesmnitActionPerformed(evt);
            }
        });
        diagnosist.add(theatrecasesmnit);

        conditionfoundmnit.setText("Conditions Found in Newborn");
        conditionfoundmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conditionfoundmnitActionPerformed(evt);
            }
        });
        diagnosist.add(conditionfoundmnit);

        PatientRecordsmn.add(diagnosist);

        maternitymn.setText("Maternity Reports");

        newbornsmnit.setText("Births");
        newbornsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbornsmnitActionPerformed(evt);
            }
        });
        maternitymn.add(newbornsmnit);

        midwivesmnit.setText("Midwives Returns");
        midwivesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midwivesmnitActionPerformed(evt);
            }
        });
        maternitymn.add(midwivesmnit);

        monthlydeliveryretmnit.setText("Monthly Deliveries Returns");
        monthlydeliveryretmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlydeliveryretmnitActionPerformed(evt);
            }
        });
        maternitymn.add(monthlydeliveryretmnit);

        BirthWeightmnit.setText("Birth Analysis Acc. Weight");
        BirthWeightmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirthWeightmnitActionPerformed(evt);
            }
        });
        maternitymn.add(BirthWeightmnit);

        safedeliveriesmnit.setText("Maternity/Safe Deliveries");
        safedeliveriesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                safedeliveriesmnitActionPerformed(evt);
            }
        });
        maternitymn.add(safedeliveriesmnit);

        PatientRecordsmn.add(maternitymn);

        Labreportsmn.setText("Laboratory Results");

        labResultsListingmnit.setText("Results Listing");
        labResultsListingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labResultsListingmnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(labResultsListingmnit);

        labresultsindmnit.setText("Laboratory Results");
        labresultsindmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labresultsindmnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(labresultsindmnit);

        laborresultsummnit.setText("Lab Results Summary");
        laborresultsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laborresultsummnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(laborresultsummnit);

        labsspecimensmnit.setText("Lab Tests");
        labsspecimensmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labsspecimensmnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(labsspecimensmnit);

        patlabresusmnit.setText("Patient Lab Results");
        patlabresusmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patlabresusmnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(patlabresusmnit);

        reqbydocmnit.setText("Lab Request By Doc");
        reqbydocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqbydocmnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(reqbydocmnit);

        laboresultsmnit.setText("Lab WorkLoad");
        laboresultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laboresultsmnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(laboresultsmnit);

        laboworktimemnit.setText("Lab Work Time");
        laboworktimemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laboworktimemnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(laboworktimemnit);

        labmonthlyanalysismnit.setText("Laboratory Monthly Analysis");
        labmonthlyanalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labmonthlyanalysismnitActionPerformed(evt);
            }
        });
        Labreportsmn.add(labmonthlyanalysismnit);

        PatientRecordsmn.add(Labreportsmn);

        xrayrep.setText("Xray");

        xraylistmnit.setText("Xray List");
        xraylistmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xraylistmnitActionPerformed(evt);
            }
        });
        xrayrep.add(xraylistmnit);

        XrayResultsmnit.setText("X -Ray Results");
        XrayResultsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XrayResultsmnitActionPerformed(evt);
            }
        });
        xrayrep.add(XrayResultsmnit);

        xrayperfmnit.setText("Xray Perf.");
        xrayperfmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xrayperfmnitActionPerformed(evt);
            }
        });
        xrayrep.add(xrayperfmnit);

        xraymonthlyanalysismnit.setText("Xray Monthly analysis");
        xraymonthlyanalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xraymonthlyanalysismnitActionPerformed(evt);
            }
        });
        xrayrep.add(xraymonthlyanalysismnit);

        PatientRecordsmn.add(xrayrep);

        dental.setText("Dental");

        dentregistermnit.setText("Register");
        dentregistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dentregistermnitActionPerformed(evt);
            }
        });
        dental.add(dentregistermnit);

        PatientRecordsmn.add(dental);

        eyemn.setText("Eye Clinic Reports");

        eyeClinicRegistermnit.setText("Eye Clinic Register");
        eyeClinicRegistermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eyeClinicRegistermnitActionPerformed(evt);
            }
        });
        eyemn.add(eyeClinicRegistermnit);

        eyeUnitDetailedReportmnit.setText("Eye Services Detailed Report");
        eyeUnitDetailedReportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eyeUnitDetailedReportmnitActionPerformed(evt);
            }
        });
        eyemn.add(eyeUnitDetailedReportmnit);

        eyeServicesSummarymnit.setText("Eye Unit Summary Report");
        eyeServicesSummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eyeServicesSummarymnitActionPerformed(evt);
            }
        });
        eyemn.add(eyeServicesSummarymnit);

        PatientRecordsmn.add(eyemn);

        clinicsbookings.setText("Bookings");

        Bookingsmnit.setText("Clinics & Appointments");
        Bookingsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookingsmnitActionPerformed(evt);
            }
        });
        clinicsbookings.add(Bookingsmnit);

        ConfirmedBookingsmnit.setText("Confirmed Clinics & Appointments");
        ConfirmedBookingsmnit.setActionCommand("Booking Per Clinic");
        ConfirmedBookingsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmedBookingsmnitActionPerformed(evt);
            }
        });
        clinicsbookings.add(ConfirmedBookingsmnit);

        PatientRecordsmn.add(clinicsbookings);

        deathsmnit.setText("Deaths");
        deathsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deathsmnitActionPerformed(evt);
            }
        });
        PatientRecordsmn.add(deathsmnit);

        sickoffsmnit.setText("Sick Offs");
        sickoffsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sickoffsmnitActionPerformed(evt);
            }
        });
        PatientRecordsmn.add(sickoffsmnit);

        fprepmn.setText("FP Reports");
        fprepmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fprepmnActionPerformed(evt);
            }
        });

        fpsummarymnit.setText("FP Summary Report");
        fpsummarymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpsummarymnitActionPerformed(evt);
            }
        });
        fprepmn.add(fpsummarymnit);

        fpercategorymnit.setText("FP Per Category Summary");
        fpercategorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpercategorymnitActionPerformed(evt);
            }
        });
        fprepmn.add(fpercategorymnit);

        fpclientpertypemnit.setText("Clients by Type");
        fpclientpertypemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpclientpertypemnitActionPerformed(evt);
            }
        });
        fprepmn.add(fpclientpertypemnit);

        fpclientpermnit.setText("Contraceptives Dispensed");
        fpclientpermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpclientpermnitActionPerformed(evt);
            }
        });
        fprepmn.add(fpclientpermnit);

        contraceptmnit.setText("Clients by Sex");
        contraceptmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contraceptmnitActionPerformed(evt);
            }
        });
        fprepmn.add(contraceptmnit);

        fpcontrapercategorymnit.setText("Contraceptives Per Category");
        fpcontrapercategorymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpcontrapercategorymnitActionPerformed(evt);
            }
        });
        fprepmn.add(fpcontrapercategorymnit);

        PatientRecordsmn.add(fprepmn);

        gbvreportmnit.setText("GBV Reports");

        gbvmonthmnit.setText("GBV Monthly Report");
        gbvmonthmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gbvmonthmnitActionPerformed(evt);
            }
        });
        gbvreportmnit.add(gbvmonthmnit);

        survivorprofmnit.setText("Survivor Profile");
        survivorprofmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                survivorprofmnitActionPerformed(evt);
            }
        });
        gbvreportmnit.add(survivorprofmnit);

        pepetratormnit.setText("Pepetrator Profile");
        pepetratormnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pepetratormnitActionPerformed(evt);
            }
        });
        gbvreportmnit.add(pepetratormnit);

        PatientRecordsmn.add(gbvreportmnit);
        PatientRecordsmn.add(jSeparator104);

        tbScreeningReportmnit.setText("TB Screening Register");
        tbScreeningReportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbScreeningReportmnitActionPerformed(evt);
            }
        });
        PatientRecordsmn.add(tbScreeningReportmnit);

        tbScreeningProceduresmnit.setText("TB Screening procedures Report");
        tbScreeningProceduresmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbScreeningProceduresmnitActionPerformed(evt);
            }
        });
        PatientRecordsmn.add(tbScreeningProceduresmnit);

        reportsmn.add(PatientRecordsmn);

        managementmnit.setMnemonic('m');
        managementmnit.setText("Support Activities");

        Deprecmnit.setText("Currency");
        Deprecmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeprecmnitActionPerformed(evt);
            }
        });
        managementmnit.add(Deprecmnit);

        Deprecatesmnit.setText("Exchage Rates");
        Deprecatesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeprecatesmnitActionPerformed(evt);
            }
        });
        managementmnit.add(Deprecatesmnit);

        AssetAlmnit.setText("Exceptional Items");
        AssetAlmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssetAlmnitActionPerformed(evt);
            }
        });
        managementmnit.add(AssetAlmnit);

        asrepmnit.setText("Format Setup");
        asrepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asrepmnitActionPerformed(evt);
            }
        });
        managementmnit.add(asrepmnit);

        astregmnit.setText("Group Statistics");
        astregmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                astregmnitActionPerformed(evt);
            }
        });
        managementmnit.add(astregmnit);

        aslocmnit.setText("Tax Claim");
        aslocmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aslocmnitActionPerformed(evt);
            }
        });
        managementmnit.add(aslocmnit);

        insuncemnit.setText("Amend Rates");
        insuncemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuncemnitActionPerformed(evt);
            }
        });
        managementmnit.add(insuncemnit);
        managementmnit.add(jSeparator32);

        BedOccmnit.setText("Bed Occupancy Registry");
        BedOccmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BedOccmnitActionPerformed(evt);
            }
        });
        managementmnit.add(BedOccmnit);

        Revmnit.setText("Revenue Register");
        Revmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RevmnitActionPerformed(evt);
            }
        });
        managementmnit.add(Revmnit);

        Aiemnit.setText("Authority To Incure Expediture");
        Aiemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AiemnitActionPerformed(evt);
            }
        });
        managementmnit.add(Aiemnit);

        AieRepmnit.setText("AIE Report");
        AieRepmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AieRepmnitActionPerformed(evt);
            }
        });
        managementmnit.add(AieRepmnit);

        reportsmn.add(managementmnit);

        useraccountsmn.setText("User Accounts");
        useraccountsmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useraccountsmnActionPerformed(evt);
            }
        });
        reportsmn.add(useraccountsmn);
        reportsmn.add(jSeparator101);

        gisReportermnit.setText("Funsoft HealthGIS Reporter");
        gisReportermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gisReportermnitActionPerformed(evt);
            }
        });
        reportsmn.add(gisReportermnit);

        jMenuBar1.add(reportsmn);

        viewsmn.setMnemonic('V');
        viewsmn.setText("Views");
        viewsmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewsmnActionPerformed(evt);
            }
        });

        namesearchmnit.setText("Name Search");
        namesearchmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesearchmnitActionPerformed(evt);
            }
        });
        viewsmn.add(namesearchmnit);

        departmentmnit.setText("Departmental");
        departmentmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentmnitActionPerformed(evt);
            }
        });
        viewsmn.add(departmentmnit);

        patstmtsmnit.setText("Patient Statement View");
        patstmtsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patstmtsmnitActionPerformed(evt);
            }
        });
        viewsmn.add(patstmtsmnit);

        patdocstmtmnit.setText("Patient Doctors Statement");
        patdocstmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patdocstmtmnitActionPerformed(evt);
            }
        });
        viewsmn.add(patdocstmtmnit);

        changepaymodesmnit.setText("Change Patient Paymode");
        changepaymodesmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepaymodesmnitActionPerformed(evt);
            }
        });
        viewsmn.add(changepaymodesmnit);

        changeiplimitmnit.setText("Change IpLimit");
        changeiplimitmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeiplimitmnitActionPerformed(evt);
            }
        });
        viewsmn.add(changeiplimitmnit);

        patstmtsummnit.setText("Patient Statement Summary");
        patstmtsummnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patstmtsummnitActionPerformed(evt);
            }
        });
        viewsmn.add(patstmtsummnit);

        patmergemnit.setText("Merge Patient No");
        patmergemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patmergemnitActionPerformed(evt);
            }
        });
        viewsmn.add(patmergemnit);

        VisitIdmnit.setText("Merge Visit Id");
        VisitIdmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisitIdmnitActionPerformed(evt);
            }
        });
        viewsmn.add(VisitIdmnit);
        viewsmn.add(jSeparator88);

        invammendmnit.setText("Amend Invoice");
        invammendmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invammendmnitActionPerformed(evt);
            }
        });
        viewsmn.add(invammendmnit);

        merginvmnit.setText("Merge Invoices");
        merginvmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                merginvmnitActionPerformed(evt);
            }
        });
        viewsmn.add(merginvmnit);
        viewsmn.add(jSeparator89);

        schmdetmnit.setText("Scheme Details");
        schmdetmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schmdetmnitActionPerformed(evt);
            }
        });
        viewsmn.add(schmdetmnit);
        viewsmn.add(jSeparator881);

        stmtmnit.setText("Debtors Stmt");
        stmtmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stmtmnitActionPerformed(evt);
            }
        });
        viewsmn.add(stmtmnit);

        creditorsView.setText("Creditors Statement View");
        creditorsView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorsViewActionPerformed(evt);
            }
        });
        viewsmn.add(creditorsView);

        creditorssummarybtn.setText("Creditors Statements");
        creditorssummarybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditorssummarybtnActionPerformed(evt);
            }
        });
        viewsmn.add(creditorssummarybtn);

        servicesstmntmnit.setText("Services Sales Statements");
        servicesstmntmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesstmntmnitActionPerformed(evt);
            }
        });
        viewsmn.add(servicesstmntmnit);

        patbillmergemnit.setText("Merge Patient Bill");
        patbillmergemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patbillmergemnitActionPerformed(evt);
            }
        });
        viewsmn.add(patbillmergemnit);

        IpAnalysismnit.setText("Ip Bills Status");
        IpAnalysismnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IpAnalysismnitActionPerformed(evt);
            }
        });
        viewsmn.add(IpAnalysismnit);

        transauditingmnit.setText("Transactions Auditing");
        transauditingmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transauditingmnitActionPerformed(evt);
            }
        });
        viewsmn.add(transauditingmnit);

        insertNotrackmnit.setText("Insert No Track");
        insertNotrackmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertNotrackmnitActionPerformed(evt);
            }
        });
        viewsmn.add(insertNotrackmnit);

        changeInvPayermnit.setText("Change Invoice Payer");
        changeInvPayermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeInvPayermnitActionPerformed(evt);
            }
        });
        viewsmn.add(changeInvPayermnit);

        jMenuItem3.setText("Imprest Reporter");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        viewsmn.add(jMenuItem3);

        activeReportsmnit.setText("Ledger Reports");
        activeReportsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeReportsmnitActionPerformed(evt);
            }
        });
        viewsmn.add(activeReportsmnit);

        postOpeningBalancesPatientsmnit.setText("Post Patient Opening Balances");
        postOpeningBalancesPatientsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postOpeningBalancesPatientsmnitActionPerformed(evt);
            }
        });
        viewsmn.add(postOpeningBalancesPatientsmnit);

        cashSalesReportmnit.setText("Cash Sales Report");
        cashSalesReportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashSalesReportmnitActionPerformed(evt);
            }
        });
        viewsmn.add(cashSalesReportmnit);

        creditSalesReportmnit.setText("Credit Sales Report");
        creditSalesReportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditSalesReportmnitActionPerformed(evt);
            }
        });
        viewsmn.add(creditSalesReportmnit);

        useractivities.setText("User Activities");
        useractivities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useractivitiesActionPerformed(evt);
            }
        });
        viewsmn.add(useractivities);
        viewsmn.add(jSeparator108);

        approvedVouchersmnit.setText("Approved Vouchers");
        approvedVouchersmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvedVouchersmnitActionPerformed(evt);
            }
        });
        viewsmn.add(approvedVouchersmnit);

        rebatesCreditSalesReportmnit.setText("Scheme Credit Sales Report");
        rebatesCreditSalesReportmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rebatesCreditSalesReportmnitActionPerformed(evt);
            }
        });
        viewsmn.add(rebatesCreditSalesReportmnit);

        creditSalesDetailedmnit.setText("Credit Sales Detailed Report");
        creditSalesDetailedmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditSalesDetailedmnitActionPerformed(evt);
            }
        });
        viewsmn.add(creditSalesDetailedmnit);

        generatedVouchersitemmnit.setText("Generated Vouchers");
        generatedVouchersitemmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatedVouchersitemmnitActionPerformed(evt);
            }
        });
        viewsmn.add(generatedVouchersitemmnit);

        analyseMaternityBillsmnit.setText("Analyse Maternity Bills");
        analyseMaternityBillsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyseMaternityBillsmnitActionPerformed(evt);
            }
        });
        viewsmn.add(analyseMaternityBillsmnit);
        viewsmn.add(jSeparator107);

        urlRegistrationmnit.setText("URL Registration");
        urlRegistrationmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlRegistrationmnitActionPerformed(evt);
            }
        });
        viewsmn.add(urlRegistrationmnit);

        jMenuBar1.add(viewsmn);

        systemn.setMnemonic('t');
        systemn.setText("System");

        stockmnit1.setText("Stock/Inventory");
        stockmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockmnit1ActionPerformed(evt);
            }
        });
        systemn.add(stockmnit1);

        accountsmnit1.setText("Accounts");
        accountsmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsmnit1ActionPerformed(evt);
            }
        });
        systemn.add(accountsmnit1);

        assetmgtmnit1.setText("Asset Management");
        assetmgtmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetmgtmnit1ActionPerformed(evt);
            }
        });
        systemn.add(assetmgtmnit1);

        reportsmnit1.setText("Reports & Utilities");
        reportsmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsmnit1ActionPerformed(evt);
            }
        });
        systemn.add(reportsmnit1);

        fahrmnit.setText("HR/Payroll");
        fahrmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fahrmnitActionPerformed(evt);
            }
        });
        systemn.add(fahrmnit);

        docsmnit1.setText("Help & Docs");
        docsmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docsmnit1ActionPerformed(evt);
            }
        });
        systemn.add(docsmnit1);
        systemn.add(jSeparator2);

        lnfmn.setText("Look & Feel");

        buttonGroup2.add(swinglnfmnit1);
        swinglnfmnit1.setText("Metal");
        swinglnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swinglnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(swinglnfmnit1);

        nimbuzlnfMnits.setText("Nimbuz Look N Feel");
        nimbuzlnfMnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimbuzlnfMnitsActionPerformed(evt);
            }
        });
        lnfmn.add(nimbuzlnfMnits);

        buttonGroup2.add(winlnfmnit1);
        winlnfmnit1.setText("Windows");
        winlnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(winlnfmnit1);

        buttonGroup2.add(motiflnfmnit1);
        motiflnfmnit1.setText("Motif");
        motiflnfmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motiflnfmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(motiflnfmnit1);

        buttonGroup2.add(macmnit1);
        macmnit1.setText("Mac OS");
        macmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macmnit1ActionPerformed(evt);
            }
        });
        lnfmn.add(macmnit1);

        skinmn.setText("Themes");
        skinmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skinmnActionPerformed(evt);
            }
        });

        buttonGroup3.add(xpmnit1);
        xpmnit1.setText("XP Luna");
        xpmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xpmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(xpmnit1);

        buttonGroup3.add(macos1mnit1);
        macos1mnit1.setText("Macintosh");
        macos1mnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macos1mnit1ActionPerformed(evt);
            }
        });
        skinmn.add(macos1mnit1);

        buttonGroup3.add(whiltmnit1);
        whiltmnit1.setText("Whistler");
        whiltmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiltmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(whiltmnit1);

        buttonGroup3.add(modernmnit1);
        modernmnit1.setText("Modern");
        modernmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modernmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(modernmnit1);

        buttonGroup3.add(aquamnit1);
        aquamnit1.setText("Aqua");
        aquamnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquamnit1ActionPerformed(evt);
            }
        });
        skinmn.add(aquamnit1);

        buttonGroup3.add(beosmnit1);
        beosmnit1.setText("BEOS");
        beosmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beosmnit1ActionPerformed(evt);
            }
        });
        skinmn.add(beosmnit1);

        buttonGroup3.add(bbjmnit11);
        bbjmnit11.setText("BBJ");
        bbjmnit11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbjmnit11ActionPerformed(evt);
            }
        });
        skinmn.add(bbjmnit11);

        lnfmn.add(skinmn);

        xpskinmn.setText("XP Skin");

        officexpmn.setText("XP Office theme");
        officexpmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                officexpmnActionPerformed(evt);
            }
        });
        xpskinmn.add(officexpmn);

        office2003mn.setText("Office 2K3");
        office2003mn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                office2003mnActionPerformed(evt);
            }
        });
        xpskinmn.add(office2003mn);

        studio2k5mn.setText("Studio 2K5");
        studio2k5mn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studio2k5mnActionPerformed(evt);
            }
        });
        xpskinmn.add(studio2k5mn);

        lnfmn.add(xpskinmn);

        winlnfnewmnits.setText("Windows Look N Feel");
        winlnfnewmnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winlnfnewmnitsActionPerformed(evt);
            }
        });
        lnfmn.add(winlnfnewmnits);

        systemn.add(lnfmn);

        jMenuBar1.add(systemn);

        utilitymn.setMnemonic('U');
        utilitymn.setText("Utility");
        utilitymn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitymnActionPerformed(evt);
            }
        });

        cpactdatamnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        cpactdatamnit.setText("Compact Data");
        cpactdatamnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpactdatamnitActionPerformed(evt);
            }
        });
        utilitymn.add(cpactdatamnit);

        validatamnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        validatamnit.setText("Validate Data");
        validatamnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validatamnitActionPerformed(evt);
            }
        });
        utilitymn.add(validatamnit);

        bkupmnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        bkupmnit.setText("Back Up");
        bkupmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkupmnitActionPerformed(evt);
            }
        });
        utilitymn.add(bkupmnit);

        optimdbmnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        optimdbmnit.setText("Database Optimization");
        optimdbmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optimdbmnitActionPerformed(evt);
            }
        });
        utilitymn.add(optimdbmnit);

        FinancialPeriodmn.setText("Finacial Period Setup");

        monthlyroutinemnit.setText("Set Financial Period");
        monthlyroutinemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyroutinemnitActionPerformed(evt);
            }
        });
        FinancialPeriodmn.add(monthlyroutinemnit);

        setaccperiodmnit.setText("Set Accounting Period");
        setaccperiodmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setaccperiodmnitActionPerformed(evt);
            }
        });
        FinancialPeriodmn.add(setaccperiodmnit);

        setaccperiodmnit1.setText("Close Accounting Period");
        setaccperiodmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setaccperiodmnit1ActionPerformed(evt);
            }
        });
        FinancialPeriodmn.add(setaccperiodmnit1);

        openperiodmnit2.setText("Open Closed Period");
        openperiodmnit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openperiodmnit2ActionPerformed(evt);
            }
        });
        FinancialPeriodmn.add(openperiodmnit2);

        yearlyrotinemnit.setText("Archive Financial Period");
        yearlyrotinemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyrotinemnitActionPerformed(evt);
            }
        });
        FinancialPeriodmn.add(yearlyrotinemnit);

        utilitymn.add(FinancialPeriodmn);
        utilitymn.add(jSeparator10);

        chgpasswdmnit1.setText("Change Password");
        chgpasswdmnit1.setToolTipText("Click to change your existing password.");
        chgpasswdmnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chgpasswdmnit1ActionPerformed(evt);
            }
        });
        utilitymn.add(chgpasswdmnit1);

        changeUserPasswordmnit.setText("Change Other User Password");
        changeUserPasswordmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeUserPasswordmnitActionPerformed(evt);
            }
        });
        utilitymn.add(changeUserPasswordmnit);

        updatedomainsmnit.setText("Update Domains");
        updatedomainsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedomainsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(updatedomainsmnit);

        restoredatamnit.setText("Restore Data");
        utilitymn.add(restoredatamnit);

        Yearlyhlpsetsmnit.setText("Yearly Depreciation");
        Yearlyhlpsetsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearlyhlpsetsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(Yearlyhlpsetsmnit);

        Approvemnit.setText("Approve Depreciation");
        Approvemnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApprovemnitActionPerformed(evt);
            }
        });
        utilitymn.add(Approvemnit);

        mbVerifymnit.setText("Verify Member Details");
        mbVerifymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbVerifymnitActionPerformed(evt);
            }
        });
        utilitymn.add(mbVerifymnit);

        receiptPrefsmnit.setText("Receipt Preferences");
        receiptPrefsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptPrefsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(receiptPrefsmnit);

        docsdir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        docsdir.setText("Set Documents Directory");
        docsdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docsdirActionPerformed(evt);
            }
        });
        utilitymn.add(docsdir);
        utilitymn.add(jSeparator1);

        changeBackgoundImagemnit1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        changeBackgoundImagemnit1.setText("Background Image");
        changeBackgoundImagemnit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBackgoundImagemnit1ActionPerformed(evt);
            }
        });
        utilitymn.add(changeBackgoundImagemnit1);

        writeofflimitsmnit.setText("Writeoff Limits");
        writeofflimitsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeofflimitsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(writeofflimitsmnit);

        textPrintermnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        textPrintermnit.setText("Choose default text printer");
        textPrintermnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPrintermnitActionPerformed(evt);
            }
        });
        utilitymn.add(textPrintermnit);

        receiptPrinterMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        receiptPrinterMnit.setText("Set Receipt Printer");
        receiptPrinterMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptPrinterMnitActionPerformed(evt);
            }
        });
        utilitymn.add(receiptPrinterMnit);
        utilitymn.add(jSeparator90);

        logonwatermarkmnit.setText("Logo/Watermark");
        logonwatermarkmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logonwatermarkmnitActionPerformed(evt);
            }
        });
        utilitymn.add(logonwatermarkmnit);

        localeSettingsMnit.setText("Locale Settings");
        localeSettingsMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localeSettingsMnitActionPerformed(evt);
            }
        });
        utilitymn.add(localeSettingsMnit);
        utilitymn.add(jSeparator92);

        readSmartCardMnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        readSmartCardMnit.setText("Read Smart Card");
        readSmartCardMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readSmartCardMnitActionPerformed(evt);
            }
        });
        utilitymn.add(readSmartCardMnit);
        utilitymn.add(jSeparator91);

        setAccPeriodsmnit.setText("Open/Close Acc. Periods ...");
        setAccPeriodsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAccPeriodsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(setAccPeriodsmnit);
        utilitymn.add(jSeparator93);

        reportDesignerMnit.setText("Report Designer");
        reportDesignerMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportDesignerMnitActionPerformed(evt);
            }
        });
        utilitymn.add(reportDesignerMnit);

        messageSnoozePeriodmnit.setText("Set message snooze period");
        messageSnoozePeriodmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageSnoozePeriodmnitActionPerformed(evt);
            }
        });
        utilitymn.add(messageSnoozePeriodmnit);

        mesageRecyclePeriodmnit.setText("Set message recycle delay");
        mesageRecyclePeriodmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesageRecyclePeriodmnitActionPerformed(evt);
            }
        });
        utilitymn.add(mesageRecyclePeriodmnit);

        smsFetchSnoozePeriodmnit.setText("Set SMS fetch snooze period");
        smsFetchSnoozePeriodmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsFetchSnoozePeriodmnitActionPerformed(evt);
            }
        });
        utilitymn.add(smsFetchSnoozePeriodmnit);

        messageCountDelaymnit.setText("Set message count before archiving");
        messageCountDelaymnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageCountDelaymnitActionPerformed(evt);
            }
        });
        utilitymn.add(messageCountDelaymnit);

        chartDefinitionMnit.setText("Chart Definition Tool");
        chartDefinitionMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartDefinitionMnitActionPerformed(evt);
            }
        });
        utilitymn.add(chartDefinitionMnit);

        enableExemptionsmnit.setSelected(true);
        enableExemptionsmnit.setText("Enable/Disable Exemptions");
        enableExemptionsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableExemptionsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(enableExemptionsmnit);

        salesPrefsmnit.setText("Sales Preferences");
        salesPrefsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesPrefsmnitActionPerformed(evt);
            }
        });
        utilitymn.add(salesPrefsmnit);
        utilitymn.add(jSeparator77);

        accessControlMnit.setText("Set Global Access Control");
        accessControlMnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessControlMnitActionPerformed(evt);
            }
        });
        utilitymn.add(accessControlMnit);

        jMenuBar1.add(utilitymn);

        helpmn.setMnemonic('H');
        helpmn.setText("Help");

        hlpcontmnit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        hlpcontmnit.setText("Help TOC");
        hlpcontmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlpcontmnitActionPerformed(evt);
            }
        });
        helpmn.add(hlpcontmnit);

        aboutmn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, java.awt.event.InputEvent.SHIFT_MASK));
        aboutmn.setText("About ");
        aboutmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutmnActionPerformed(evt);
            }
        });
        helpmn.add(aboutmn);
        helpmn.add(jSeparator98);

        helpDesk.setText("ICT Help Desk");
        helpDesk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpDeskActionPerformed(evt);
            }
        });
        helpmn.add(helpDesk);

        jMenuBar1.add(helpmn);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // if(com.afrisoftech.lib.UserName.)
    private void chartDefinitionMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartDefinitionMnitActionPerformed

        this.chartDdefinitionDialog.setSize(700, 600);

        this.chartDdefinitionDialog.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_chartDefinitionMnitActionPerformed

    private void smsGroupsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsGroupsmnitActionPerformed

        com.afrisoftech.records.SMSGroupDefinitionIntfr comp = new com.afrisoftech.records.SMSGroupDefinitionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_smsGroupsmnitActionPerformed

    private void sendMessageTxt1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sendMessageTxt1FocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_sendMessageTxt1FocusGained

    private void sendMessageTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageTxt1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_sendMessageTxt1ActionPerformed

    private void smsBroadcastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsBroadcastBtnActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_smsBroadcastBtnActionPerformed

    private void messageCountDelaymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageCountDelaymnitActionPerformed

        String messageFetchCount = javax.swing.JOptionPane.showInputDialog(this, "Set maximum count for fetching messages before archiving (in miliSeconds, Sec = 1000 miliseconds)", "Set Message Fetch Count Before Archiving", javax.swing.JOptionPane.QUESTION_MESSAGE);

        System.setProperty("message_fetch_count", messageFetchCount);

        this.appProp.setProperty("message_fetch_count", messageFetchCount);

        //this.storePreferences();
// TODO add your handling code here:
    }//GEN-LAST:event_messageCountDelaymnitActionPerformed

    private void smsFetchSnoozePeriodmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsFetchSnoozePeriodmnitActionPerformed

        String smsSnoozePeriod = javax.swing.JOptionPane.showInputDialog(this, "Set convenient snooze period for fetching SMS's (in miliSeconds, Sec = 1000 miliseconds)", "Set SMS Fetch Snooze Period", javax.swing.JOptionPane.QUESTION_MESSAGE);

        System.setProperty("sms.fetch.snooze.period", smsSnoozePeriod);

        this.appProp.setProperty("sms.fetch.snooze.period", smsSnoozePeriod);

        // this.storePreferences();
// TODO add your handling code here:
    }//GEN-LAST:event_smsFetchSnoozePeriodmnitActionPerformed

    private void mesageRecyclePeriodmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesageRecyclePeriodmnitActionPerformed

        String messageRecyclePeriod = javax.swing.JOptionPane.showInputDialog(this, "Set convenient snooze period for recycling messages (in miliSeconds, Sec = 1000 miliseconds)", "Set Message Recycle Snooze Period", javax.swing.JOptionPane.QUESTION_MESSAGE);

        System.setProperty("message_recycle_delay", messageRecyclePeriod);

        this.appProp.setProperty("message_recycle_delay", messageRecyclePeriod);

        //  this.storePreferences();
// TODO add your handling code here:
    }//GEN-LAST:event_mesageRecyclePeriodmnitActionPerformed

    private void messageSnoozePeriodmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageSnoozePeriodmnitActionPerformed

        String messageSnoozePeriod = javax.swing.JOptionPane.showInputDialog(this, "Set convenient snooze period for fetching messages", "Set Message Snooze Period", javax.swing.JOptionPane.QUESTION_MESSAGE);

        System.setProperty("message_snooze_delay", messageSnoozePeriod);

        this.appProp.setProperty("message_snooze_delay", messageSnoozePeriod);

        //  this.storePreferences();
// TODO add your handling code here:
    }//GEN-LAST:event_messageSnoozePeriodmnitActionPerformed

    private void nimbuzlnfMnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimbuzlnfMnitsActionPerformed

        this.changeTheme("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel", null);

        appProp.setProperty("defaultlnf", "com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");

        appProp.setProperty("defaulttheme", "");

        this.updateNewComponentsUI();// TODO add your handling code here:
    }//GEN-LAST:event_nimbuzlnfMnitsActionPerformed

    private void sendSMSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendSMSBtnActionPerformed

        biz.systempartners.communications.SendSMSDialog smsDialog = new biz.systempartners.communications.SendSMSDialog(this, false);

        smsDialog.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_sendSMSBtnActionPerformed

    private void launchDashBoardmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchDashBoardmnitActionPerformed

        biz.systempartners.funsoft.dashboard.AccountsStatsIntfr comp = new biz.systempartners.funsoft.dashboard.AccountsStatsIntfr(connectDB);
        saccopn.setSize(mainSplitPane.getSize());
        comp.setSize(mainSplitPane.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_launchDashBoardmnitActionPerformed

    private void rhCentreMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rhCentreMnitActionPerformed
        com.afrisoftech.records.FPServicesIntfr comp = new com.afrisoftech.records.FPServicesIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_rhCentreMnitActionPerformed

    private void childDiseasesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childDiseasesmnitActionPerformed
        com.afrisoftech.records.ChildDiseasesIntfr comp = new com.afrisoftech.records.ChildDiseasesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_childDiseasesmnitActionPerformed

    private void anteNataRoutineExamsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteNataRoutineExamsmnitActionPerformed
        com.afrisoftech.records.AnteNatalRoutineExamsIntfr comp = new com.afrisoftech.records.AnteNatalRoutineExamsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_anteNataRoutineExamsmnitActionPerformed

    private void anteNatalTestsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteNatalTestsmnitActionPerformed
        com.afrisoftech.records.AnteNatalTestsIntfr comp = new com.afrisoftech.records.AnteNatalTestsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_anteNatalTestsmnitActionPerformed

    private void religionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_religionmnitActionPerformed
        com.afrisoftech.records.ReligionIntfr comp = new com.afrisoftech.records.ReligionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_religionmnitActionPerformed

    private void typesOfUIDsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesOfUIDsmnitActionPerformed
        com.afrisoftech.records.UIDTypeIntfr comp = new com.afrisoftech.records.UIDTypeIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_typesOfUIDsmnitActionPerformed

    private void feedingMethodsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedingMethodsmnitActionPerformed
        com.afrisoftech.records.MilkFeedingMethodIntfr comp = new com.afrisoftech.records.MilkFeedingMethodIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_feedingMethodsmnitActionPerformed

    private void typesofMilkmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesofMilkmnitActionPerformed
        com.afrisoftech.records.TypeOfMilkIntfr comp = new com.afrisoftech.records.TypeOfMilkIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_typesofMilkmnitActionPerformed

    private void reasonforFPlanningmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reasonforFPlanningmnitActionPerformed
        com.afrisoftech.records.PlanningReasonIntfr comp = new com.afrisoftech.records.PlanningReasonIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_reasonforFPlanningmnitActionPerformed

    private void fitnessLevelmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fitnessLevelmnitActionPerformed
        com.afrisoftech.records.FitnessLevelIntfr comp = new com.afrisoftech.records.FitnessLevelIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }// TODO add your handling code here:
    }//GEN-LAST:event_fitnessLevelmnitActionPerformed

    private void maritalStatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maritalStatusmnitActionPerformed
        com.afrisoftech.records.MaritalStatusIntfr comp = new com.afrisoftech.records.MaritalStatusIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_maritalStatusmnitActionPerformed

    private void deliveryStatemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryStatemnitActionPerformed
        com.afrisoftech.records.DeliveryStateIntfr comp = new com.afrisoftech.records.DeliveryStateIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_deliveryStatemnitActionPerformed

    private void childDeliveryMethodsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childDeliveryMethodsmnitActionPerformed
        com.afrisoftech.records.DeliveryTypeIntfr comp = new com.afrisoftech.records.DeliveryTypeIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_childDeliveryMethodsmnitActionPerformed

    private void typesOfHospitalsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesOfHospitalsmnitActionPerformed
        com.afrisoftech.records.TypeofHospitalIntfr comp = new com.afrisoftech.records.TypeofHospitalIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_typesOfHospitalsmnitActionPerformed

    private void placeofDeliverymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeofDeliverymnitActionPerformed
        com.afrisoftech.records.PlaceofDeliveryIntfr comp = new com.afrisoftech.records.PlaceofDeliveryIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_placeofDeliverymnitActionPerformed

    private void riskLevelsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riskLevelsmnitActionPerformed
        com.afrisoftech.records.RiskLevelIntfr comp = new com.afrisoftech.records.RiskLevelIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_riskLevelsmnitActionPerformed

    private void qtyLevelsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyLevelsmnitActionPerformed
        com.afrisoftech.records.LMPQtyIntfr comp = new com.afrisoftech.records.LMPQtyIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_qtyLevelsmnitActionPerformed

    private void childDeliveryStatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childDeliveryStatusmnitActionPerformed
        com.afrisoftech.records.DeliveryStatusIntfr comp = new com.afrisoftech.records.DeliveryStatusIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_childDeliveryStatusmnitActionPerformed

    private void genderParamsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderParamsmnitActionPerformed
        com.afrisoftech.records.GenderIntfr comp = new com.afrisoftech.records.GenderIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_genderParamsmnitActionPerformed

    private void provincesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provincesmnitActionPerformed
        com.afrisoftech.records.ProvinceIntfr comp = new com.afrisoftech.records.ProvinceIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_provincesmnitActionPerformed

    private void hcBranchesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hcBranchesmnitActionPerformed
        com.afrisoftech.records.HCBranchIntfr comp = new com.afrisoftech.records.HCBranchIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_hcBranchesmnitActionPerformed

    private void bloodRhesusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodRhesusmnitActionPerformed
        com.afrisoftech.records.RhesusFactorsIntfr comp = new com.afrisoftech.records.RhesusFactorsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_bloodRhesusmnitActionPerformed

    private void bloodGrpmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGrpmnitActionPerformed
        com.afrisoftech.records.BloodGroup comp = new com.afrisoftech.records.BloodGroup(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_bloodGrpmnitActionPerformed

    private void sendMessageTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sendMessageTxtFocusGained

        sendMessageTxt.setText(null);

// TODO add your handling code here:
    }//GEN-LAST:event_sendMessageTxtFocusGained

    private void sendMessageTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageTxtActionPerformed

        this.sendMessageBtn.doClick();
// TODO add your handling code here:
    }//GEN-LAST:event_sendMessageTxtActionPerformed

    private void unfinalizeInvoicemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfinalizeInvoicemnitActionPerformed
        com.afrisoftech.hospital.UnfinaliseInvIntfr currint = new com.afrisoftech.hospital.UnfinaliseInvIntfr(connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_unfinalizeInvoicemnitActionPerformed

    private void activeReportsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeReportsmnitActionPerformed
        biz.systempartners.reports.ReportIntfr reporter = new biz.systempartners.reports.ReportIntfr(connectDB);//connectDB, pConnDB);
        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        //saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        //TODO add your handling code here:
    }//GEN-LAST:event_activeReportsmnitActionPerformed

    private void viewsmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewsmnActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_viewsmnActionPerformed

    private void reportDesignerMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportDesignerMnitActionPerformed
        biz.systempartners.reports.ReportGenerator currint = new biz.systempartners.reports.ReportGenerator();//connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_reportDesignerMnitActionPerformed

    private void patientctlsumnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientctlsumnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.pSummary, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_patientctlsumnitActionPerformed

    private void changeInvPayermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeInvPayermnitActionPerformed
        com.afrisoftech.accounting.changeInvPayerIntfr currint = new com.afrisoftech.accounting.changeInvPayerIntfr(connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_changeInvPayermnitActionPerformed

    private void financistmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_financistmtmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.fStatement, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_financistmtmnitActionPerformed

    private void AnatbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnatbmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.periodTb, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_AnatbmnitActionPerformed

    private void writeMailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeMailBtnActionPerformed
        biz.systempartners.communications.MultiPartMailIntfr currint = new biz.systempartners.communications.MultiPartMailIntfr(connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
            currint.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_writeMailBtnActionPerformed

    private void winlnfnewmnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfnewmnitsActionPerformed

        this.changeTheme("net.java.plaf.windows.WindowsLookAndFeel", null);

        appProp.setProperty("defaultlnf", "net.java.plaf.windows.WindowsLookAndFeel");

        appProp.setProperty("defaulttheme", "");
        this.updateNewComponentsUI();
// TODO add your handling code here:
    }//GEN-LAST:event_winlnfnewmnitsActionPerformed

    private void sendMessageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageBtnActionPerformed
        if (!sendMessageTxt.getText().matches("Type message here") && (sendMessageTxt.getText() != null) && (sendMessageTxt.getText() != "")) {
            try {
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO funsoft_messages("
                        + "message_recipient, message_detail) VALUES (?, ?)");
                pstmt.setString(1, messageRecipientCmbx.getSelectedItem().toString());
                pstmt.setString(2, sendMessageTxt.getText());
                pstmt.execute();
                javax.swing.JOptionPane.showMessageDialog(this, "Message sent to user : [" + messageRecipientCmbx.getSelectedItem().toString().toUpperCase() + "].");
            } catch (SQLException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "You MUST type a message in the message textfield.");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_sendMessageBtnActionPerformed

    private void messageRecipientCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageRecipientCmbxActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_messageRecipientCmbxActionPerformed

    private void AnualtbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnualtbmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.oneMonthTb, connectDB);

        dates.setVisible(true);
}//GEN-LAST:event_AnualtbmnitActionPerformed

    private void patientctlaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientctlaccmnitActionPerformed
        /*
         * com.afrisoftech.lib.AccountHosDatePanel_1 dates = new
         * com.afrisoftech.lib.AccountHosDatePanel_1(this,pConnDB, true,
         * this.TransByaccPat, connectDB);
         *
         * dates.setVisible(true);
         */

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PatientControlAcc, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_patientctlaccmnitActionPerformed

    private void prntreceiptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prntreceiptmnitActionPerformed
        com.afrisoftech.lib.HosReceiptsPatDatePanel_1 dates = new com.afrisoftech.lib.HosReceiptsPatDatePanel_1(this, pConnDB, true, this.ReceiptperPatTxt, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_prntreceiptmnitActionPerformed

    private void cashUnbalancedOpmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashUnbalancedOpmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnFinInvOutCash, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_cashUnbalancedOpmnitActionPerformed

    private void unfinalisedOpmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfinalisedOpmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnFinInvOut, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_unfinalisedOpmnitActionPerformed

    private void ageingbysuppmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageingbysuppmnitActionPerformed
        com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.CreditorsByName, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_ageingbysuppmnitActionPerformed

    private void compdebtorsbynamemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compdebtorsbynamemnitActionPerformed
        com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.DebtorsByName, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_compdebtorsbynamemnitActionPerformed

    private void maindeptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maindeptmnitActionPerformed
        com.afrisoftech.accounting.MainDepartIntfr currint = new com.afrisoftech.accounting.MainDepartIntfr(connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_maindeptmnitActionPerformed

    private void banksmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banksmnitActionPerformed
        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.DepositsPerBK, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_banksmnitActionPerformed

    private void mergesuppliermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergesuppliermnitActionPerformed
        com.afrisoftech.accounting.MergingCreditorsIntfr currint = new com.afrisoftech.accounting.MergingCreditorsIntfr(connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_mergesuppliermnitActionPerformed

    private void allreceiptsnomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allreceiptsnomnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TotalReceiptsPerNo, connectDB);

        dates.setVisible(true);   // TODO add your handling code here:
    }//GEN-LAST:event_allreceiptsnomnitActionPerformed

    private void projectjrnloansmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectjrnloansmnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
            while (rsetx.next()) {
                //   cashPoint = rsetx.getObject(1).toString();
            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND cash_point = '" + cashPoint + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            ///  cashPoint = rsetf.getObject(1).toString();
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        // pstmt.setString(1, System.getProperty("cashpoint"));
                        pstmt.setString(1, cashPoint);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    com.afrisoftech.accounting.JournalsNgointfr currint = new com.afrisoftech.accounting.JournalsNgointfr(connectDB, pConnDB);
                    saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    try {
                        currint.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.JournalsNgointfr currint = new com.afrisoftech.accounting.JournalsNgointfr(connectDB, pConnDB);
                saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    currint.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }
                /*
                 * cashRunning = true;
                 *
                 * cashThread = new java.lang.Thread(this, "Cash");
                 *
                 * cashThread.start();
                 */
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        /*
         * com.afrisoftech.accounting.JournalsNgointfr currint = new
         * com.afrisoftech.accounting.JournalsNgointfr(connectDB, pConnDB);
         * saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         *
         * currint.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */
        // TODO add your handling code here:
    }//GEN-LAST:event_projectjrnloansmnitActionPerformed

    private void openperiodmnit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openperiodmnit2ActionPerformed

        com.afrisoftech.accounting.OpenClosedPeriodintfr comp = new com.afrisoftech.accounting.OpenClosedPeriodintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_openperiodmnit2ActionPerformed

    private void setaccperiodmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setaccperiodmnit1ActionPerformed

        com.afrisoftech.accounting.ClosePeriodintfr comp = new com.afrisoftech.accounting.ClosePeriodintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        /*
         * int exitOption = javax.swing.JOptionPane.showConfirmDialog(new
         * java.awt.Frame(), "Are you sure you want to APPROVE the Trial
         * Balance?", "Caution before Approve TB!",
         * javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
         *
         * if (exitOption == javax.swing.JOptionPane.YES_OPTION) {
         * com.afrisoftech.lib.HosTBApprDatePanel dates = new
         * com.afrisoftech.lib.HosTBApprDatePanel(this,pConnDB, true,
         * this.ApproveTB, connectDB);
         *
         * dates.setVisible(true); }else{ if (exitOption ==
         * javax.swing.JOptionPane.NO_OPTION) {
         * javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(),
         * "Thanks for taking caution.","Information
         * Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE); } }
         */
// TODO add your handling code here:
    }//GEN-LAST:event_setaccperiodmnit1ActionPerformed

    private void cashBokmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashBokmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.cashPayments, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_cashBokmnitActionPerformed

    private void SubActivimnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubActivimnitActionPerformed
        com.afrisoftech.lib.AccSubDatePanel dates = new com.afrisoftech.lib.AccSubDatePanel(this, pConnDB, true, this.subAcc, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
}//GEN-LAST:event_SubActivimnitActionPerformed

    private void setAccPeriodsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAccPeriodsmnitActionPerformed
        com.afrisoftech.hospital.OpenCloseAccPeriodsIntfr comp = new com.afrisoftech.hospital.OpenCloseAccPeriodsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_setAccPeriodsmnitActionPerformed

    private void cashBkmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashBkmnitActionPerformed

        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.ReconSum, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_cashBkmnitActionPerformed

    private void transditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transditmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.auditing, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_transditmnitActionPerformed

    private void AdmisDischargesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdmisDischargesmnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.admDisch, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_AdmisDischargesmnitActionPerformed

    private void revenuecountlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revenuecountlmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.revevsactivity, connectDB);

        dates.setVisible(true);

// TODO add your handling code here:
}//GEN-LAST:event_revenuecountlmnitActionPerformed

    private void unlinkedgrnsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlinkedgrnsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.unlinkedGrn, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_unlinkedgrnsmnitActionPerformed

    private void doctorstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorstmtmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.docOff, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_doctorstmtmnitActionPerformed

    private void revenuecountallmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revenuecountallmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ActivityRev, connectDB);

        dates.setVisible(true);   // Add your handling code here:
        // TODO add your handling code here:
}//GEN-LAST:event_revenuecountallmnitActionPerformed

    private void packagepricelistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packagepricelistmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.PackageList, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_packagepricelistmnitActionPerformed

    private void laboratorymn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laboratorymn1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_laboratorymn1ActionPerformed

    private void packageslistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packageslistmnitActionPerformed
        com.afrisoftech.hospital.PackagesSetIntfr comp = new com.afrisoftech.hospital.PackagesSetIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_packageslistmnitActionPerformed

    private void packagesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packagesmnitActionPerformed
        com.afrisoftech.hospital.PackagesIntfr comp = new com.afrisoftech.hospital.PackagesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_packagesmnitActionPerformed

    private void insertNotrackmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertNotrackmnitActionPerformed
        com.afrisoftech.accounting.BillNoAuditIntfr comp = new com.afrisoftech.accounting.BillNoAuditIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_insertNotrackmnitActionPerformed

    private void compdebtortxtsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compdebtortxtsmnitActionPerformed

        com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.CreditorsAgeTxt, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_compdebtortxtsmnitActionPerformed

    private void compdebtorstxtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compdebtorstxtmnitActionPerformed

        com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.DebtorsAgeTxt, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_compdebtorstxtmnitActionPerformed

    private void readSmartCardMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readSmartCardMnitActionPerformed

//    System.setProperty("docsdir",System.getProperty("user.dir"));
        java.io.File xmlDocFile = null;
        //  try {

        // xmlDocFile = java.io.File.createTempFile("CLAIM"+biz.systempartners.claims.DateLables.getDateLabel()+"_", ".xml", new java.io.File(System.getProperty("docsdir")));
        xmlDocFile = new java.io.File(System.getProperty("docsdir"), "ForwardedCardData.xml");//.createTempFile("HospitalClaimsFile", ".xml", new java.io.File(System.getProperty("docsdir")));

        //xmlDocFile = java.io.File.createTempFile("CARD"+biz.systempartners.claims.DateLables.getDateLabel()+"_", ".xml", new java.io.File(System.getProperty("docsdir")));
        // } catch(java.io.IOException ioExec){
        //    ioExec.printStackTrace();
        // }
        try {

            java.sql.Connection mysqlConn = com.afrisoftech.lib.SmartExchange.getDBConnection(connectDB);
            java.sql.PreparedStatement pstmtMysql = mysqlConn.prepareStatement("SELECT Smart_File FROM exchange_files WHERE Progress_Flag = ?");

            pstmtMysql.setInt(1, 1);

            java.sql.ResultSet rstmtMysql = pstmtMysql.executeQuery();

            while (rstmtMysql.next()) {
                java.sql.Blob blob = rstmtMysql.getBlob("Smart_File");
                System.out.println("Read " + blob.length() + " bytes ");
                byte[] array = blob.getBytes(1, (int) blob.length());
                //File file = File.createTempFile("something-", ".binary", new File("."));
                java.io.FileOutputStream out;
                try {
                    out = new java.io.FileOutputStream(xmlDocFile);
                    try {
                        out.write(array);
                        out.close();
                    } catch (IOException ex) {
                        Logger.getLogger(HospitalMain.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(HospitalMain.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        } catch (java.sql.SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        biz.systempartners.claims.XMLClaimFile claimFile = new biz.systempartners.claims.XMLClaimFile();

        claimFile.processFile(xmlDocFile);

        //com.afrisoftech.hospital.GeneralBillingIntfr.patientNumberTxt.setText(claimFile.patientNumber);
        //com.afrisoftech.hospital.GeneralBillingIntfr.patientNameTxt.setText(claimFile.patientSurName + " " + claimFile.patientForenames);
        com.afrisoftech.hospital.GeneralBillingIntfr.paymentModeCmbx.setSelectedItem("Scheme");
        com.afrisoftech.hospital.GeneralBillingIntfr.schemeNameTxt.setText(claimFile.medicalAidPlan);
        com.afrisoftech.hospital.GeneralBillingIntfr.payerNameTxt.setText(claimFile.medicalAidCode);
        com.afrisoftech.hospital.GeneralBillingIntfr.schemeAccountNumberTxt.setText(claimFile.medicalAidNumber);
        com.afrisoftech.hospital.GeneralBillingIntfr.unitNumberTxt.setText(claimFile.medicalAidCode);
        com.afrisoftech.hospital.GeneralBillingIntfr.schemeMemberNumberTxt.setText(claimFile.medicalAidNumber);
        com.afrisoftech.hospital.GeneralBillingIntfr.schemeMemberNameTxt.setText(claimFile.patientSurName + " " + claimFile.patientForenames);
        com.afrisoftech.hospital.GeneralBillingIntfr.cardBalanceTxt.setText(claimFile.cardBalance);
        com.afrisoftech.hospital.GeneralBillingIntfr.readSmartCardBtn.doClick();

        javax.swing.JOptionPane.showMessageDialog(this, "SmartLink Card read successfully with identity:\nCard Number :[" + claimFile.cardNumber + "] and Name : [" + claimFile.patientSurName + " " + claimFile.patientForenames + "]");

//        java.sql.Connection mysqlConn;
//        try {
//
//            mysqlConn = java.sql.DriverManager.getConnection("jdbc:mysql://192.168.0.104:3307/smartlink", "integ_user", "integ123");
//
//            java.sql.PreparedStatement pstmtMysql = mysqlConn.prepareStatement("UPDATE exchange_files SET Progress_Flag = ? WHERE Global_Id = ?");
//
//            pstmtMysql.setInt(1, 10);
//            
//            pstmtMysql.setString(2, claimFile.cardNumber);
//            
//            pstmtMysql.executeUpdate();
//
//            javax.swing.JOptionPane.showMessageDialog(this, "SmartLink Card read successfully with identity:\nCard Number :[" + claimFile.cardNumber + "] and Name : [" + claimFile.patientSurName + " " + claimFile.patientForenames + "]");
//
//        } catch (SQLException ex) {
//            Logger.getLogger(HospitalMain.class.getName()).log(Level.SEVERE, null, ex);
//            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
//        }
// TODO add your handling code here:
    }//GEN-LAST:event_readSmartCardMnitActionPerformed

    private void localeSettingsMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localeSettingsMnitActionPerformed
        biz.systempartners.locale.LocaleSettingsIntfr comp = new biz.systempartners.locale.LocaleSettingsIntfr();
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_localeSettingsMnitActionPerformed

    private void glaccountsupdatemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glaccountsupdatemnitActionPerformed
        com.afrisoftech.accounting.ActivitiesAmendIntfr comp = new com.afrisoftech.accounting.ActivitiesAmendIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // TODO add your handling code here:
    }//GEN-LAST:event_glaccountsupdatemnitActionPerformed

    private void lbalancesheetdtlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbalancesheetdtlmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.BsheetDtl, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_lbalancesheetdtlmnitActionPerformed

    private void incomestmdtlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomestmdtlmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TradingPL, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_incomestmdtlmnitActionPerformed

    private void transauditingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transauditingmnitActionPerformed
        com.afrisoftech.accounting.TransAuditIntfr comp = new com.afrisoftech.accounting.TransAuditIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_transauditingmnitActionPerformed

    private void incomestmtsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomestmtsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TradingTBs, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_incomestmtsummnitActionPerformed

    private void pnltxttrdmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnltxttrdmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TradingTB, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_pnltxttrdmnitActionPerformed

    private void reveagainstmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reveagainstmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.RevBudget, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_reveagainstmnitActionPerformed

    private void BillinginvoicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BillinginvoicesmnitActionPerformed
    }//GEN-LAST:event_BillinginvoicesmnitActionPerformed

    private void LinkGrnmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinkGrnmnitActionPerformed
        com.afrisoftech.accounting.GrntoCreditorsInvsIntfr comp = new com.afrisoftech.accounting.GrntoCreditorsInvsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

    }//GEN-LAST:event_LinkGrnmnitActionPerformed

    private void EndoscopymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndoscopymnitActionPerformed
        com.afrisoftech.hospital.EndoscopyBillingIntfr comp = new com.afrisoftech.hospital.EndoscopyBillingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_EndoscopymnitActionPerformed

    private void shiftstotalsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftstotalsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TotalShiftSum, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_shiftstotalsummnitActionPerformed

    private void ipbillmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipbillmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.IpBillRep, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_ipbillmnitActionPerformed

    private void ipBillStatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipBillStatusmnitActionPerformed

        com.afrisoftech.lib.HosIpanalysisPanel dates = new com.afrisoftech.lib.HosIpanalysisPanel(this, pConnDB, true, this.IpStatusRep, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_ipBillStatusmnitActionPerformed

    private void IpAnalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpAnalysismnitActionPerformed
        com.afrisoftech.accounting.IpAnalysisIntfr comp = new com.afrisoftech.accounting.IpAnalysisIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_IpAnalysismnitActionPerformed

    private void IperdeptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IperdeptmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.PatPerDeptIp, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_IperdeptmnitActionPerformed

    private void DentalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DentalmnitActionPerformed
        com.afrisoftech.hospital.DentalProceduresIntfr comp = new com.afrisoftech.hospital.DentalProceduresIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_DentalmnitActionPerformed

    private void debitNotemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debitNotemnitActionPerformed
        com.afrisoftech.accounting.RaiseDebitNoteintfr comp = new com.afrisoftech.accounting.RaiseDebitNoteintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_debitNotemnitActionPerformed

    private void doctorsledgermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorsledgermnitActionPerformed
        com.afrisoftech.hospital.GeneralDocIntfr comp = new com.afrisoftech.hospital.GeneralDocIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_doctorsledgermnitActionPerformed

    private void rehabmnitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rehabmnitmnitActionPerformed
        com.afrisoftech.hospital.RehabProceduresIntfr comp = new com.afrisoftech.hospital.RehabProceduresIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

// TODO add your handling code here:
    }//GEN-LAST:event_rehabmnitmnitActionPerformed

    private void mergedepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergedepmnitActionPerformed
        com.afrisoftech.hospital.FixedRatesCatIntfr comp = new com.afrisoftech.hospital.FixedRatesCatIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_mergedepmnitActionPerformed

    private void patbillmergemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patbillmergemnitActionPerformed
        com.afrisoftech.accounting.MergingPatientBillIntfr comp = new com.afrisoftech.accounting.MergingPatientBillIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_patbillmergemnitActionPerformed

    private void logonwatermarkmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logonwatermarkmnitActionPerformed
        com.afrisoftech.lib.LogoAndWaterMarkPanel logoPanel = new com.afrisoftech.lib.LogoAndWaterMarkPanel(this, false);

        logoPanel.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_logonwatermarkmnitActionPerformed

    private void CashanalysisdeptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashanalysisdeptmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CashPerDay, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_CashanalysisdeptmnitActionPerformed

    private void closesupplaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closesupplaccmnitActionPerformed
        com.afrisoftech.hospinventory.CloseSupplierAccIntfr comp = new com.afrisoftech.hospinventory.CloseSupplierAccIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_closesupplaccmnitActionPerformed

    private void supplrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplrmnitActionPerformed
        com.afrisoftech.hospinventory.SupplierreGistrationintfr comp = new com.afrisoftech.hospinventory.SupplierreGistrationintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_supplrmnitActionPerformed

    private void theatrescorecardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatrescorecardActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TheatreProc, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_theatrescorecardActionPerformed

    private void detoprevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detoprevmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.DetOpRev, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_detoprevmnitActionPerformed

    private void interimdescinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interimdescinvmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, this.InterimPatientBill, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_interimdescinvmnitActionPerformed

    private void bsmvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsmvmnitActionPerformed
        com.afrisoftech.lib.HosBsDatePanel dates = new com.afrisoftech.lib.HosBsDatePanel(this, true, this.BalanceSheetmvnt, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_bsmvmnitActionPerformed

    private void mergeacmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeacmnitActionPerformed
        com.afrisoftech.accounting.MergeGlAccIntfr comp = new com.afrisoftech.accounting.MergeGlAccIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_mergeacmnitActionPerformed

    private void creditorsinvSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsinvSummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CreditorsInvSummary, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_creditorsinvSummnitActionPerformed

    private void cheqrequmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheqrequmnitActionPerformed
        com.afrisoftech.lib.HosChequeReqPanel dates = new com.afrisoftech.lib.HosChequeReqPanel(this, pConnDB, true, this.chqReque, connectDB);

        dates.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_cheqrequmnitActionPerformed

    private void debtshiftmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtshiftmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.debtShift, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_debtshiftmnitActionPerformed

    private void ClinicalexamnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClinicalexamnitActionPerformed
        com.afrisoftech.laboratory.ClinicalExamIntfr comp = new com.afrisoftech.laboratory.ClinicalExamIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_ClinicalexamnitActionPerformed

    private void stockbalancesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockbalancesmnitActionPerformed
        com.afrisoftech.lib.HosPatientDatePanel dates = new com.afrisoftech.lib.HosPatientDatePanel(this, pConnDB, true, this.DiagnosisPerPat, connectDB);

        dates.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_stockbalancesmnitActionPerformed

    private void InfomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfomnitActionPerformed

        com.afrisoftech.accounting.InformationIntfr prod = new com.afrisoftech.accounting.InformationIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_InfomnitActionPerformed

    private void educationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_educationmnitActionPerformed
        com.afrisoftech.accounting.EduLevelIntfr prod = new com.afrisoftech.accounting.EduLevelIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
// TODO add your handling code here:
    }//GEN-LAST:event_educationmnitActionPerformed

    private void VisitIdmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisitIdmnitActionPerformed
        com.afrisoftech.accounting.MergingVisitIdIntfr prod = new com.afrisoftech.accounting.MergingVisitIdIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_VisitIdmnitActionPerformed

    private void nhif18mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhif18mnitActionPerformed
        com.afrisoftech.lib.HosDispartchNhifDatePanel dates = new com.afrisoftech.lib.HosDispartchNhifDatePanel(this, pConnDB, true, this.NhifDispclaim, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_nhif18mnitActionPerformed

    private void shiftreprecmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftreprecmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.ShiftRecpt, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_shiftreprecmnitActionPerformed

    private void countryditrmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryditrmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_countryditrmnActionPerformed

    private void OutpatientinvoicetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutpatientinvoicetmnitActionPerformed
        com.afrisoftech.lib.HosInvPanel dates = new com.afrisoftech.lib.HosInvPanel(this, true, this.InvByInvDbt, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_OutpatientinvoicetmnitActionPerformed

    private void transauditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transauditmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TransactionsAudit, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_transauditmnitActionPerformed

    private void fpoperationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpoperationmnitActionPerformed
        com.afrisoftech.hospital.HospitalMain.LoadComboTaskPanelfp loadComboTaskPanelfp = new com.afrisoftech.hospital.HospitalMain.LoadComboTaskPanelfp();

        loadComboTaskPanelfp.start();        // Add your handling code here:
    }//GEN-LAST:event_fpoperationmnitActionPerformed

    private void occupationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupationmnitActionPerformed
        com.afrisoftech.fplanning.FpOccupationIntfr prod = new com.afrisoftech.fplanning.FpOccupationIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_occupationmnitActionPerformed

    private void fpPosmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpPosmnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetx.next()) {
                // cashPointPett = rsetx.getObject(1).toString();
            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND  (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            //      cashPointPett = rsetf.getObject(1).toString();
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        pstmt.setString(1, cashPoint);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    com.afrisoftech.accounting.BillPaymentsFpIntfr comp = new com.afrisoftech.accounting.BillPaymentsFpIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.BillPaymentsFpIntfr comp = new com.afrisoftech.accounting.BillPaymentsFpIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }    // Add your handling code here:
    }//GEN-LAST:event_fpPosmnitActionPerformed

    private void doctorsallocstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorsallocstmtmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocAllocs, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_doctorsallocstmtmnitActionPerformed

    private void CategorysetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategorysetupmnitActionPerformed
        BedCategoryIntfr comp = new BedCategoryIntfr(connectDB, pConnDB);

        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_CategorysetupmnitActionPerformed

    private void pettycashpaydirmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashpaydirmnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetx.next()) {
                cashPointPett = rsetx.getObject(1).toString();

            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND cash_point = '" + cashPointPett + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            cashPointPett = rsetf.getObject(1).toString();

                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");

                        pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    com.afrisoftech.hospital.PettyCashDirectOdPymIntfr comp = new com.afrisoftech.hospital.PettyCashDirectOdPymIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.hospital.PettyCashDirectOdPymIntfr comp = new com.afrisoftech.hospital.PettyCashDirectOdPymIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }         // Add your handling code here:
    }//GEN-LAST:event_pettycashpaydirmnitActionPerformed

    private void MohCashanalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MohCashanalysismnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MohCash, connectDB);

        dates.setVisible(true);      // Add your handling code here:
    }//GEN-LAST:event_MohCashanalysismnitActionPerformed

    private void govPosmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_govPosmnitActionPerformed
        int rowsNo = 0;

        try {


            /*
             * java.sql.Statement stmtx = connectDB.createStatement();
             * java.sql.ResultSet rsetx = stmtx.executeQuery("select code from
             * ac_cash_points_setup where description = current_user"); while
             * (rsetx.next()) { cashPointPett = rsetx.getObject(1).toString();
             *
             * }
             */
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            cashPointPett = rsetf.getObject(1).toString();
                            System.setProperty("cashpoint", cashPointPett);
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        // pstmt.setString(1, System.getProperty("cashpoint"));
                        pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(this, sqE.getMessage());
                    }
                    System.out.println("Opening shift");

                    //  status = true;
                    com.afrisoftech.accounting.GovBillPaymentsIntfr comp = new com.afrisoftech.accounting.GovBillPaymentsIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.GovBillPaymentsIntfr comp = new com.afrisoftech.accounting.GovBillPaymentsIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        // Add your handling code here:
    }//GEN-LAST:event_govPosmnitActionPerformed

    private void fpcontrapercategorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpcontrapercategorymnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FpConptPerType, connectDB);

        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_fpcontrapercategorymnitActionPerformed

    private void contraceptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contraceptmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FperSex, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_contraceptmnitActionPerformed

    private void fpclientpermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpclientpermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FpContracept, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_fpclientpermnitActionPerformed

    private void fpclientpertypemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpclientpertypemnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FperType, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_fpclientpertypemnitActionPerformed

    private void MergedocaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MergedocaccmnitActionPerformed
        com.afrisoftech.accounting.MergingDoctorsIntfr prod = new com.afrisoftech.accounting.MergingDoctorsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_MergedocaccmnitActionPerformed

    private void rcttrfmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rcttrfmnitActionPerformed
        com.afrisoftech.accounting.ReceiptsTransfIntfr prod = new com.afrisoftech.accounting.ReceiptsTransfIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_rcttrfmnitActionPerformed

    private void directbankingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directbankingmnitActionPerformed
        com.afrisoftech.accounting.BankingDirectIntfr prod = new com.afrisoftech.accounting.BankingDirectIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_directbankingmnitActionPerformed

    private void rptsummaryperpointmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptsummaryperpointmnitActionPerformed
        com.afrisoftech.lib.HosCashPointDatePanel dates = new com.afrisoftech.lib.HosCashPointDatePanel(this, pConnDB, true, this.RcptSummaryPerPoint, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_rptsummaryperpointmnitActionPerformed

    private void rptperpointmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptperpointmnitActionPerformed
        com.afrisoftech.lib.HosCashPointDatePanel dates = new com.afrisoftech.lib.HosCashPointDatePanel(this, pConnDB, true, this.SummaryPerPoint, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_rptperpointmnitActionPerformed

    private void pettycapaymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycapaymnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PettySum, connectDB);

        dates.setVisible(true);      // Add your handling code here:
    }//GEN-LAST:event_pettycapaymnitActionPerformed

    private void nhifcreditscompmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhifcreditscompmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.NhifCrompre, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_nhifcreditscompmnitActionPerformed

    private void pettycmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycmentmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.PettyCashShiftPay, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_pettycmentmnitActionPerformed

    private void pettycashshiftssummmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashshiftssummmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.PettyCashShiftSumm, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_pettycashshiftssummmnitActionPerformed

    private void diagsummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagsummarymnitActionPerformed
        com.afrisoftech.hospital.PatientDiagSummIntfr prod = new com.afrisoftech.hospital.PatientDiagSummIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_diagsummarymnitActionPerformed

    private void dailybltmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailybltmnitActionPerformed
        com.afrisoftech.reports.DailybulletinPdf policy = new com.afrisoftech.reports.DailybulletinPdf();
        policy.DailybulletinPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_dailybltmnitActionPerformed

    private void pettycashshiftsclaimnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashshiftsclaimnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.PettyCashClaim, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_pettycashshiftsclaimnitActionPerformed

    private void projmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projmnitActionPerformed
        com.afrisoftech.accounting.ProjectIntfr prod = new com.afrisoftech.accounting.ProjectIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_projmnitActionPerformed

    private void donormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donormnitActionPerformed
        com.afrisoftech.accounting.DonorIntfr prod = new com.afrisoftech.accounting.DonorIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_donormnitActionPerformed

    private void brancmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brancmnitActionPerformed
        com.afrisoftech.accounting.BranchIntfr prod = new com.afrisoftech.accounting.BranchIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_brancmnitActionPerformed

    private void fpercategorymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpercategorymnitActionPerformed
        com.afrisoftech.lib.AccountHosDatePaneld dates = new com.afrisoftech.lib.AccountHosDatePaneld(this, pConnDB, true, this.FperCate, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_fpercategorymnitActionPerformed

    private void fpsummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpsummarymnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Fpsumm, connectDB);

        dates.setVisible(true);
        //  com.afrisoftech.reports.FpSummaryPdf policy = new com.afrisoftech.reports.FpSummaryPdf();
        //  policy.FpSummaryPdf (connectDB);        // Add your handling code here:
    }//GEN-LAST:event_fpsummarymnitActionPerformed

    private void fprepmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fprepmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_fprepmnActionPerformed

    private void fprecordsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fprecordsmnitActionPerformed
        com.afrisoftech.fplanning.FPBillingIntfr prod = new com.afrisoftech.fplanning.FPBillingIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_fprecordsmnitActionPerformed

    private void fpclientsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpclientsmnitActionPerformed
        com.afrisoftech.fplanning.FpClientTypeIntfr prod = new com.afrisoftech.fplanning.FpClientTypeIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_fpclientsmnitActionPerformed

    private void fpcontraceptivesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpcontraceptivesmnitActionPerformed
        com.afrisoftech.fplanning.FpContraceptivesIntfr prod = new com.afrisoftech.fplanning.FpContraceptivesIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_fpcontraceptivesmnitActionPerformed

    private void FPmethodsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FPmethodsmnitActionPerformed
        com.afrisoftech.fplanning.FpMethodIntfr prod = new com.afrisoftech.fplanning.FpMethodIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_FPmethodsmnitActionPerformed

    private void fpservicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpservicesmnitActionPerformed
        com.afrisoftech.fplanning.FpTypeIntfr prod = new com.afrisoftech.fplanning.FpTypeIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_fpservicesmnitActionPerformed

    private void fpregistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpregistermnitActionPerformed
        com.afrisoftech.fplanning.FpRegisterIntfr prod = new com.afrisoftech.fplanning.FpRegisterIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_fpregistermnitActionPerformed

    private void ConfirmedBookingsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmedBookingsmnitActionPerformed
        com.afrisoftech.lib.HosDepartmentDatePanel dates = new com.afrisoftech.lib.HosDepartmentDatePanel(this, true, this.ConfBookings, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_ConfirmedBookingsmnitActionPerformed

    private void BookingsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookingsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Bookings, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_BookingsmnitActionPerformed

    private void rptbrdwnmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptbrdwnmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, Rctbwk, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_rptbrdwnmnitActionPerformed

    private void shiftrptbrdwnmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftrptbrdwnmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.ShiftBrd, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_shiftrptbrdwnmnitActionPerformed

    private void stmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stmtmnitActionPerformed
        com.afrisoftech.accounting.SchemeStmtntfr prod = new com.afrisoftech.accounting.SchemeStmtntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_stmtmnitActionPerformed

    private void CashBookMangmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashBookMangmnitActionPerformed
        com.afrisoftech.hospital.HospitalMain.CashBookTaskPanel cashBookTaskPanel = new com.afrisoftech.hospital.HospitalMain.CashBookTaskPanel();

        cashBookTaskPanel.start();         // Add your handling code here:
    }//GEN-LAST:event_CashBookMangmnitActionPerformed

    private void ipOperationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipOperationsmnitActionPerformed
        com.afrisoftech.hospital.HospitalMain.LoadIpTaskPanel loadIpTaskPanel = new com.afrisoftech.hospital.HospitalMain.LoadIpTaskPanel();

        loadIpTaskPanel.start();        // Add your handling code here:
    }//GEN-LAST:event_ipOperationsmnitActionPerformed

    private void pettycashpaywhmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashpaywhmnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetx.next()) {
                cashPointPett = rsetx.getObject(1).toString();

            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND cash_point = '" + cashPointPett + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            cashPointPett = rsetf.getObject(1).toString();

                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        // pstmt.setString(1, System.getProperty("cashpoint"));
                        pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    //  status = true;
                    com.afrisoftech.hospital.PettyCashDirectPymIntfr comp = new com.afrisoftech.hospital.PettyCashDirectPymIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }
                    /*
                     * cashRunning = true;
                     *
                     * cashThrea d = new java.lang.Th read(this, "Cash");
                     *
                     * cashThread.start();
                     */
                }
            } else {
                com.afrisoftech.hospital.PettyCashDirectPymIntfr comp = new com.afrisoftech.hospital.PettyCashDirectPymIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }
                /*
                 * cashRunning = true;
                 *
                 * cashThread = new java.lang.Thread(this, "Cash");
                 *
                 * cashThread.start();
                 */
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
    }//GEN-LAST:event_pettycashpaywhmnitActionPerformed

    private void LabHierachymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabHierachymnitActionPerformed
        com.afrisoftech.laboratory.LabHierachyIntfr comp = new com.afrisoftech.laboratory.LabHierachyIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_LabHierachymnitActionPerformed

    private void DebtStatttxtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebtStatttxtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtStmPerScheme1, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_DebtStatttxtmnitActionPerformed

    private void creditorOperationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorOperationsmnitActionPerformed
        com.afrisoftech.hospital.HospitalMain.LoadCreditorsTaskPanel loadCreditorsTaskPanel = new com.afrisoftech.hospital.HospitalMain.LoadCreditorsTaskPanel();

        loadCreditorsTaskPanel.start();        // Add your handling code here:
    }//GEN-LAST:event_creditorOperationsmnitActionPerformed

    private void frontEndOperationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontEndOperationsmnitActionPerformed

        com.afrisoftech.hospital.HospitalMain.LoadComboTaskPanel loadComboTaskPanel = new com.afrisoftech.hospital.HospitalMain.LoadComboTaskPanel();

        loadComboTaskPanel.start();
        // Add your handling code here:
    }//GEN-LAST:event_frontEndOperationsmnitActionPerformed

    private void patmergemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patmergemnitActionPerformed
        com.afrisoftech.accounting.MergingPatientNoIntfr prod = new com.afrisoftech.accounting.MergingPatientNoIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_patmergemnitActionPerformed

    private void receiptPrinterMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptPrinterMnitActionPerformed

        com.afrisoftech.hospital.HospitalMain.GetAvailablePrintServices getPrintServices = new com.afrisoftech.hospital.HospitalMain.GetAvailablePrintServices();

        getPrintServices.start();

        //  getPrintServices.stop();
        // getPrintServices.destroy();

        /*
         * javax.print.DocFlavor textFileDocFlavor =
         * javax.print.DocFlavor.INPUT_STREAM.AUTOSENSE;
         * javax.print.attribute.PrintRequestAttributeSet textPrintAttributeSet
         * = new javax.print.attribute.HashPrintRequestAttributeSet();
         *
         * java.util.Vector printServicesVector = new java.util.Vector(1,1);
         *
         * javax.print.PrintService printServices[] =
         * javax.print.PrintServiceLookup.lookupPrintServices(textFileDocFlavor,
         * textPrintAttributeSet);
         *
         * for(int i = 0; i < printServices.length; i++){
         * printServicesVector.addElement(printServices[i].getName()); }
         *
         * // javax.swing.JComboBox comboBoxPrintServices = new
         * javax.swing.JComboBox(printServicesVector); java.lang.Object
         * selectedPrinter = javax.swing.JOptionPane.showInputDialog(this,
         * "Select Default Receipt Printer", "Setting Default Receipt Printer",
         * javax.swing.JOptionPane.OK_CANCEL_OPTION, new
         * javax.swing.ImageIcon(getClass().getResource("/print.gif")),
         * printServicesVector.toArray(), printServicesVector.toArray()[0]);
         * System.out.println("Selected printer : ["+selectedPrinter+"]");
         * System.setProperty("receipt_printer",selectedPrinter.toString());
         * appProp.setProperty("receipt_printer",selectedPrinter.toString());
         * this.storePreferences();
         */// Add your handling code here:
    }//GEN-LAST:event_receiptPrinterMnitActionPerformed

    private void textPrintermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPrintermnitActionPerformed

        com.afrisoftech.hospital.HospitalMain.GetAvailableInvoicesPrintServices getPrintServices = new com.afrisoftech.hospital.HospitalMain.GetAvailableInvoicesPrintServices();

        getPrintServices.start();

        /*
         * javax.print.DocFlavor textFileDocFlavor =
         * javax.print.DocFlavor.INPUT_STREAM.AUTOSENSE;
         * javax.print.attribute.PrintRequestAttributeSet textPrintAttributeSet
         * = new javax.print.attribute.HashPrintRequestAttributeSet();
         *
         * java.util.Vector printServicesVector = new java.util.Vector(1,1);
         *
         * javax.print.PrintService printServices[] =
         * javax.print.PrintServiceLookup.lookupPrintServices(textFileDocFlavor,
         * textPrintAttributeSet);
         *
         * for(int i = 0; i < printServices.length; i++){
         * printServicesVector.addElement(printServices[i].getName()); }
         *
         * // javax.swing.JComboBox comboBoxPrintServices = new
         * javax.swing.JComboBox(printServicesVector); java.lang.Object
         * selectedPrinter = javax.swing.JOptionPane.showInputDialog(this,
         * "Select Default Printer", "Setting Default Printer",
         * javax.swing.JOptionPane.OK_CANCEL_OPTION, new
         * javax.swing.ImageIcon(getClass().getResource("/print.gif")),
         * printServicesVector.toArray(), printServicesVector.toArray()[0]);
         * System.out.println("Selected printer : ["+selectedPrinter+"]");
         * System.setProperty("invoices_printer",selectedPrinter.toString());
         * appProp.setProperty("invoices_printer",selectedPrinter.toString());
         * this.storePreferences();
         */  // Add your handling code here:
    }//GEN-LAST:event_textPrintermnitActionPerformed

    private void DebtStatementtxtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebtStatementtxtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtStmTxt, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_DebtStatementtxtmnitActionPerformed

    private void schemememberjmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemememberjmnitActionPerformed
        com.afrisoftech.hospital.CloseSchemeMemberAccIntfr prod = new com.afrisoftech.hospital.CloseSchemeMemberAccIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_schemememberjmnitActionPerformed

    private void detailedstmtsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedstmtsmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.DetSchStmt, connectDB);

        //  dates.
        dates.setVisible(true);

        // Add your handling code here:
    }//GEN-LAST:event_detailedstmtsmnitActionPerformed

    private void detdebtorsStmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detdebtorsStmtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtorsStmtBrk, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_detdebtorsStmtmnitActionPerformed

    private void tbmovmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbmovmentmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TrialbalanceMvt, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_tbmovmentmnitActionPerformed

    private void approvinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvinvmnitActionPerformed
        com.afrisoftech.accounting.DispatchPerPayerInvoicesIntfr prod = new com.afrisoftech.accounting.DispatchPerPayerInvoicesIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_approvinvmnitActionPerformed

    private void monthlyroutinemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyroutinemnitActionPerformed

        com.afrisoftech.accounting.OpenFinancePeriodintfr comp = new com.afrisoftech.accounting.OpenFinancePeriodintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_monthlyroutinemnitActionPerformed

    private void unfinalinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfinalinvmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.IpUnFinInv, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_unfinalinvmnitActionPerformed

    private void patientregnummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientregnummnitActionPerformed
        com.afrisoftech.noc.PatientRegisterIntfr comp = new com.afrisoftech.noc.PatientRegisterIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_patientregnummnitActionPerformed

    private void grtsuppliermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grtsuppliermnitActionPerformed
        com.afrisoftech.lib.HosGrtDatePanel dates = new com.afrisoftech.lib.HosGrtDatePanel(this, pConnDB, true, GRT, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_grtsuppliermnitActionPerformed

    private void pnltxtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnltxtmnitActionPerformed
        com.afrisoftech.lib.HosBsDatePanel dates = new com.afrisoftech.lib.HosBsDatePanel(this, true, this.ProfitLossTxt, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_pnltxtmnitActionPerformed

    private void studio2k5mnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studio2k5mnActionPerformed

        this.changeTheme("org.fife.plaf.VisualStudio2005.VisualStudio2005LookAndFeel", null);

        appProp.setProperty("defaultlnf", "org.fife.plaf.VisualStudio2005.VisualStudio2005LookAndFeel");

        appProp.setProperty("defaulttheme", "");
        this.updateNewComponentsUI();

        //  storePreferences();
        // Add your handling code here:
    }//GEN-LAST:event_studio2k5mnActionPerformed

    private void office2003mnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_office2003mnActionPerformed

        this.changeTheme("org.fife.plaf.Office2003.Office2003LookAndFeel", null);

        appProp.setProperty("defaultlnf", "org.fife.plaf.Office2003.Office2003LookAndFeel");

        appProp.setProperty("defaulttheme", "");
        this.updateNewComponentsUI();

        //  storePreferences();
        // Add your handling code here:
    }//GEN-LAST:event_office2003mnActionPerformed

    private void officexpmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_officexpmnActionPerformed

        this.changeTheme("org.fife.plaf.OfficeXP.OfficeXPLookAndFeel", null);

        appProp.setProperty("defaultlnf", "org.fife.plaf.OfficeXP.OfficeXPLookAndFeel");

        appProp.setProperty("defaulttheme", "");
        this.updateNewComponentsUI();

        //  storePreferences();
        // Add your handling code here:
    }//GEN-LAST:event_officexpmnActionPerformed

    private void OutpatientinvoicetxtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutpatientinvoicetxtmnitActionPerformed
        com.afrisoftech.lib.HosInvPanel dates = new com.afrisoftech.lib.HosInvPanel(this, true, this.InvByInvTxt, connectDB);

        dates.setVisible(true);

        //   com.afrisoftech.txtreports.OutPatientInvTxtReport policy = new com.afrisoftech.txtreports.OutPatientInvTxtReport(connectDB);
        // policy.OutPatientInvTxtReport();         // Add your handling code here:
    }//GEN-LAST:event_OutpatientinvoicetxtmnitActionPerformed

    private void journalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_journalmnitActionPerformed
        com.afrisoftech.lib.HosJournalPanel dates = new com.afrisoftech.lib.HosJournalPanel(this, true, this.journalInd, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_journalmnitActionPerformed

    private void permitcollectormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permitcollectormnitActionPerformed
        com.afrisoftech.accounting.PermitCollectionIntfr comp = new com.afrisoftech.accounting.PermitCollectionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_permitcollectormnitActionPerformed

    private void bodycollectionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodycollectionmnitActionPerformed
        com.afrisoftech.accounting.BodyCollectionIntfr comp = new com.afrisoftech.accounting.BodyCollectionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_bodycollectionmnitActionPerformed

    private void sickoffsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sickoffsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Sickoffs, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_sickoffsmnitActionPerformed

    private void deathsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deathsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Deaths, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_deathsmnitActionPerformed

    private void cbookbalancesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbookbalancesmnitActionPerformed
        com.afrisoftech.reports.CashBookBalancesPdf policy = new com.afrisoftech.reports.CashBookBalancesPdf();
        policy.CashBookBalancesPdf(connectDB);   // Add your handling code here:
    }//GEN-LAST:event_cbookbalancesmnitActionPerformed

    private void CashSalesbrdmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashSalesbrdmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.CashSalesBrd, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_CashSalesbrdmnitActionPerformed

    private void namesearchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesearchmnitActionPerformed
        com.afrisoftech.accounting.NameSearchIntfr comp = new com.afrisoftech.accounting.NameSearchIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_namesearchmnitActionPerformed

    private void rctdocfeesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rctdocfeesmnitActionPerformed
        com.afrisoftech.hospinventory.DispenseBillingIntfr comp = new com.afrisoftech.hospinventory.DispenseBillingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_rctdocfeesmnitActionPerformed

    private void labpendingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labpendingmnitActionPerformed
        com.afrisoftech.laboratory.LabPendingRequestsIntfr comp = new com.afrisoftech.laboratory.LabPendingRequestsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_labpendingmnitActionPerformed

    private void ipdaysmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipdaysmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, IPDays, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_ipdaysmnitActionPerformed

    private void marketertnovermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketertnovermnitActionPerformed
        com.afrisoftech.lib.HosMarketerDatePanel dates = new com.afrisoftech.lib.HosMarketerDatePanel(this, pConnDB, true, MarketerTnover, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_marketertnovermnitActionPerformed

    private void payertnovermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payertnovermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, PayerTnover, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_payertnovermnitActionPerformed

    private void approvedagentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvedagentsmnitActionPerformed
        com.afrisoftech.accounting.SchemeMarketersIntfr prod = new com.afrisoftech.accounting.SchemeMarketersIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_approvedagentsmnitActionPerformed

    private void schmdetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schmdetmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, SchmDet, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_schmdetmnitActionPerformed

    private void writeofflimitsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeofflimitsmnitActionPerformed
        com.afrisoftech.accounting.DebtLimitIntfr prod = new com.afrisoftech.accounting.DebtLimitIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_writeofflimitsmnitActionPerformed

    private void automatedwoffsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automatedwoffsmnitActionPerformed
        com.afrisoftech.accounting.WritOffMiscDebtsIntrIntfr prod = new com.afrisoftech.accounting.WritOffMiscDebtsIntrIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_automatedwoffsmnitActionPerformed

    private void admissbywardmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissbywardmnitActionPerformed
        com.afrisoftech.lib.HosWardsDatePanel dates = new com.afrisoftech.lib.HosWardsDatePanel(this, pConnDB, true, admByWard, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_admissbywardmnitActionPerformed

    private void allocatewtocrtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocatewtocrtmnitActionPerformed
        com.afrisoftech.accounting.AllocateWithoutCreditsIntfr prod = new com.afrisoftech.accounting.AllocateWithoutCreditsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_allocatewtocrtmnitActionPerformed

    private void newbornsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbornsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, Births, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_newbornsmnitActionPerformed

    private void adjustinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjustinvmnitActionPerformed
        com.afrisoftech.accounting.AdjustInvoicesIntfr prod = new com.afrisoftech.accounting.AdjustInvoicesIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_adjustinvmnitActionPerformed

    private void creditsSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditsSummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, CreditsSumm, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_creditsSummnitActionPerformed

    private void paymentssummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentssummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, PaymentsSumm, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_paymentssummnitActionPerformed

    private void resubmissionbyschmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resubmissionbyschmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, RsbClaimsByScm, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_resubmissionbyschmnitActionPerformed

    private void rtclaimsbyscmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtclaimsbyscmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, RtClaimsByScm, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_rtclaimsbyscmnitActionPerformed

    private void rtclaimssummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtclaimssummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, RtClaimsSumm, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_rtclaimssummnitActionPerformed

    private void DebtorscrnotemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebtorscrnotemnitActionPerformed
        com.afrisoftech.lib.HosScemesCrNoteDatePanel dates = new com.afrisoftech.lib.HosScemesCrNoteDatePanel(this, pConnDB, true, DebtCrNote, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_DebtorscrnotemnitActionPerformed

    private void payrollledgermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollledgermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, PayrollLedger, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_payrollledgermnitActionPerformed

    private void ageingbycatmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageingbycatmnitActionPerformed
        com.afrisoftech.lib.HosCredCatDatePanel dates = new com.afrisoftech.lib.HosCredCatDatePanel(this, pConnDB, true, CreditorsAgeingByCat, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_ageingbycatmnitActionPerformed

    private void resubmitclaimsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resubmitclaimsmnitActionPerformed
        com.afrisoftech.accounting.ResubmissionIntfr prod = new com.afrisoftech.accounting.ResubmissionIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_resubmitclaimsmnitActionPerformed

    private void rtclaimsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtclaimsmnitActionPerformed
        com.afrisoftech.accounting.RetunedClaimIntfr prod = new com.afrisoftech.accounting.RetunedClaimIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_rtclaimsmnitActionPerformed

    private void creditallocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditallocmnitActionPerformed
        com.afrisoftech.accounting.AllocateCreditorsInvsIntfr prod = new com.afrisoftech.accounting.AllocateCreditorsInvsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_creditallocmnitActionPerformed

    private void chgintrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chgintrmnitActionPerformed
        com.afrisoftech.accounting.ChargeDebtIntrIntfr prod = new com.afrisoftech.accounting.ChargeDebtIntrIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_chgintrmnitActionPerformed

    private void DispdelnotemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispdelnotemnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Ddnote, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_DispdelnotemnitActionPerformed

    private void PayerallocdetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayerallocdetmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.PayerAllocDet, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_PayerallocdetmnitActionPerformed

    private void anualplmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anualplmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AnnualPl, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_anualplmnitActionPerformed

    private void AnnualtbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnualtbmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AnnualTb, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_AnnualtbmnitActionPerformed

    private void wrtsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wrtsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.WrtSumm, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_wrtsummnitActionPerformed

    private void wrtperscmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wrtperscmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.WrtByScm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_wrtperscmnitActionPerformed

    private void ScmsalesSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScmsalesSummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ScmSalesSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_ScmsalesSummnitActionPerformed

    private void debtcollsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtcollsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DebtCollSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_debtcollsummnitActionPerformed

    private void dormaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dormaccmnitActionPerformed
        com.afrisoftech.reports.DormSchemesPdf policy = new com.afrisoftech.reports.DormSchemesPdf();
        policy.DormSchemesPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_dormaccmnitActionPerformed

    private void payerstaffamdmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerstaffamdmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.PayerStaffAmd, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_payerstaffamdmnitActionPerformed

    private void ScmammnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScmammnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.ScmAmm, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_ScmammnitActionPerformed

    private void cashflowoptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashflowoptmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CasFlowOeprt, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_cashflowoptmnitActionPerformed

    private void dispconfperpayermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispconfperpayermnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DispConfPerPayer, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_dispconfperpayermnitActionPerformed

    private void confdispperscmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confdispperscmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.DispConfPerScm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_confdispperscmnitActionPerformed

    private void scmepfmmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scmepfmmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.ScmPerf, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_scmepfmmnitActionPerformed

    private void oprevbrkdwnmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oprevbrkdwnmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.AmbulRep, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_oprevbrkdwnmnitActionPerformed

    private void debtinvoicingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtinvoicingmnitActionPerformed
        com.afrisoftech.accounting.DebtorsBillingIntfr prod = new com.afrisoftech.accounting.DebtorsBillingIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
    }//GEN-LAST:event_debtinvoicingmnitActionPerformed

    private void WriteoffscrtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WriteoffscrtmnitActionPerformed
        com.afrisoftech.accounting.WriteOffsCreditsIntfr comp = new com.afrisoftech.accounting.WriteOffsCreditsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_WriteoffscrtmnitActionPerformed

    private void WriteoffsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WriteoffsmnitActionPerformed
        com.afrisoftech.accounting.WriteOffsInvIntfr comp = new com.afrisoftech.accounting.WriteOffsInvIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// Add your handling code here:
    }//GEN-LAST:event_WriteoffsmnitActionPerformed

    private void changepayermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepayermnitActionPerformed
        com.afrisoftech.accounting.ChangeAccountsPayerIntfr comp = new com.afrisoftech.accounting.ChangeAccountsPayerIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_changepayermnitActionPerformed

    private void patstmtsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patstmtsummnitActionPerformed
        com.afrisoftech.accounting.PatientStmtSummIntfr comp = new com.afrisoftech.accounting.PatientStmtSummIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_patstmtsummnitActionPerformed

    private void bookingsconfchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingsconfchmnitActionPerformed
        com.afrisoftech.accounting.BookingsConfimIntfr comp = new com.afrisoftech.accounting.BookingsConfimIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_bookingsconfchmnitActionPerformed

    private void bookingschsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingschsmnitActionPerformed
        TheatreBookingIntfr comp = new TheatreBookingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
    }//GEN-LAST:event_bookingschsmnitActionPerformed

    private void journalsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_journalsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Journals, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_journalsmnitActionPerformed

    private void payerperfmmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerperfmmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.PayerPfm, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_payerperfmmnitActionPerformed

    private void QuartelyRevCompmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuartelyRevCompmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.QuarterlyRevComp, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_QuartelyRevCompmnitActionPerformed

    private void MonthrevCompmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthrevCompmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MonthlyRevComp, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_MonthrevCompmnitActionPerformed

    private void AieRepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AieRepmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AieB, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_AieRepmnitActionPerformed

    private void InpatientAnalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InpatientAnalysismnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.IpAnalySummaryRev, connectDB);

        dates.setVisible(true);           // Add your handling code here:
    }//GEN-LAST:event_InpatientAnalysismnitActionPerformed

    private void AiemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AiemnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.AieIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }           // Add your handling code here:
    }//GEN-LAST:event_AiemnitActionPerformed

    private void RevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RevmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.RevenuleIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_RevmnitActionPerformed

    private void BedOccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BedOccmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.BedOccupancyIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_BedOccmnitActionPerformed

    private void weeklyrevCompmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weeklyrevCompmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.WeeklySummaryRev, connectDB);

        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_weeklyrevCompmnitActionPerformed

    private void AttendancesummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttendancesummnitActionPerformed
 
        com.afrisoftech.lib.HosAttendanceDatePanel dates = new com.afrisoftech.lib.HosAttendanceDatePanel(this, true, this.OpAttSumm, connectDB);

        dates.setVisible(true); 
//        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.OpAttSumm, connectDB);
//
//        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_AttendancesummnitActionPerformed

    private void accabtexpiremnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accabtexpiremnitActionPerformed
        com.afrisoftech.reports.SchmAboutToExpPdf policy = new com.afrisoftech.reports.SchmAboutToExpPdf();
        policy.SchmAboutToExpPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_accabtexpiremnitActionPerformed

    private void annualpayersummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annualpayersummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AnnualPayerAgSumm, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_annualpayersummnitActionPerformed

    private void anualPayeragmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anualPayeragmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.AnnualPayerAg, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_anualPayeragmnitActionPerformed

    private void creditsbypayermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditsbypayermnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtCredt, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_creditsbypayermnitActionPerformed

    private void CashanalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashanalysismnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CashAnalysis, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_CashanalysismnitActionPerformed

    private void impdocregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impdocregmnitActionPerformed
        com.afrisoftech.accounting.ImpDocRegisterIntfr prod = new com.afrisoftech.accounting.ImpDocRegisterIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_impdocregmnitActionPerformed

    private void docregistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docregistermnitActionPerformed
        com.afrisoftech.accounting.DocRegisterIntfr prod = new com.afrisoftech.accounting.DocRegisterIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_docregistermnitActionPerformed

    private void QuarterrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuarterrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.QuarterlyRev, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_QuarterrevmnitActionPerformed

    private void provdocscmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provdocscmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DocScmProvSumm, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_provdocscmnitActionPerformed

    private void docprovsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docprovsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DocProvSumm, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_docprovsummnitActionPerformed

    private void provperdocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provperdocmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocProv, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_provperdocmnitActionPerformed

    private void revpricelistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revpricelistmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.RevPrices, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_revpricelistmnitActionPerformed

    private void deathnotficationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deathnotficationmnitActionPerformed
        com.afrisoftech.accounting.DeathNotificationIntfr prod = new com.afrisoftech.accounting.DeathNotificationIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_deathnotficationmnitActionPerformed

    private void bthregistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthregistermnitActionPerformed
        com.afrisoftech.records.BirthsIntfr prod = new com.afrisoftech.records.BirthsIntfr(connectDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_bthregistermnitActionPerformed

    private void allocchqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocchqmnitActionPerformed
        com.afrisoftech.lib.HosChqsPanel dates = new com.afrisoftech.lib.HosChqsPanel(this, pConnDB, true, this.AllocBychq, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_allocchqmnitActionPerformed

    private void confdispsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confdispsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ConfDisp, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_confdispsummnitActionPerformed

    private void payeractaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payeractaccmnitActionPerformed
        com.afrisoftech.lib.HosDebtorPanel dates = new com.afrisoftech.lib.HosDebtorPanel(this, pConnDB, true, this.PayerActAcc, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_payeractaccmnitActionPerformed

    private void attdperscmdetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attdperscmdetmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.AttPerscmDet, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_attdperscmdetmnitActionPerformed

    private void scmperfrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scmperfrmnitActionPerformed
        com.afrisoftech.reports.SchemePerformPdf policy = new com.afrisoftech.reports.SchemePerformPdf();
        policy.SchemePerformPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_scmperfrmnitActionPerformed

    private void autolimitsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autolimitsmnitActionPerformed
        com.afrisoftech.reports.SchemeLimitStatusPdf policy = new com.afrisoftech.reports.SchemeLimitStatusPdf();
        policy.SchemeLimitStatusPdf(connectDB);     // Add your handling code here:
    }//GEN-LAST:event_autolimitsmnitActionPerformed

    private void scmstatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scmstatusmnitActionPerformed
        com.afrisoftech.reports.SchmAccStatusPdf policy = new com.afrisoftech.reports.SchmAccStatusPdf();
        policy.SchmAccStatusPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_scmstatusmnitActionPerformed

    private void TranssummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TranssummnitActionPerformed
        com.afrisoftech.lib.AccountHosDatePanel dates = new com.afrisoftech.lib.AccountHosDatePanel(this, pConnDB, true, this.TransSumm, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_TranssummnitActionPerformed

    private void bankrecdiscrpmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankrecdiscrpmnitActionPerformed
        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.BankRecDiscr, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_bankrecdiscrpmnitActionPerformed

    private void shiftrepDetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftrepDetmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.ShiftRef, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_shiftrepDetmnitActionPerformed

    private void payeepymtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payeepymtmnitActionPerformed
        com.afrisoftech.lib.HosPayeeDatePanel dates = new com.afrisoftech.lib.HosPayeeDatePanel(this, pConnDB, true, this.Paymentpercrdet, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_payeepymtmnitActionPerformed

    private void crdstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crdstmtmnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, this.CreditorsStmt, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_crdstmtmnitActionPerformed

    private void schmsdebtCollmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schmsdebtCollmnitActionPerformed
        com.afrisoftech.lib.HosCollectorDatePanel dates = new com.afrisoftech.lib.HosCollectorDatePanel(this, pConnDB, true, this.DebtCollector, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_schmsdebtCollmnitActionPerformed

    private void scmabtlimitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scmabtlimitmnitActionPerformed
        com.afrisoftech.reports.SchemesAbtExceedLimitPdf policy = new com.afrisoftech.reports.SchemesAbtExceedLimitPdf();
        policy.SchemesAbtExceedLimitPdf(connectDB);     // Add your handling code here:
    }//GEN-LAST:event_scmabtlimitmnitActionPerformed

    private void extactscmmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extactscmmnitActionPerformed
        com.afrisoftech.reports.ExcLimitActScmPdf policy = new com.afrisoftech.reports.ExcLimitActScmPdf();
        policy.ExcLimitActScmPdf(connectDB);       // Add your handling code here:
    }//GEN-LAST:event_extactscmmnitActionPerformed

    private void bnkchargesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnkchargesmnitActionPerformed
        com.afrisoftech.accounting.OtherChargesintfr prod = new com.afrisoftech.accounting.OtherChargesintfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_bnkchargesmnitActionPerformed

    private void deathregistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deathregistermnitActionPerformed
        com.afrisoftech.records.MotBillingIntfr prod = new com.afrisoftech.records.MotBillingIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_deathregistermnitActionPerformed

    private void sickleavemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sickleavemnitActionPerformed
        com.afrisoftech.accounting.SickLeaveIntfr prod = new com.afrisoftech.accounting.SickLeaveIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_sickleavemnitActionPerformed

    private void mergdispmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergdispmnitActionPerformed
        com.afrisoftech.hospital.MergingDispIntfr prod = new com.afrisoftech.hospital.MergingDispIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_mergdispmnitActionPerformed

    private void DispConfSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispConfSummnitActionPerformed
        com.afrisoftech.accounting.DispConfimSummaryIntfr prod = new com.afrisoftech.accounting.DispConfimSummaryIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_DispConfSummnitActionPerformed

    private void DispConfirmationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispConfirmationmnitActionPerformed
        com.afrisoftech.accounting.DispConfimIntfr prod = new com.afrisoftech.accounting.DispConfimIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_DispConfirmationmnitActionPerformed

    private void limitconsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limitconsmnitActionPerformed
        com.afrisoftech.hospital.LimitConsIntfr prod = new com.afrisoftech.hospital.LimitConsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_limitconsmnitActionPerformed

    private void adjpricesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjpricesmnitActionPerformed
        /*
         * com.afrisoftech.hospital.AmmendRevpricesintfr prod = new
         * com.afrisoftech.hospital.AmmendRevpricesintfr(connectDB,pConnDB);
         * saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * prod.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */       // Add your handling code here:
    }//GEN-LAST:event_adjpricesmnitActionPerformed

    private void YearyrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearyrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.YearlyRev, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_YearyrevmnitActionPerformed

    private void MonthrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MonthlyRev, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_MonthrevmnitActionPerformed

    private void DailyrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DailyrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DailysRev, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_DailyrevmnitActionPerformed

    private void weeklyrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weeklyrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.WeeklyRev, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_weeklyrevmnitActionPerformed

    private void annualageingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annualageingmnitActionPerformed
        com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.AnnualDebtors, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_annualageingmnitActionPerformed

    private void ApprovemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApprovemnitActionPerformed
        com.afrisoftech.accounting.ApproveDepreciationClass depreciation = new com.afrisoftech.accounting.ApproveDepreciationClass(connectDB, pConnDB);

        System.out.println("The depreciation object : " + depreciation.toString());

        depreciation.DepreciationClass();        // Add your handling code here:
    }//GEN-LAST:event_ApprovemnitActionPerformed

    private void insuncemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuncemnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.AmmendExRateIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_insuncemnitActionPerformed

    private void aslocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aslocmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.TaxClaimRefundIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_aslocmnitActionPerformed

    private void astregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_astregmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.GroupStatisticIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_astregmnitActionPerformed

    private void asrepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asrepmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.FormatSetIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_asrepmnitActionPerformed

    private void AssetAlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssetAlmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.ExceptionalItemsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_AssetAlmnitActionPerformed

    private void DeprecatesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeprecatesmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.ExchangeRateIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
    }//GEN-LAST:event_DeprecatesmnitActionPerformed

    private void DeprecmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeprecmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.management.CurrencyIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_DeprecmnitActionPerformed

    private void budgetamendmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetamendmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.BudgetAmendementintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_budgetamendmnitActionPerformed

    private void budgettotalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgettotalmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.BudgetDTotalintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_budgettotalmnitActionPerformed

    private void budgetdeptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetdeptmnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.BudgetDepttintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_budgetdeptmnitActionPerformed

    private void budgetsectmintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetsectmintActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.accounting.BudgetsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_budgetsectmintActionPerformed

    private void taxreturnmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxreturnmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TaxReturn, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_taxreturnmnitActionPerformed

    private void CorporateTaxmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorporateTaxmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CorporateTax, connectDB);

        dates.setVisible(true);

        // Add your handling code here:
    }//GEN-LAST:event_CorporateTaxmnitActionPerformed

    private void CorporatemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorporatemnitActionPerformed
        com.afrisoftech.hospital.CorporateIntfr prod = new com.afrisoftech.hospital.CorporateIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_CorporatemnitActionPerformed

    private void OpcreditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcreditmnitActionPerformed
        com.afrisoftech.lib.OpCreditPanel dates = new com.afrisoftech.lib.OpCreditPanel(this, true, this.OpCredit, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_OpcreditmnitActionPerformed

    private void IPCreditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPCreditmnitActionPerformed
        com.afrisoftech.lib.HosCredInPatPanel dates = new com.afrisoftech.lib.HosCredInPatPanel(this, true, this.FinalInPatCredit, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_IPCreditmnitActionPerformed

    private void CreditnoteSchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditnoteSchmnitActionPerformed
        com.afrisoftech.hospital.CreditInvAmmendIntfr prod = new com.afrisoftech.hospital.CreditInvAmmendIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        /*
         * com.afrisoftech.hospital.CreditNoteIntfr prod = new
         * com.afrisoftech.hospital.CreditNoteIntfr(connectDB,pConnDB);
         * saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * prod.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */
        // Add your handling code here:
    }//GEN-LAST:event_CreditnoteSchmnitActionPerformed

    private void postdatedchqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postdatedchqmnitActionPerformed
        com.afrisoftech.reports.PostdatedChqsPdf policy = new com.afrisoftech.reports.PostdatedChqsPdf();
        policy.PostdatedChqsPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_postdatedchqmnitActionPerformed

    private void DebtStatementmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebtStatementmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtStmSummary, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_DebtStatementmnitActionPerformed

    private void DetinvbyinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetinvbyinvmnitActionPerformed
        com.afrisoftech.lib.HosInvPanel dates = new com.afrisoftech.lib.HosInvPanel(this, true, this.DetInvByInv, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_DetinvbyinvmnitActionPerformed

    private void dispatchperpayersummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchperpayersummnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DispPerPayerSumm, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_dispatchperpayersummnitActionPerformed

    private void paymntadjmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymntadjmnitActionPerformed
        int rowsNo = 0;

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '" + System.getProperty("currentuser") + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");
            } else {

                //   while (rset.next()){
                //if(this.getShiftStatus()){
                com.afrisoftech.accounting.OtherPymAdjintfr prod = new com.afrisoftech.accounting.OtherPymAdjintfr(connectDB, pConnDB);
                saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    prod.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

                //  com.afrisoftech.accounting.InpatientRecpIntfr comp = new com.afrisoftech.accounting.InpatientRecpIntfr(connectDB,pConnDB);
                //  saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                // com.afrisoftech.hospital.InpatientReceiptsIntfr comp = new com.afrisoftech.hospital.InpatientReceiptsIntfr(connectDB,pConnDB);
                // comp.getContentPane().add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
        /*
         * com.afrisoftech.accounting.OtherPymAdjintfr prod = new
         * com.afrisoftech.accounting.OtherPymAdjintfr(connectDB,pConnDB);
         * saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * prod.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */// Add your handling code here:
    }//GEN-LAST:event_paymntadjmnitActionPerformed

    private void wardoccstatisticsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardoccstatisticsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.WardOccSt, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_wardoccstatisticsmnitActionPerformed

    private void allocbypayermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocbypayermnitActionPerformed
        com.afrisoftech.accounting.AllocateInvoicesByPayerIntfr prod = new com.afrisoftech.accounting.AllocateInvoicesByPayerIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_allocbypayermnitActionPerformed

    private void cancelledchqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelledchqmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CancelledChqs, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_cancelledchqmnitActionPerformed

    private void creditnotesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditnotesmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CreditNotes, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_creditnotesmnitActionPerformed

    private void billsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billsummnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, this.InpatBillSamm, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_billsummnitActionPerformed

//GEN-FIRST:event_inpatBillSummActionPerformed
//GEN-LAST:event_inpatBillSummActionPerformed
    private void inpatbillsammActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpatbillsammActionPerformed
    }   // Add your handling code here:
//GEN-LAST:event_inpatbillsammActionPerformed
    private void stmtsummperdebtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stmtsummperdebtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.StmtSummPerDebt, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_stmtsummperdebtmnitActionPerformed

    private void expiredaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expiredaccmnitActionPerformed
        com.afrisoftech.reports.ExpiredSchmAccPdf comp = new com.afrisoftech.reports.ExpiredSchmAccPdf();
        comp.ExpiredSchmAccPdf(connectDB); // Add your handling code here:
    }//GEN-LAST:event_expiredaccmnitActionPerformed

    private void scmattendsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scmattendsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AttendPerScm, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_scmattendsummnitActionPerformed

    private void closedschemesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedschemesmnitActionPerformed
        com.afrisoftech.reports.ClosedSchmAccPdf comp = new com.afrisoftech.reports.ClosedSchmAccPdf();
        comp.ClosedSchmAccPdf(connectDB); // Add your handling code here:
    }//GEN-LAST:event_closedschemesmnitActionPerformed

    private void whtsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whtsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.WHTSUMM, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_whtsummnitActionPerformed

    private void schemesalesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemesalesmnitActionPerformed
        com.afrisoftech.lib.HosMarketerDatePanel dates = new com.afrisoftech.lib.HosMarketerDatePanel(this, pConnDB, true, this.SchemeSales, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_schemesalesmnitActionPerformed

    private void banksummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banksummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.BankingSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_banksummnitActionPerformed

    private void bankingsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankingsmnitActionPerformed
        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.BankingPerBK, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_bankingsmnitActionPerformed

    private void unrecitemsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unrecitemsmnitActionPerformed
        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.UnReconcItemsPerbk, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_unrecitemsmnitActionPerformed

    private void changeiplimitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeiplimitmnitActionPerformed
        javax.swing.JInternalFrame prod = new ChangePatLimitIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
    }//GEN-LAST:event_changeiplimitmnitActionPerformed

    private void creditorsmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsmnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_creditorsmnActionPerformed

    private void iplimitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iplimitmnitActionPerformed
        javax.swing.JInternalFrame prod = new IpLimitIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_iplimitmnitActionPerformed

    private void mergschaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergschaccmnitActionPerformed
        com.afrisoftech.accounting.MergingAccountsIntfr prod = new com.afrisoftech.accounting.MergingAccountsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_mergschaccmnitActionPerformed

    private void UnreconcitemsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnreconcitemsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnReconcItems, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_UnreconcitemsmnitActionPerformed

    private void bankreccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankreccmnitActionPerformed
        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.BankRecc, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_bankreccmnitActionPerformed

    private void unpaidDispInvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unpaidDispInvmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnpaidDisp, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_unpaidDispInvmnitActionPerformed

    private void allocsumnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocsumnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AllocationDetail, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_allocsumnitActionPerformed

    private void debtosbalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtosbalmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DebtOSBAlSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_debtosbalmnitActionPerformed

    private void provisionsperdebtormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provisionsperdebtormnitActionPerformed
        com.afrisoftech.accounting.ProvisionsPerDebtorIntfr prod = new com.afrisoftech.accounting.ProvisionsPerDebtorIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_provisionsperdebtormnitActionPerformed

    private void DispatchSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispatchSummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DispInvSumm, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_DispatchSummnitActionPerformed

    private void changepaymodesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepaymodesmnitActionPerformed
        javax.swing.JInternalFrame prod = new ChangePatPaymodeIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_changepaymodesmnitActionPerformed

//GEN-FIRST:event_changepaymodeActionPerformed
//GEN-LAST:event_changepaymodeActionPerformed
    private void merginvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_merginvmnitActionPerformed
        javax.swing.JInternalFrame prod = new MergingInvIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_merginvmnitActionPerformed

    private void allocsummperdebtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocsummperdebtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.PayerAllocSumm, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_allocsummperdebtmnitActionPerformed

    private void invwithbalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invwithbalmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FinalInvBal, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_invwithbalmnitActionPerformed

    private void debtrectallocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtrectallocmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DebtAllocSumm, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_debtrectallocmnitActionPerformed

    private void scmallocsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scmallocsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ScmAllocSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_scmallocsummnitActionPerformed

    private void nhifdispmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhifdispmnitActionPerformed
        com.afrisoftech.lib.HosDispartchDatePanel dates = new com.afrisoftech.lib.HosDispartchDatePanel(this, pConnDB, true, this.NhifDisp, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_nhifdispmnitActionPerformed

    private void shiftstotalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftstotalmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ShiftsTotal, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_shiftstotalmnitActionPerformed

    private void credittransfmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credittransfmnitActionPerformed
        com.afrisoftech.accounting.DebtCreditTransIntfr prod = new com.afrisoftech.accounting.DebtCreditTransIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_credittransfmnitActionPerformed

    private void paidupbyscmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidupbyscmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocPaidupPerScm, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_paidupbyscmnitActionPerformed

    private void paidupperdebtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidupperdebtmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocPaidupPerDebtor, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_paidupperdebtmnitActionPerformed

    private void stmtperdebtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stmtperdebtmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocStmtPerDebtor, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_stmtperdebtmnitActionPerformed

    private void stmtscmmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stmtscmmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DoctorStmScm, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_stmtscmmnitActionPerformed

    private void docearndeductmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docearndeductmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DocEarnDeductions, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_docearndeductmnitActionPerformed

    private void provperschmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provperschmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.ProvPerSchm, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_provperschmnitActionPerformed

    private void provperdebtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provperdebtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.ProvPerDebtor, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_provperdebtmnitActionPerformed

    private void ProvisionssummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProvisionssummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ProvSumm, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_ProvisionssummnitActionPerformed

    private void provisionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provisionsmnitActionPerformed
        com.afrisoftech.accounting.ProvisionsIntfr prod = new com.afrisoftech.accounting.ProvisionsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_provisionsmnitActionPerformed

    private void ipservicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipservicesmnitActionPerformed
        //  com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.SalesBelowMk, connectDB);
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Ipservices, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_ipservicesmnitActionPerformed

    private void SummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SummarymnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnDispInv, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_SummarymnitActionPerformed

    private void uncollectedshiftsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uncollectedshiftsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UncollectedShifts, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_uncollectedshiftsmnitActionPerformed

    private void docunpaidinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docunpaidinvmnitActionPerformed

        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DoctorStmUnPaid, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_docunpaidinvmnitActionPerformed

    private void docbalsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docbalsummnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.docbals, connectDB);

        dates.setVisible(true);
        // com.afrisoftech.reports.DocBalSummPdf comp = new com.afrisoftech.reports.DocBalSummPdf();
        //  // Add your handling code here:
    }//GEN-LAST:event_docbalsummnitActionPerformed

    private void paymentperdocSummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentperdocSummnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.PaymentsPerDoctorSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_paymentperdocSummnitActionPerformed

//GEN-FIRST:event_paymtsummperdocActionPerformed
//GEN-LAST:event_paymtsummperdocActionPerformed
    private void AmmendstaffregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmmendstaffregmnitActionPerformed
        javax.swing.JInternalFrame prod = new SchemeStaffMagtIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_AmmendstaffregmnitActionPerformed

    private void pettycashshiftsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashshiftsmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.PettyCashShift, connectDB);

        dates.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_pettycashshiftsmnitActionPerformed

    private void payerageingsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerageingsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PayerAgeingSumm, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_payerageingsummnitActionPerformed

    private void debtorsyearlybalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorsyearlybalmnitActionPerformed
        com.afrisoftech.reports.DebtorsAnualSummaryPdf comp = new com.afrisoftech.reports.DebtorsAnualSummaryPdf();
        comp.DebtorsAnualSummaryPdf(connectDB);
        // Add your handling code here:
    }//GEN-LAST:event_debtorsyearlybalmnitActionPerformed

    private void accstatusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accstatusmnitActionPerformed
        com.afrisoftech.reports.ClosedDocAccPdf comp = new com.afrisoftech.reports.ClosedDocAccPdf();
        comp.ClosedDocAccPdf(connectDB); // Add your handling code here:
    }//GEN-LAST:event_accstatusmnitActionPerformed

    private void closedocaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedocaccmnitActionPerformed
        javax.swing.JInternalFrame prod = new CloseSuspDocIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_closedocaccmnitActionPerformed

    private void paidupsummmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidupsummmnitActionPerformed
        com.afrisoftech.reports.DocPaidupSummPdf comp = new com.afrisoftech.reports.DocPaidupSummPdf();
        comp.DocPaidupSummPdf(connectDB);   // Add your handling code here:
    }//GEN-LAST:event_paidupsummmnitActionPerformed

    private void whtperdocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whtperdocmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.WhtPerDoc, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_whtperdocmnitActionPerformed

    private void whtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whtmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Wht, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_whtmnitActionPerformed

    private void paymentsperdocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentsperdocmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.PaymentsPerDoctor, connectDB);

        dates.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_paymentsperdocmnitActionPerformed

    private void doctorspaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorspaymentsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DoctorsPayments, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_doctorspaymentsmnitActionPerformed

    private void detvouchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detvouchmnitActionPerformed
        com.afrisoftech.lib.HosDocVouchPanel dates = new com.afrisoftech.lib.HosDocVouchPanel(this, pConnDB, true, this.DoctorsVouchDet, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_detvouchmnitActionPerformed

    private void paymentVouchermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentVouchermnitActionPerformed
        com.afrisoftech.lib.HosDocVouchPanel dates = new com.afrisoftech.lib.HosDocVouchPanel(this, pConnDB, true, this.DoctorsVouch, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_paymentVouchermnitActionPerformed

    private void exceedlimitsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exceedlimitsmnitActionPerformed
        com.afrisoftech.reports.SchemesLimitPdf policy = new com.afrisoftech.reports.SchemesLimitPdf();
        policy.SchemesLimitPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_exceedlimitsmnitActionPerformed

    private void deductionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deductionsmnitActionPerformed
        javax.swing.JInternalFrame prod = new DocDeductionsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_deductionsmnitActionPerformed

    private void dispperdebtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispperdebtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DispatchPerDebt, connectDB);

        dates.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_dispperdebtmnitActionPerformed

    private void dispperscmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispperscmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.DispatchPerScm, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_dispperscmnitActionPerformed

    private void displistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displistmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DispatchListing, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_displistmnitActionPerformed

    private void dispatchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchmnitActionPerformed
        com.afrisoftech.lib.HosDispartchDatePanel dates = new com.afrisoftech.lib.HosDispartchDatePanel(this, pConnDB, true, this.Dispatch, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_dispatchmnitActionPerformed

    private void PerdebtormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerdebtormnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtStmtUnAppr, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_PerdebtormnitActionPerformed

    private void debtormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtormnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtStmtAppr, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_debtormnitActionPerformed

    private void SchememnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchememnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.AppInvSch, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_SchememnitActionPerformed

    private void PerschememnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerschememnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.UnAppInvSch, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_PerschememnitActionPerformed

    private void payerdetStmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerdetStmtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtStmtDet, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_payerdetStmtmnitActionPerformed

    private void wardoccupancymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardoccupancymnitActionPerformed
        com.afrisoftech.reports.PatientBedOccupancyPdf policy = new com.afrisoftech.reports.PatientBedOccupancyPdf();
        policy.PatientBedOccupancyPdf(connectDB);   // Add your handling code here:
    }//GEN-LAST:event_wardoccupancymnitActionPerformed

    private void consultantspmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultantspmnitActionPerformed
        int rowsNo = 0;

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '" + System.getProperty("currentuser") + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");
            } else {

                //   while (rset.next()){
                //if(this.getShiftStatus()){
                com.afrisoftech.accounting.ConsultantPymintfr prod = new com.afrisoftech.accounting.ConsultantPymintfr(connectDB, pConnDB);
                saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    prod.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

                //  com.afrisoftech.accounting.InpatientRecpIntfr comp = new com.afrisoftech.accounting.InpatientRecpIntfr(connectDB,pConnDB);
                //  saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                // com.afrisoftech.hospital.InpatientReceiptsIntfr comp = new com.afrisoftech.hospital.InpatientReceiptsIntfr(connectDB,pConnDB);
                // comp.getContentPane().add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        /*
         * com.afrisoftech.accounting.ConsultantPymintfr prod = new
         * com.afrisoftech.accounting.ConsultantPymintfr(connectDB,pConnDB);
         * saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * prod.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */// Add your handling code here:
    }//GEN-LAST:event_consultantspmnitActionPerformed

    private void appdocinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appdocinvmnitActionPerformed
        com.afrisoftech.accounting.ApproveDocInvoicesIntfr prod = new com.afrisoftech.accounting.ApproveDocInvoicesIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_appdocinvmnitActionPerformed

    private void unallocpymmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unallocpymmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnAllocSum, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_unallocpymmnitActionPerformed

    private void debtallocsumnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtallocsumnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtAllocSum, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_debtallocsumnitActionPerformed

    private void allocsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocsummnitActionPerformed
        biz.systempartners.reports.AllocationView prod = new biz.systempartners.reports.AllocationView(connectDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_allocsummnitActionPerformed

    private void doctorsstatementmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorsstatementmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DoctorsStmt, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_doctorsstatementmnitActionPerformed

    private void schemestaffmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemestaffmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.SchemeStaff, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_schemestaffmnitActionPerformed

    private void docsdirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docsdirActionPerformed

        invalidate();

        javax.swing.JFileChooser chooserDir = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));

        chooserDir.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        int returnVal = chooserDir.showOpenDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            System.out.println("You chose to open this file: "
                    + chooserDir.getSelectedFile().getPath());

            // filePortrait = chooserPortrait.getSelectedFile();
            // this.jTextField1.setText(filePortrait.getNam);
            //  processBrRequisitionFile(filePortrait);
            appProp.setProperty("docsdir", chooserDir.getSelectedFile().getPath());

            System.setProperty("docsdir", chooserDir.getSelectedFile().getPath());

            //jPanel.validate();
            // storePreferences();
        }

        // Add your handling code here:
    }//GEN-LAST:event_docsdirActionPerformed

    private void chekinmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chekinmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PatTimeLog, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_chekinmnitActionPerformed

    private void patlabresultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patlabresultsmnitActionPerformed
        com.afrisoftech.lib.HosPatientLabDatePanel dates = new com.afrisoftech.lib.HosPatientLabDatePanel(this, pConnDB, true, this.PatLabResults, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_patlabresultsmnitActionPerformed

    private void laboratoryresultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laboratoryresultsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.LabResults, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_laboratoryresultsmnitActionPerformed

    private void supplierinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierinvmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.SupplierInvoices, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_supplierinvmnitActionPerformed

    private void labtestsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labtestsmnitActionPerformed
        javax.swing.JInternalFrame prod = new com.afrisoftech.laboratory.LabTestsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_labtestsmnitActionPerformed

    private void allocationrepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocationrepmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.AllocRep, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_allocationrepmnitActionPerformed

    private void miscsCreditorsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miscsCreditorsmnitActionPerformed

        com.afrisoftech.accounting.CreditMiscsIntfr prod = new com.afrisoftech.accounting.CreditMiscsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_miscsCreditorsmnitActionPerformed

    private void pharmperformmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmperformmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PharmPerfom, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_pharmperformmnitActionPerformed

    private void timelogmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timelogmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TimeLog, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_timelogmnitActionPerformed

    private void submitQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitQueryActionPerformed

        if (barChart.isSelected()) {

            graphicalView.barChart = true;

            graphicalView.pieChart = false;

            graphicalView.xyChart = false;

        } else if (pieChart.isSelected()) {

            graphicalView.barChart = false;

            graphicalView.pieChart = true;

            graphicalView.xyChart = false;

        } else {

            graphicalView.barChart = false;

            graphicalView.pieChart = false;

            graphicalView.xyChart = true;
        }

        submitQueryString();

        isCustomQuery = true;

        graphViewDialog.dispose();

// Add your handling code here:
    }//GEN-LAST:event_submitQueryActionPerformed

    private void admissiomnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissiomnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AdmissionSheet, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_admissiomnitActionPerformed

    private void serviceAccptslipmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceAccptslipmnitActionPerformed
        javax.swing.JInternalFrame prod = new ServiceAccSlipIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_serviceAccptslipmnitActionPerformed

    private void specimensmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specimensmnitActionPerformed
        com.afrisoftech.reports.LabSpecimenPdf policy = new com.afrisoftech.reports.LabSpecimenPdf();
        policy.LabSpecimenPdf(connectDB);
        // Add your handling code here:
    }//GEN-LAST:event_specimensmnitActionPerformed

    private void labresultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labresultsmnitActionPerformed
        javax.swing.JInternalFrame prod = new com.afrisoftech.laboratory.LabParametersIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_labresultsmnitActionPerformed

    private void labspecimensmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labspecimensmnitActionPerformed
        javax.swing.JInternalFrame prod = new com.afrisoftech.laboratory.SpecimensIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_labspecimensmnitActionPerformed

    private void laboratorymnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laboratorymnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_laboratorymnActionPerformed

    private void labregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labregmnitActionPerformed
        javax.swing.JInternalFrame prod = new com.afrisoftech.laboratory.LabRegIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_labregmnitActionPerformed

    private void invammendmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invammendmnitActionPerformed
        javax.swing.JInternalFrame prod = new InvAmmendIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_invammendmnitActionPerformed

    private void partlyallocinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partlyallocinvmnitActionPerformed
        com.afrisoftech.accounting.PartlyAllocateIntfr prod = new com.afrisoftech.accounting.PartlyAllocateIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_partlyallocinvmnitActionPerformed

    private void expensesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expensesmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Expenses, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_expensesmnitActionPerformed

    private void interimnoticemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interimnoticemnitActionPerformed
        javax.swing.JInternalFrame prod = new IntFooterIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_interimnoticemnitActionPerformed

    private void cancelQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelQueryActionPerformed
        xaxisComboBox.setModel(null);       // Add your handling code here:
    }//GEN-LAST:event_cancelQueryActionPerformed

    private void closeDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeDialogActionPerformed
        this.graphViewDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_closeDialogActionPerformed

    private void xaxisComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xaxisComboBoxActionPerformed

        //        columnSelectorScrollPane.setViewportView(null);
        populateColumnSelectorTable();

        javax.swing.table.DefaultTableModel columnTableModel = (javax.swing.table.DefaultTableModel) columnSelectorTable.getModel();

        for (int k = 0; k < columnTableModel.getRowCount(); k++) {

            if (columnTableModel.getValueAt(k, 0) == null) {

                columnTableModel.removeRow(k);

            }

        }        // Add your handling code here:
    }//GEN-LAST:event_xaxisComboBoxActionPerformed

    private void patdocstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patdocstmtmnitActionPerformed
        javax.swing.JInternalFrame prod = new PatientDocStmtntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_patdocstmtmnitActionPerformed

    private void doctstmtpaidinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctstmtpaidinvmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocPaidInv, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_doctstmtpaidinvmnitActionPerformed

    private void oprevbyaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oprevbyaccmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.OpRevByAcc, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_oprevbyaccmnitActionPerformed

    private void iprevbyaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iprevbyaccmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.IpRevByAcc, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_iprevbyaccmnitActionPerformed

    private void patstmtsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patstmtsmnitActionPerformed
        javax.swing.JInternalFrame prod = new PatientStmtntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_patstmtsmnitActionPerformed

    private void iprevrptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iprevrptmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.IpRev, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_iprevrptmnitActionPerformed

    private void oprevrptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oprevrptmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.OpRev, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_oprevrptmnitActionPerformed

    private void financeopermnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_financeopermnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_financeopermnActionPerformed

    private void nhifinvoicemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhifinvoicemnitActionPerformed
        com.afrisoftech.lib.HosInPatDatePanel dates = new com.afrisoftech.lib.HosInPatDatePanel(this, pConnDB, true, this.NhifInv, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_nhifinvoicemnitActionPerformed

    private void mortdischmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mortdischmnitActionPerformed
        com.afrisoftech.accounting.BodyCollectionIntfr comp = new com.afrisoftech.accounting.BodyCollectionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_mortdischmnitActionPerformed

    private void paymentspercreditormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentspercreditormnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, this.PaymtsPerCreditors, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_paymentspercreditormnitActionPerformed

    private void invpercrdmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invpercrdmnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, this.InvPerCreditors, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_invpercrdmnitActionPerformed

    private void receiptperpayermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptperpayermnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.PayerRct, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_receiptperpayermnitActionPerformed

    private void pativoicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pativoicesmnitActionPerformed
        com.afrisoftech.lib.HosPatientInvDatePanel dates = new com.afrisoftech.lib.HosPatientInvDatePanel(this, pConnDB, true, this.InvByInv, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_pativoicesmnitActionPerformed

    private void totalinpatrecmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalinpatrecmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TotalInpatRecp, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_totalinpatrecmnitActionPerformed

    private void CashsalesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashsalesmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CashSaleRep, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_CashsalesmnitActionPerformed

    private void revrepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revrepmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.RevRep, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_revrepmnitActionPerformed

    private void patientaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientaccmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PatBal, connectDB);

        dates.setVisible(true);

        // Add your handling code here:
    }//GEN-LAST:event_patientaccmnitActionPerformed

    private void totalschemeinvlistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalschemeinvlistmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TotalSchemeInv, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_totalschemeinvlistmnitActionPerformed

    private void debreceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debreceiptsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DebtorsRct, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_debreceiptsmnitActionPerformed

    private void finalisedinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalisedinvmnitActionPerformed
        com.afrisoftech.lib.HosDebtorFinDatePanel dates = new com.afrisoftech.lib.HosDebtorFinDatePanel(this, true, this.FinInv, connectDB);

        dates.setVisible(true);

// Add your handling code here:
    }//GEN-LAST:event_finalisedinvmnitActionPerformed

    private void inpatcashinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpatcashinvmnitActionPerformed
        javax.swing.JInternalFrame prod = new FinalisingInpatientBillIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_inpatcashinvmnitActionPerformed

    private void miscdebtorsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miscdebtorsmnitActionPerformed
        com.afrisoftech.accounting.DebtMiscsIntfr prod = new com.afrisoftech.accounting.DebtMiscsIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_miscdebtorsmnitActionPerformed

    private void unfinalisedinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfinalisedinvmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.UnFinInv, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_unfinalisedinvmnitActionPerformed

    private void SalesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalesmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.CashSalesBrdDpt, connectDB);

        dates.setVisible(true);
        // com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this,true, this.PharmSales, connectDB);

        //  dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_SalesmnitActionPerformed

    private void pettycashVouchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashVouchmnitActionPerformed
        com.afrisoftech.lib.HosPetCashVouchPanel dates = new com.afrisoftech.lib.HosPetCashVouchPanel(this, pConnDB, true, this.PettyVouch, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_pettycashVouchmnitActionPerformed

    private void otherVouchermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherVouchermnitActionPerformed
        com.afrisoftech.lib.HosCreditorsVouchPanel dates = new com.afrisoftech.lib.HosCreditorsVouchPanel(this, pConnDB, true, this.OtherVouch, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_otherVouchermnitActionPerformed

    private void CrdVouchermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrdVouchermnitActionPerformed
        com.afrisoftech.accounting.Reprinting_vouchers_Dialog nw = new com.afrisoftech.accounting.Reprinting_vouchers_Dialog(new javax.swing.JFrame(), true, connectDB, null);
        nw.setBounds(250, 100, 400, 300);
        nw.setVisible(true);
    }//GEN-LAST:event_CrdVouchermnitActionPerformed

    private void docVouchermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docVouchermnitActionPerformed
        com.afrisoftech.lib.HosCreditorsVouchPanel dates = new com.afrisoftech.lib.HosCreditorsVouchPanel(this, pConnDB, true, this.DocVouch, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_docVouchermnitActionPerformed

    private void approveinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveinvmnitActionPerformed
        com.afrisoftech.accounting.ApproveInvoicesIntfr prod = new com.afrisoftech.accounting.ApproveInvoicesIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_approveinvmnitActionPerformed

    private void payerageingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payerageingmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.AgeingByPayer, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_payerageingmnitActionPerformed

    private void nhiflistcreditsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhiflistcreditsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.NhifCredits, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_nhiflistcreditsmnitActionPerformed

    private void invbyinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invbyinvmnitActionPerformed
        com.afrisoftech.lib.HosInvPanel dates = new com.afrisoftech.lib.HosInvPanel(this, true, this.InvByInv, connectDB);

        dates.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_invbyinvmnitActionPerformed

    private void doctorsstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorsstmtmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DocStmt, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_doctorsstmtmnitActionPerformed

    private void crdtstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crdtstmtmnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, this.CredtStmt, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_crdtstmtmnitActionPerformed

    private void detailedstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedstmtmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.DetStmt, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_detailedstmtmnitActionPerformed

    private void rpatientmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpatientmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.InPatAttSheet, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_rpatientmnitActionPerformed

    private void dischargesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dischargesmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DischSheet, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_dischargesmnitActionPerformed

    private void attsheetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attsheetmnitActionPerformed
        com.afrisoftech.lib.HosAttendanceDatePanel dates = new com.afrisoftech.lib.HosAttendanceDatePanel(this, true, this.AttSheet, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_attsheetmnitActionPerformed

    private void departmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentmnitActionPerformed
        javax.swing.JInternalFrame prod = new GeneralViewIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_departmentmnitActionPerformed

    private void headermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headermnitActionPerformed
        javax.swing.JInternalFrame prod = new HeaderIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_headermnitActionPerformed

    private void debtorsStmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorsStmtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.DebtorsStmt, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_debtorsStmtmnitActionPerformed

    private void submStmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submStmtmnitActionPerformed
        com.afrisoftech.lib.HosDebtorDatePanel dates = new com.afrisoftech.lib.HosDebtorDatePanel(this, pConnDB, true, this.SubmStmt, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_submStmtmnitActionPerformed

    private void LumpotherprmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LumpotherprmnitActionPerformed

        int rowsNo = 0;

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '" + System.getProperty("currentuser") + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");
            } else {

                //   while (rset.next()){
                //if(this.getShiftStatus()){
                com.afrisoftech.hospital.LumpSumOtherPymintfr prod = new com.afrisoftech.hospital.LumpSumOtherPymintfr(connectDB, pConnDB);
                saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    prod.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

                //  com.afrisoftech.accounting.InpatientRecpIntfr comp = new com.afrisoftech.accounting.InpatientRecpIntfr(connectDB,pConnDB);
                //  saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                // com.afrisoftech.hospital.InpatientReceiptsIntfr comp = new com.afrisoftech.hospital.InpatientReceiptsIntfr(connectDB,pConnDB);
                // comp.getContentPane().add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
        /*
         * javax.swing.JInternalFrame prod = new
         * LumpSumOtherPymintfr(connectDB,pConnDB); saccopn.add(prod,
         * javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * prod.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */// Add your handling code here:
    }//GEN-LAST:event_LumpotherprmnitActionPerformed

    private void directcashsalesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directcashsalesmnitActionPerformed

        com.afrisoftech.accounting.PaymodeAdjIntfr comp = new com.afrisoftech.accounting.PaymodeAdjIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_directcashsalesmnitActionPerformed

    private void distinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distinvmnitActionPerformed
        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.InvPerSchm, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_distinvmnitActionPerformed

    private void suspschememnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspschememnitActionPerformed
        CloseSuspSchemeIntfr comp = new CloseSuspSchemeIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_suspschememnitActionPerformed

    private void nhifcreditsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhifcreditsmnitActionPerformed
        NhifDebtsIntfr comp = new NhifDebtsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }// Add your handling code here:
    }//GEN-LAST:event_nhifcreditsmnitActionPerformed

    private void doctorledgermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorledgermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, DoctorsLedger, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_doctorledgermnitActionPerformed

    private void intinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intinvmnitActionPerformed
        com.afrisoftech.lib.HosOutPatientDatePanel dates = new com.afrisoftech.lib.HosOutPatientDatePanel(this, pConnDB, true, OutPatientBill, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_intinvmnitActionPerformed

    private void changeBackgoundImagemnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBackgoundImagemnit1ActionPerformed

        invalidate();

        javax.swing.JFileChooser chooserImages = new javax.swing.JFileChooser(new java.io.File(System.getProperty("images.dir")));

        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();

        filter.addExtension("jpg");

        filter.addExtension("gif");

        filter.addExtension("png");

        filter.setDescription("Image Files");

        chooserImages.setFileFilter(filter);

        int returnVal = chooserImages.showOpenDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            System.out.println("You chose to open this file: "
                    + chooserImages.getSelectedFile().getPath());

            // filePortrait = chooserPortrait.getSelectedFile();
            // this.jTextField1.setText(filePortrait.getNam);
            //  processBrRequisitionFile(filePortrait);
            appProp.setProperty("backgrdimg", chooserImages.getSelectedFile().getPath());

            appProp.setProperty("images.dir", chooserImages.getSelectedFile().getParent());

            System.setProperty("backgrdimg", chooserImages.getSelectedFile().getParent());

            desktopPaneIcon = new javax.swing.ImageIcon(chooserImages.getSelectedFile().getPath());

            //jPanel.validate();
            this.desktopPane.updateUI();
            //this.storePreferences();
            // this.desktopPane4.updateUI();

            // this.desktopPanePayroll.updateUI();
            // this.desktopPaneStock.updateUI();
            //this.mainPanel.updateUI();
            this.updateNewComponentsUI();

            //updateUI();
            validate();
        }

        repaint();
        // Add your handling code here:
    }//GEN-LAST:event_changeBackgoundImagemnit1ActionPerformed

    private void inReceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inReceiptsmnitActionPerformed
        int rowsNo = 0;

        try {


            /*
             * java.sql.Statement stmtx = connectDB.createStatement();
             * java.sql.ResultSet rsetx = stmtx.executeQuery("select code from
             * ac_cash_points_setup where description = current_user"); while
             * (rsetx.next()) { cashPointPett = rsetx.getObject(1).toString();
             *
             * }
             */
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            // cashPointPett = rsetf.getObject(1).toString();
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        pstmt.setString(1, System.getProperty("cashpoint"));
                        //pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    //  status = true;
                    com.afrisoftech.accounting.InpatientRecpIntfr comp = new com.afrisoftech.accounting.InpatientRecpIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.InpatientRecpIntfr comp = new com.afrisoftech.accounting.InpatientRecpIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
        // Add your handling code here:
    }//GEN-LAST:event_inReceiptsmnitActionPerformed

    private void suspschemepovmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspschemepovmnitActionPerformed
        CloseSuspProvIntfr comp = new CloseSuspProvIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_suspschemepovmnitActionPerformed

    private void nhifrebatesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhifrebatesmnitActionPerformed
        NhifRebeatIntfr comp = new NhifRebeatIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_nhifrebatesmnitActionPerformed

    private void SchemeAllocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchemeAllocmnitActionPerformed
        com.afrisoftech.accounting.AllocateInvoicesIntfr comp = new com.afrisoftech.accounting.AllocateInvoicesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_SchemeAllocmnitActionPerformed

    private void TheatreChargesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TheatreChargesmnitActionPerformed
        TheatreFixedRatesIntfr comp = new TheatreFixedRatesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_TheatreChargesmnitActionPerformed

    private void xraymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xraymnitActionPerformed
        com.afrisoftech.laboratory.XrayReportingIntfr comp = new com.afrisoftech.laboratory.XrayReportingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_xraymnitActionPerformed

    private void transperaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transperaccmnitActionPerformed
        com.afrisoftech.lib.AccountHosDatePanel dates = new com.afrisoftech.lib.AccountHosDatePanel(this, pConnDB, true, TransPerAcc, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_transperaccmnitActionPerformed

    private void billadjustmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billadjustmentmnitActionPerformed
        com.afrisoftech.hospital.BillingAdjGen2Intfr comp = new com.afrisoftech.hospital.BillingAdjGen2Intfr(connectDB, pConnDB);
        //com.afrisoftech.accounting.BillAdjustmentIntfr comp = new com.afrisoftech.accounting.BillAdjustmentIntfr(connectDB, pConnDB);

        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }            // Add your handling code here:
    }//GEN-LAST:event_billadjustmentmnitActionPerformed

    private void invpersuppliermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invpersuppliermnitActionPerformed
        com.afrisoftech.lib.HosCreditorsDatePanel dates = new com.afrisoftech.lib.HosCreditorsDatePanel(this, pConnDB, true, GRT, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_invpersuppliermnitActionPerformed

    private void mtmediaBttn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtmediaBttn1ActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("kspread");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));
            } else {

                rt.exec("excel");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }        // Add your handling code here:
    }//GEN-LAST:event_mtmediaBttn1ActionPerformed

    private void suspendShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspendShiftActionPerformed

        //    suspendmnitActionPerformed(evt);
        // Add your handling code here:
    }//GEN-LAST:event_suspendShiftActionPerformed

    private void closeShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeShiftActionPerformed

        try {
            connectDB.setAutoCommit(false);
            System.out.println("Cashpoint to suspend is : " + System.getProperty("cashpoint"));

            System.out.println("User Name to suspend is : " + System.getProperty("currentuser"));

            //java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Closed', end_date = timenow() WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Closed', end_date = CURRENT_DATE WHERE user_name = '" + System.getProperty("currentuser") + "' AND status ilike 'Running'");

            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Shift closed for user " + System.getProperty("currentuser") + "");

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            try {
                connectDB.rollback();
            } catch (java.sql.SQLException sql) {
                javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        }
        // Add your handling code here:
    }//GEN-LAST:event_closeShiftActionPerformed

    private void openShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openShiftActionPerformed
        /*
         * threadSales = true;
         *
         * java.lang.Thread threadSalesOpen = new java.lang.Thread(this, "Sales
         * Open");
         *
         * threadSalesOpen.start();
         *
         */ // Add your handling code here:
    }//GEN-LAST:event_openShiftActionPerformed

    private void compactDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compactDBActionPerformed

        SampleVacuumDB smpthr_dbcc = new SampleVacuumDB();

        int dbcc_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the DB Checker?", "System DBCC dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Start DBCC Immediately", "Schedule DBCC Process", "Cancel DBCC Checker"}, "Schedule DBCC Process");

        switch (dbcc_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_dbcc.SampleVacuumDB();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DBCC operation");

                break;

            default:
                ;
                ;

        }

        smpthr_dbcc.stop();

        // Add your handling code here:
    }//GEN-LAST:event_compactDBActionPerformed

    private void optimizeDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optimizeDBActionPerformed

        SampleDbOptim smpthr_dboptim = new SampleDbOptim();

        int dboptim_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the DB Optimizer?", "System DB Optimizer dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Optimize DB  Immediately", "Schedule DB Optimizer", "Cancel Optimizer process"}, "Schedule DB Optimizer");

        switch (dboptim_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_dboptim.SampleDbOptim();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DB Optimizer operation");

                break;

            default:
                ;
                ;

        }

        smpthr_dboptim.stop();
        // Add your handling code here:
    }//GEN-LAST:event_optimizeDBActionPerformed

    private void backupDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupDBActionPerformed

        SampleThread smpthr_backup = new SampleThread();

        int backup_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the backup?", "System Backup dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Backup Immediate", "Schedule Backup", "Don't start backup"}, "Schedule Backup");

        switch (backup_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_backup.SampleThread();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the backup operation");

                break;

            default:
                ;
                ;

        }

        smpthr_backup.stop();

        // Add your handling code here:
    }//GEN-LAST:event_backupDBActionPerformed

    private void reportsToolBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsToolBarActionPerformed
        /*
         * jTabbedPane1.setSelectedComponent(reportsSplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(payrollMenuBar);
         *
         * this.validate();
         *
         * // Add your handling code here:
         */
    }//GEN-LAST:event_reportsToolBarActionPerformed

    private void payrollToolBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollToolBarActionPerformed
        /*
         * jTabbedPane1.setSelectedComponent(payrollSplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(payrollMenuBar);
         *
         * this.validate();
         *
         */// Add your handling code here:
    }//GEN-LAST:event_payrollToolBarActionPerformed

    private void pharmacyToolBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyToolBarActionPerformed
        /*
         * jTabbedPane1.setSelectedComponent(pharmacySplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(inventoryMenuBar);
         *
         * this.validate();
         *
         *
         */   // Add your handling code here:
    }//GEN-LAST:event_pharmacyToolBarActionPerformed

    private void operationsToolBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationsToolBarActionPerformed
        /*
         * jTabbedPane1.setSelectedComponent(mainSplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(jMenuBar1);
         *
         * this.validate();
         *
         */    // Add your handling code here:
    }//GEN-LAST:event_operationsToolBarActionPerformed

    private void mainSplitPaneComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_mainSplitPaneComponentShown

        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(jMenuBar1);

        this.validate();

        // Add your handling code here:
    }//GEN-LAST:event_mainSplitPaneComponentShown

    private void patientdiagnosismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientdiagnosismnitActionPerformed
        com.afrisoftech.records.PatientDiagIntfr comp = new com.afrisoftech.records.PatientDiagIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            // PatientRe
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_patientdiagnosismnitActionPerformed

    private void schemesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemesmnitActionPerformed

        com.afrisoftech.reports.SchemesPdf policy = new com.afrisoftech.reports.SchemesPdf();
        policy.SchemesPdf(connectDB);     // Add your handling code here:
    }//GEN-LAST:event_schemesmnitActionPerformed

    private void revenuemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revenuemnitActionPerformed

        com.afrisoftech.reports.RevenuesPdf policy = new com.afrisoftech.reports.RevenuesPdf();
        policy.RevenuesPdf(connectDB);
        // Add your handling code here:
    }//GEN-LAST:event_revenuemnitActionPerformed

    private void pettycashreqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashreqmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.RaisePetyCash, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_pettycashreqmnitActionPerformed

    private void receiptPrefsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptPrefsmnitActionPerformed
        com.afrisoftech.accounting.ReceiptPrefsIntfr comp = new com.afrisoftech.accounting.ReceiptPrefsIntfr(connectDB, pConnDB, appProp);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_receiptPrefsmnitActionPerformed

    private void pettycashpmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashpmtmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PetyCash, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_pettycashpmtmnitActionPerformed

    private void yearlyrotinemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyrotinemnitActionPerformed
        com.afrisoftech.accounting.ArchivePeriodintfr comp = new com.afrisoftech.accounting.ArchivePeriodintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

//        com.afrisoftech.accounting.CloseYearClass closeYear = new com.afrisoftech.accounting.CloseYearClass(connectDB,pConnDB);
        //       closeYear.CloseYearClass();
        // Add your handling code here:
    }//GEN-LAST:event_yearlyrotinemnitActionPerformed

    private void patperdeptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patperdeptmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.PatPerDept, connectDB);

        dates.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_patperdeptmnitActionPerformed

    private void DtlTrialBalancemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DtlTrialBalancemnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DetailedTrialbalance, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_DtlTrialBalancemnitActionPerformed

    private void assetmgtmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetmgtmnit1ActionPerformed
        /*
         * this.jTabbedPane1.setSelectedComponent(mainSplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(jMenuBar1);
         *
         * this.validate();
         *
         */   // Add your handling code here:
    }//GEN-LAST:event_assetmgtmnit1ActionPerformed

    private void docsmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docsmnit1ActionPerformed
        /*
         * this.jTabbedPane1.setSelectedComponent(reportsSplitPane);
         *
         * this.invalidate();
         *
         * this.setJMenuBar(reportsMenuBar);
         *
         * this.validate();
         *
         */   //        this.jTabbedPane1.setSelectedComponent(helpSplitPane);
        // Add your handling code here:
    }//GEN-LAST:event_docsmnit1ActionPerformed

    private void reportsmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsmnit1ActionPerformed
        /*
         * this.jTabbedPane1.setSelectedComponent(reportsSplitPane);
         *
         * this.invalidate();
         *
         * this.setJMenuBar(reportsMenuBar);
         *
         * this.validate();
         *
         *
         *
         */ // Add your handling code here:
    }//GEN-LAST:event_reportsmnit1ActionPerformed

    @Override
    public synchronized void dispose() {

        int exitOption = javax.swing.JOptionPane.showConfirmDialog(this, "Do you really want to exit application?", "Caution before closing application!", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);

        if (exitOption == javax.swing.JOptionPane.YES_OPTION) {

            storePreferences();

            try {
                connectDB.close();
            } catch (SQLException ex) {
                ex.printStackTrace();             //Exceptions.printStackTrace(ex);
            }

            System.exit(0);
        }

    }

    private void fahrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fahrmnitActionPerformed
        com.afrisoftech.lib.LoginToPayrollModule dates = new com.afrisoftech.lib.LoginToPayrollModule(this, pConnDB, true, this.login2payroll, connectDB);

        dates.setVisible(true);

        if (allowedAccess) {

            javax.swing.JScrollPane payrollTaskScrollPane = new javax.swing.JScrollPane();

            payrollTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
                public void componentShown(java.awt.event.ComponentEvent evt) {
                    payrollTaskPaneComponentShown(evt);
                }
            });

            payrollTaskScrollPane.setViewportView(payrollTaskPane);

            jOutLookBar.addTab("HR & Payroll", payrollTaskScrollPane);

            javax.swing.JScrollPane reportTaskScrollPane = new javax.swing.JScrollPane();

            reportTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
                public void componentShown(java.awt.event.ComponentEvent evt) {
                    reportTaskPaneComponentShown(evt);
                }
            });

            reportTaskScrollPane.setViewportView(reportTaskPane);

            jOutLookBar.addTab("Reports & Utilities", reportTaskScrollPane);

            //            payrollKey.dispose();
        }
        /*
         * this.jTabbedPane1.setSelectedComponent(payrollSplitPane);
         *
         * this.invalidate();
         *
         * this.setJMenuBar(payrollMenuBar);
         *
         * this.validate();
         *
         */ // Add your handling code here:
    }//GEN-LAST:event_fahrmnitActionPerformed

    private void accountsmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsmnit1ActionPerformed
        /*
         * this.jTabbedPane1.setSelectedComponent(mainSplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(jMenuBar1);
         *
         * this.validate();
         *
         */   // Add your handling code here:
    }//GEN-LAST:event_accountsmnit1ActionPerformed

    private void BedchargesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BedchargesmnitActionPerformed
        BedsChargesintfr comp = new BedsChargesintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_BedchargesmnitActionPerformed

    private void deptincexpmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptincexpmnitActionPerformed
        com.afrisoftech.lib.SubACHosDatePanel dates = new com.afrisoftech.lib.SubACHosDatePanel(this, pConnDB, true, this.DeptIncExp, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_deptincexpmnitActionPerformed

    private void accrualsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accrualsmnitActionPerformed
        AccrualsIntfr comp = new AccrualsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_accrualsmnitActionPerformed

    private void ReceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceiptsmnitActionPerformed

        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
            while (rsetx.next()) {
                cashPoint = rsetx.getObject(1).toString();
            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");
            } else {

                DebtorsRecptIntfr comp = new DebtorsRecptIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                comp.setSize(saccopn.getSize());
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }
            }

        } catch (java.sql.SQLException sqlex) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        // Add your handling code here:
    }//GEN-LAST:event_ReceiptsmnitActionPerformed

    private void pharmacymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacymnitActionPerformed
        com.afrisoftech.reports.PharmacySalesPdf policy = new com.afrisoftech.reports.PharmacySalesPdf();
        policy.PharmacySalesPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_pharmacymnitActionPerformed

    private void storesrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storesrevmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.StoresRev, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_storesrevmnitActionPerformed

    private void patbedoccupancymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patbedoccupancymnitActionPerformed
        com.afrisoftech.reports.WardOccupancyPdf policy = new com.afrisoftech.reports.WardOccupancyPdf();
        policy.WardOccupancyPdf(connectDB);   // Add your handling code here:
    }//GEN-LAST:event_patbedoccupancymnitActionPerformed

    private void bedoccupancymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedoccupancymnitActionPerformed
        com.afrisoftech.reports.BedOccupancyPdf policy = new com.afrisoftech.reports.BedOccupancyPdf();
        policy.BedOccupancyPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_bedoccupancymnitActionPerformed

    private void suppliersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliersmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, this.InpatDiag, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_suppliersmnitActionPerformed

    private void generalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generalmnitActionPerformed
        com.afrisoftech.hospital.GeneralBillingIntfr comp = new com.afrisoftech.hospital.GeneralBillingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_generalmnitActionPerformed

    private void outstandingordersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outstandingordersmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DrugsPrbd, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_outstandingordersmnitActionPerformed

    private void quotationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quotationmnitActionPerformed
        com.afrisoftech.reports.WardsPdf policy = new com.afrisoftech.reports.WardsPdf();
        policy.WardsPdf(connectDB);  // Add your handling code here:
    }//GEN-LAST:event_quotationmnitActionPerformed

    private void allreceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allreceiptsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TotalReceipts, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_allreceiptsmnitActionPerformed

    private void compdebtorsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compdebtorsmnitActionPerformed
        com.afrisoftech.lib.AccountHosDatePanel dates = new com.afrisoftech.lib.AccountHosDatePanel(this, pConnDB, true, this.Debtors, connectDB);

        dates.setVisible(true);

        //  com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.Debtors, connectDB);
        // dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_compdebtorsmnitActionPerformed

    private void receiptscopymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptscopymnitActionPerformed

        com.afrisoftech.lib.HosReceiptsPatDatePanel dates = new com.afrisoftech.lib.HosReceiptsPatDatePanel(this, pConnDB, true, this.ReceiptperPat, connectDB);

        dates.setVisible(true);

        //com.afrisoftech.lib.HosReceiptsDatePanel dates = new com.afrisoftech.lib.HosReceiptsDatePanel(this,pConnDB, true, this.ReceiptsCopy, connectDB);
        //dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_receiptscopymnitActionPerformed

    private void doctorslistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorslistmnitActionPerformed
        com.afrisoftech.reports.DoctorsListPdf comp = new com.afrisoftech.reports.DoctorsListPdf();
        comp.DoctorsListPdf(connectDB);        // Add your handling code here:
    }//GEN-LAST:event_doctorslistmnitActionPerformed

    private void clinicsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clinicsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Bookings, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_clinicsmnitActionPerformed

    private void PaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaymentsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.Payments, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_PaymentsmnitActionPerformed

    private void statementofaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statementofaccmnitActionPerformed

        javax.swing.JInternalFrame comp = new com.afrisoftech.reports.DebtorsAccViewSummary(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setSelected(true);
            comp.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

//        com.afrisoftech.lib.HosScemesDatePanel dates = new com.afrisoftech.lib.HosScemesDatePanel(this, pConnDB, true, this.AccntStatement, connectDB);
//
//        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_statementofaccmnitActionPerformed

    private void shiftrepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftrepmnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.ShiftNo, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_shiftrepmnitActionPerformed

    private void exitmnITbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitmnITbActionPerformed

        this.dispose();

        // Add your handling code here:
    }//GEN-LAST:event_exitmnITbActionPerformed
    private void invoicemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicemnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FinalInv, connectDB);

        dates.setVisible(true);     // Add your handling code here:
    }//GEN-LAST:event_invoicemnitActionPerformed

    private void schemeregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeregmnitActionPerformed
        SchemesIntfr comp = new SchemesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:

    }//GEN-LAST:event_schemeregmnitActionPerformed

    private void printvouchermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printvouchermnitActionPerformed
        com.afrisoftech.accounting.PettyCashRefundIntfr comp = new com.afrisoftech.accounting.PettyCashRefundIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_printvouchermnitActionPerformed

    private void pettycashpaymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pettycashpaymnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
            while (rsetx.next()) {
                cashPointPett = rsetx.getObject(1).toString();

            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND cash_point = '" + cashPointPett + "' AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select pett_point from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            cashPointPett = rsetf.getObject(1).toString();

                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        // pstmt.setString(1, System.getProperty("cashpoint"));
                        pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    //  status = true;
                    com.afrisoftech.hospital.PettyCashPymIntfr comp = new com.afrisoftech.hospital.PettyCashPymIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.hospital.PettyCashPymIntfr comp = new com.afrisoftech.hospital.PettyCashPymIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }
                /*
                 * cashRunning = true;
                 *
                 * cashThread = new java.lang.Thread(this, "Cash");
                 *
                 * cashThread.start();
                 */
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
        /*
         * TemporaryImprestIntfr comp = new TemporaryImprestIntfr(connectDB,pConnDB);
         * saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * comp.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */// Add your handling code here:
    }//GEN-LAST:event_pettycashpaymnitActionPerformed

    private void creditorsinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsinvmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.CreditorsInv, connectDB);

        dates.setVisible(true);          // Add your handling code here:
    }//GEN-LAST:event_creditorsinvmnitActionPerformed

    private void BankingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BankingmnitActionPerformed
        com.afrisoftech.accounting.Bankingintfr comp = new com.afrisoftech.accounting.Bankingintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
    }//GEN-LAST:event_BankingmnitActionPerformed

    private void suspendmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspendmnitActionPerformed

        if (System.getProperty("billpmnt").equalsIgnoreCase("showing")) {

            javax.swing.JOptionPane.showMessageDialog(this, "ERROR : Check to ensure that the RECEIPTS form is not \n running before suspending your shift?");

        } else {
            int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Proceed to suspend shift?", "Suspending current shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

            if (openShift == javax.swing.JOptionPane.YES_OPTION) {

                try {

                    System.out.println("Cashpoint to suspend is : " + System.getProperty("cashpoint"));

                    System.out.println("User Name to suspend is : " + System.getProperty("currentuser"));

                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Suspended' WHERE user_name = '" + System.getProperty("currentuser") + "' AND status = 'Running'");

                    pstmt.executeUpdate();

                } catch (java.sql.SQLException sqlExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

                }
            }

        }// Add your handling code here:
    }//GEN-LAST:event_suspendmnitActionPerformed

    private void closeshiftmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeshiftmnitActionPerformed

        //  if (System.getProperty("billpmnt").equalsIgnoreCase("showing")) {
        //     javax.swing.JOptionPane.showMessageDialog(this, "ERROR : Check to ensure that the RECEIPTS form is not \n running before closing your shift?");
        // } else {
        int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Proceed to close shift?", "Closing current shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

        if (openShift == javax.swing.JOptionPane.YES_OPTION) {

            try {
                connectDB.setAutoCommit(false);
                System.out.println("Cashpoint to suspend is : " + System.getProperty("cashpoint"));

                System.out.println("User Name to suspend is : " + System.getProperty("currentuser"));

                //java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Closed', end_date = timenow() WHERE cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Closed', end_date = current_timestamp WHERE user_name = '" + System.getProperty("currentuser") + "' AND status ilike 'Running'");

                pstmt.executeUpdate();
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this, "Shift closed for user " + System.getProperty("currentuser") + "");

            } catch (java.sql.SQLException sqlExec) {

                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                try {
                    connectDB.rollback();
                } catch (java.sql.SQLException sql) {
                    javax.swing.JOptionPane.showMessageDialog(this, sql.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
                }

            }
        } else {
        }

        //   }
        // Add your handling code here:
    }//GEN-LAST:event_closeshiftmnitActionPerformed

    private void cashpointmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashpointmnitActionPerformed
        com.afrisoftech.accounting.CashPointsIntfr comp = new com.afrisoftech.accounting.CashPointsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_cashpointmnitActionPerformed

    private void refundsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refundsmnitActionPerformed
        com.afrisoftech.accounting.RefundsIntfr comp = new com.afrisoftech.accounting.RefundsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_refundsmnitActionPerformed

    private void stockmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockmnit1ActionPerformed
        /*
         * jTabbedPane1.setSelectedComponent(pharmacySplitPane);
         *
         * this.invalidate();
         *
         * setJMenuBar(inventoryMenuBar);
         *
         * this.validate();
         */
        // Add your handling code here:
    }//GEN-LAST:event_stockmnit1ActionPerformed

    private void theatreprocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatreprocmnitActionPerformed
        /*
         * TheatreProceduresIntfr comp = new
         * TheatreProceduresIntfr(connectDB,pConnDB); saccopn.add(comp,
         * javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * comp.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */
        // Add your handling code here:
    }//GEN-LAST:event_theatreprocmnitActionPerformed

    private void labprocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labprocmnitActionPerformed
        com.afrisoftech.hospital.LabProceduresIntfr comp = new com.afrisoftech.hospital.LabProceduresIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_labprocmnitActionPerformed

    private void wardproceduresmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardproceduresmnitActionPerformed
        com.afrisoftech.laboratory.InpatientRequestIntfr comp = new com.afrisoftech.laboratory.InpatientRequestIntfr(connectDB, pConnDB, getMainClass());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_wardproceduresmnitActionPerformed

    private void admissmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissmnitActionPerformed
        MortAdmmissnIntfr comp = new MortAdmmissnIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_admissmnitActionPerformed

    private void vitalsignmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vitalsignmnitActionPerformed
        VitalSignRecIntfr comp = new VitalSignRecIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_vitalsignmnitActionPerformed

    private void cashBookmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashBookmnitActionPerformed

        com.afrisoftech.lib.HosCashbookDatePanel dates = new com.afrisoftech.lib.HosCashbookDatePanel(this, pConnDB, true, this.CashBookList, connectDB);

        dates.setVisible(true);
        // Add your handling code here:
    }//GEN-LAST:event_cashBookmnitActionPerformed

    private void patdischmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patdischmnitActionPerformed
        PatientDischargeIntfr comp = new PatientDischargeIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_patdischmnitActionPerformed

    private void bedbrekgsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedbrekgsmnitActionPerformed
        BedBreakagesIntfr comp = new BedBreakagesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_bedbrekgsmnitActionPerformed

    private void newbedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbedmnitActionPerformed
        NewBedsIntfr comp = new NewBedsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_newbedmnitActionPerformed

    private void bedmangtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedmangtmnitActionPerformed
        BedManagementIntfr comp = new BedManagementIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_bedmangtmnitActionPerformed

    private void BedtrnsfrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BedtrnsfrmnitActionPerformed
        BedTobedTransIntfr comp = new BedTobedTransIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_BedtrnsfrmnitActionPerformed

    private void printreceiptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printreceiptmnitActionPerformed
        com.afrisoftech.lib.HosReceiptsPatDatePanel dates = new com.afrisoftech.lib.HosReceiptsPatDatePanel(this, pConnDB, true, this.ReceiptperPat, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_printreceiptmnitActionPerformed

    private void detailedpatstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedpatstmtmnitActionPerformed
        com.afrisoftech.lib.HosPatientDatePanel dates = new com.afrisoftech.lib.HosPatientDatePanel(this, pConnDB, true, this.DetailedPatStmt, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_detailedpatstmtmnitActionPerformed

    private void patstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patstmtmnitActionPerformed
        com.afrisoftech.lib.HosPatientDatePanel dates = new com.afrisoftech.lib.HosPatientDatePanel(this, pConnDB, true, this.PatientStatement, connectDB);

        dates.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_patstmtmnitActionPerformed

    private void revperdepmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revperdepmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.DepartmentRev, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_revperdepmnitActionPerformed

    private void dailyrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DailyRev, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_dailyrevmnitActionPerformed

    private void CreditorsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditorsmnitActionPerformed
        com.afrisoftech.lib.AgeingHosDatePanel dates = new com.afrisoftech.lib.AgeingHosDatePanel(this, true, this.Creditors, connectDB);

        dates.setVisible(true);
        //   CreditorsPdf comp = new CreditorsPdf();
        //  comp.CreditorsPdf(connectDB);

        // Add your handling code here:
    }//GEN-LAST:event_CreditorsmnitActionPerformed

    private void patreceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patreceiptsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ReceiptsList, connectDB);

        dates.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_patreceiptsmnitActionPerformed

    private void theatrediagmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatrediagmnitActionPerformed
        TheatreBillingIntfr comp = new TheatreBillingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_theatrediagmnitActionPerformed

    private void labtestsresultmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labtestsresultmnitActionPerformed
        com.afrisoftech.laboratory.LabResultsIntfr comp = new com.afrisoftech.laboratory.LabResultsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_labtestsresultmnitActionPerformed

    private void wardtfrmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardtfrmnitActionPerformed

        WardToWardTransferInfr comp = new WardToWardTransferInfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_wardtfrmnitActionPerformed

    private void pnlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnlmnitActionPerformed
        com.afrisoftech.lib.HosBsDatePanel dates = new com.afrisoftech.lib.HosBsDatePanel(this, true, this.ProfitLoss, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_pnlmnitActionPerformed

    private void trialbalancemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trialbalancemnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TrialBalance, connectDB);

        dates.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_trialbalancemnitActionPerformed

    private void acctdetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acctdetmnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.GITransactions, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_acctdetmnitActionPerformed

    private void lbalancesheetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbalancesheetmnitActionPerformed
        com.afrisoftech.lib.HosBsDatePanel dates = new com.afrisoftech.lib.HosBsDatePanel(this, true, this.BalanceSheet, connectDB);

        dates.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_lbalancesheetmnitActionPerformed

    private void transactionslsmnitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionslsmnitmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.TransactionsList, connectDB);

        dates.setVisible(true);        // Add your handling code here:
    }//GEN-LAST:event_transactionslsmnitmnitActionPerformed

    private void patientmanagemnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientmanagemnActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_patientmanagemnActionPerformed

    private void receiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptsmnitActionPerformed
        int rowsNo = 0;

        try {


            /*
             * java.sql.Statement stmtx = connectDB.createStatement();
             * java.sql.ResultSet rsetx = stmtx.executeQuery("select code from
             * ac_cash_points_setup where description = current_user"); while
             * (rsetx.next()) { cashPointPett = rsetx.getObject(1).toString();
             *
             * }
             */
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            // cashPointPett = rsetf.getObject(1).toString();
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        pstmt.setString(1, System.getProperty("cashpoint"));
                        //pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    //  status = true;
                    com.afrisoftech.accounting.BillPaymentsIntfr comp = new com.afrisoftech.accounting.BillPaymentsIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.BillPaymentsIntfr comp = new com.afrisoftech.accounting.BillPaymentsIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        // Add your handling code here:
    }//GEN-LAST:event_receiptsmnitActionPerformed

    private void admmssionntmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admmssionntmnitActionPerformed
        com.afrisoftech.hospital.AdmissionIntfr comp = new com.afrisoftech.hospital.AdmissionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);

        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
    }//GEN-LAST:event_admmssionntmnitActionPerformed

    private void patientdepositsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientdepositsmnitActionPerformed
        com.afrisoftech.accounting.TransactionTypeIntfr comp = new com.afrisoftech.accounting.TransactionTypeIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_patientdepositsmnitActionPerformed

    private void patientcollateralmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientcollateralmnitActionPerformed
        PatientCollateralIntfr comp = new PatientCollateralIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_patientcollateralmnitActionPerformed

    private void docnursmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docnursmnitActionPerformed

        StaffIntfr comp = new StaffIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_docnursmnitActionPerformed

    private void patientregstmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientregstmnitActionPerformed

        int rowsNo = 0;

        try {

            java.lang.Boolean registerReceipt = false;
            java.sql.Statement stm12fd = connectDB.createStatement();
            java.sql.ResultSet rse12fd = stm12fd.executeQuery("SELECT register_receipt FROM pb_patient_names");
            while (rse12fd.next()) {
                registerReceipt = rse12fd.getBoolean(1);
            }
            if (registerReceipt) {

                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.Statement stmt1 = connectDB.createStatement();
                // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
                // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
                java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

                while (rset1.next()) {

                    rowsNo = rset1.getInt(1);

                }
                if (rowsNo < 1) {
                    int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                    if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                        java.util.Calendar calendar = java.util.Calendar.getInstance();

                        long dateNow = calendar.getTimeInMillis();

                        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                        System.out.println(datenowSql1.toString());

                        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                        System.out.println(datenowSql.toString());

                        String current_user;
//PatientRegisterIntfr
                        try {

                            java.sql.Statement stmtf = connectDB.createStatement();
                            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
                            while (rsetf.next()) {
                                // cashPointPett = rsetf.getObject(1).toString();
                            }
                        } catch (java.sql.SQLException sqe) {
                            sqe.printStackTrace();
                            System.out.println("select not successful");
                        }
                        try {
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                            pstmt.setString(1, System.getProperty("cashpoint"));
                            //pstmt.setString(1, cashPointPett);
                            pstmt.setString(2, "Running");
                            pstmt.executeUpdate();
                        } catch (java.sql.SQLException sqE) {
                            sqE.printStackTrace();
                        }
                        System.out.println("Opening shift");
                    }
                }
            }
            //  status = true;

        } catch (java.sql.SQLException sqlex) {

            sqlex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }
        patientRunning = true;

        patientThread = new java.lang.Thread(this, "Patient");

        patientThread.start();


        /*
         * PatientRegisterIntfr11 comp =
         * newPatientRegisterIntfr1r1(connectDB,pConnDB); saccopn.add(comp,
         * javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * comp.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         */ // Add your handling code here:
    }//GEN-LAST:event_patientregstmnitActionPerformed

    private void creditcardsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditcardsmnitActionPerformed
        com.afrisoftech.hospital.CreditCardIntfr comp = new com.afrisoftech.hospital.CreditCardIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_creditcardsmnitActionPerformed

    private void OperatingparamertersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperatingparamertersmnitActionPerformed
        com.afrisoftech.hospital.FixedRatesIntfr comp = new com.afrisoftech.hospital.FixedRatesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_OperatingparamertersmnitActionPerformed

    private void patcategmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patcategmnitActionPerformed
        com.afrisoftech.hospital.PatientCategoriesIntfr comp = new com.afrisoftech.hospital.PatientCategoriesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
    }//GEN-LAST:event_patcategmnitActionPerformed

    private void bedsetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedsetupmnitActionPerformed
        com.afrisoftech.hospital.BedSetupIntfr comp = new com.afrisoftech.hospital.BedSetupIntfr(connectDB, pConnDB);

        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_bedsetupmnitActionPerformed

    private void schemeallmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeallmnitActionPerformed
        com.afrisoftech.hospital.SchemeAlloteesIntfr comp = new com.afrisoftech.hospital.SchemeAlloteesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_schemeallmnitActionPerformed

    private void schemeprovmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeprovmnitActionPerformed
        com.afrisoftech.hospital.HCProviderIntfr comp = new com.afrisoftech.hospital.HCProviderIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_schemeprovmnitActionPerformed

    private void banksetmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banksetmnitActionPerformed
        com.afrisoftech.hospital.BankSetupIntfr comp = new com.afrisoftech.hospital.BankSetupIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
    }//GEN-LAST:event_banksetmnitActionPerformed

    private void diseasesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diseasesmnitActionPerformed
        com.afrisoftech.hospital.DiseasesIntfr comp = new com.afrisoftech.hospital.DiseasesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_diseasesmnitActionPerformed

    private void wardprocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardprocmnitActionPerformed
        com.afrisoftech.hospital.WardsSetupIntfr comp = new com.afrisoftech.hospital.WardsSetupIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_wardprocmnitActionPerformed

    private void depatmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depatmnitActionPerformed
        com.afrisoftech.hospital.DepartmentsIntfr comp = new com.afrisoftech.hospital.DepartmentsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_depatmnitActionPerformed

    private void districtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_districtmnitActionPerformed
        com.afrisoftech.hospital.DistrictsIntfr comp = new com.afrisoftech.hospital.DistrictsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_districtmnitActionPerformed

    private void userprofmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userprofmnitActionPerformed
        com.afrisoftech.hospital.UsersetupHospitalIntfr comp = new com.afrisoftech.hospital.UsersetupHospitalIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // Add your handling code here:
    }//GEN-LAST:event_userprofmnitActionPerformed

    private void glaccountsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glaccountsmnitActionPerformed
        com.afrisoftech.accounting.ActivitiesIntfr comp = new com.afrisoftech.accounting.ActivitiesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // Add your handling code here:
    }//GEN-LAST:event_glaccountsmnitActionPerformed

    private void lgalstatussetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgalstatussetupmnitActionPerformed
        LegalStatusIntfr comp = new LegalStatusIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
    }//GEN-LAST:event_lgalstatussetupmnitActionPerformed

    private void paymentmodesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentmodesmnitActionPerformed
        com.afrisoftech.accounting.PaymentModesIntfr comp = new com.afrisoftech.accounting.PaymentModesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);

        } catch (java.beans.PropertyVetoException pvt) {
        }    // Add your handling code here:
    }//GEN-LAST:event_paymentmodesmnitActionPerformed

    private void countrymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrymnitActionPerformed
        NationalityIntfr comp = new NationalityIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }      // Add your handling code here:
    }//GEN-LAST:event_countrymnitActionPerformed

    private void hosptalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hosptalmnitActionPerformed
        int j = 0;
        try {
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(hospital_name) from pb_hospitalprofile");
            while (rset1.next()) {
                j = rset1.getInt(1);
            }
            if (j > 0) {
                javax.swing.JInternalFrame dismth = new CompanyProfIntfr(connectDB, pConnDB);
                saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {

                    dismth.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            } else {

                int resOptt = javax.swing.JOptionPane.showOptionDialog(this, "Do you want to open a new Company ?", "Set Company", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"New Company", "Open Existing Company", "Cancel"}, "Open Existing Company");

                if (resOptt == javax.swing.JOptionPane.YES_OPTION) {
                    javax.swing.JInternalFrame dismth = new CompNameIntfr(connectDB, pConnDB);
                    saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        dismth.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }

                isRunning = true;

                java.lang.Thread tread = new java.lang.Thread(this);

                tread.start();
            }
        } catch (java.sql.SQLException sqlE) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlE.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        // Add your handling code here:
    }//GEN-LAST:event_hosptalmnitActionPerformed

    private void aboutmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutmnActionPerformed
        AboutBoxintfr comp = new AboutBoxintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_aboutmnActionPerformed

    private void mbVerifymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbVerifymnitActionPerformed
        //        javax.swing.JInternalFrame comp = new MemberVerifyintfr(connectDB,pConnDB);
        //      saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        //    try {
        //      comp.setSelected(true);
        //} catch(java.beans.PropertyVetoException pvt){}         // Add your handling code here:
    }//GEN-LAST:event_mbVerifymnitActionPerformed

    private void raisecashVouchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raisecashVouchmnitActionPerformed
        com.afrisoftech.accounting.RaiseCashJournalintfr comp = new com.afrisoftech.accounting.RaiseCashJournalintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_raisecashVouchmnitActionPerformed

    private void payvouchermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payvouchermnitActionPerformed
        //  com.afrisoftech.accounting.CashJourAppintfr comp = new com.afrisoftech.accounting.CashJourAppintfr(connectDB,pConnDB);

        //  comp.setVisible(true);
        com.afrisoftech.hospital.CashJourAppintfr comp = new com.afrisoftech.hospital.CashJourAppintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_payvouchermnitActionPerformed

    private void setaccperiodmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setaccperiodmnitActionPerformed

        com.afrisoftech.accounting.ChangePeriodintfr comp = new com.afrisoftech.accounting.ChangePeriodintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_setaccperiodmnitActionPerformed

    private void comfbankingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comfbankingmnitActionPerformed
        com.afrisoftech.accounting.ComfBankingintfr comp = new com.afrisoftech.accounting.ComfBankingintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_comfbankingmnitActionPerformed

    private void YearlyhlpsetsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearlyhlpsetsmnitActionPerformed
        com.afrisoftech.accounting.DepreciationClass depreciation = new com.afrisoftech.accounting.DepreciationClass(connectDB, pConnDB);

        System.out.println("The depreciation object : " + depreciation.toString());

        depreciation.DepreciationClass();

        // Add your handling code here:
    }//GEN-LAST:event_YearlyhlpsetsmnitActionPerformed

    private void raisevouchmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raisevouchmnitActionPerformed
        com.afrisoftech.accounting.RaiseVoucherintfr comp = new com.afrisoftech.accounting.RaiseVoucherintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_raisevouchmnitActionPerformed

    private void bankingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankingmnitActionPerformed
        com.afrisoftech.accounting.ShiftDepintfr comp = new com.afrisoftech.accounting.ShiftDepintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // Add your handling code here:
    }//GEN-LAST:event_bankingmnitActionPerformed

    private void updatedomainsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedomainsmnitActionPerformed

        this.domainsReset = true;

        this.updateActivityDomains();

        this.domainsReset = false;

        // Add your handling code here:
    }//GEN-LAST:event_updatedomainsmnitActionPerformed

    private void chgpasswdmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chgpasswdmnit1ActionPerformed
        com.afrisoftech.lib.ChangePassword chgPasswd = new com.afrisoftech.lib.ChangePassword(this, true, connectDB, psWord);

        chgPasswd.setVisible(true);         // Add your handling code here:
    }//GEN-LAST:event_chgpasswdmnit1ActionPerformed

    private void validatamnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validatamnitActionPerformed

        SampleVacuumDB smpthr_dbcc = new SampleVacuumDB();

        int dbcc_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the DB Checker?", "System DBCC dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Start DBCC Immediately", "Schedule DBCC Process", "Cancel DBCC Checker"}, "Schedule DBCC Process");

        switch (dbcc_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_dbcc.SampleVacuumDB();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DBCC operation");

                break;

            default:
                ;
                ;

        }

        smpthr_dbcc.stop();

        // Add your handling code here:
    }//GEN-LAST:event_validatamnitActionPerformed

    private void optimdbmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optimdbmnitActionPerformed

        SampleDbOptim smpthr_dboptim = new SampleDbOptim();

        int dboptim_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the DB Optimizer?", "System DB Optimizer dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Optimize DB  Immediately", "Schedule DB Optimizer", "Cancel Optimizer process"}, "Schedule DB Optimizer");

        switch (dboptim_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_dboptim.SampleDbOptim();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DB Optimizer operation");

                break;

            default:
                ;
                ;

        }

        smpthr_dboptim.stop();

        // Add your handling code here:
    }//GEN-LAST:event_optimdbmnitActionPerformed

    private void jrnloansmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrnloansmnitActionPerformed
        com.afrisoftech.accounting.Journalsintfr currint = new com.afrisoftech.accounting.Journalsintfr(connectDB, pConnDB);
        saccopn.add(currint, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {

            currint.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // Add your handling code here:
    }//GEN-LAST:event_jrnloansmnitActionPerformed

    private void bkupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkupmnitActionPerformed

        SampleThread smpthr_backup = new SampleThread();

        int backup_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the backup?", "System Backup dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Backup Immediate", "Schedule Backup", "Don't start backup"}, "Schedule Backup");

        switch (backup_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_backup.SampleThread();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the backup operation");

                break;

            default:
                ;
                ;

        }

        smpthr_backup.stop();

        // Add your handling code here:
    }//GEN-LAST:event_bkupmnitActionPerformed

    private void bankreconcmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankreconcmnitActionPerformed
        //
        com.afrisoftech.accounting.BankReconintfr comp = new com.afrisoftech.accounting.BankReconintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        //    this.setCursor(javax.swing.JFrame.DEFAULT_CURSOR);
        // Add your handling code here:
    }//GEN-LAST:event_bankreconcmnitActionPerformed

    private void saccopnComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_saccopnComponentShown
        // Add your handling code here:
    }//GEN-LAST:event_saccopnComponentShown

    private void bbjmnit11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbjmnit11ActionPerformed

        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "bbjthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/bbjthemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "bbjthemepack.zip");

        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_bbjmnit11ActionPerformed

    private void swinglnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swinglnfmnit1ActionPerformed

        this.changeTheme("javax.swing.plaf.metal.MetalLookAndFeel", null);

        appProp.setProperty("defaultlnf", "javax.swing.plaf.metal.MetalLookAndFeel");

        appProp.setProperty("defaulttheme", "");

        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_swinglnfmnit1ActionPerformed

    private void winlnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winlnfmnit1ActionPerformed

        this.changeTheme("com.sun.java.swing.plaf.windows.WindowsLookAndFeel", null);

        appProp.setProperty("defaultlnf", "com.sun.java.swing.plaf.windows.WindowsLookAndFeel");

        appProp.setProperty("defaulttheme", "");

        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_winlnfmnit1ActionPerformed

    private void motiflnfmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motiflnfmnit1ActionPerformed

        this.changeTheme("com.sun.java.swing.plaf.motif.MotifLookAndFeel", null);

        appProp.setProperty("defaultlnf", "com.sun.java.swing.plaf.motif.MotifLookAndFeel");

        appProp.setProperty("defaulttheme", "");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_motiflnfmnit1ActionPerformed

    private void macmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macmnit1ActionPerformed

        this.changeTheme("it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel", null);

        appProp.setProperty("defaultlnf", "it.unitn.ing.swing.plaf.macos.MacOSLookAndFeel");

        appProp.setProperty("defaulttheme", "");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_macmnit1ActionPerformed

    private void skinmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skinmnActionPerformed
        //  this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "xplunathemepack.zip");
        // Add your handling code here:
    }//GEN-LAST:event_skinmnActionPerformed

    private void beosmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beosmnit1ActionPerformed

        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "beosthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/beosthemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "beosthemepack.zip");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_beosmnit1ActionPerformed

    private void aquamnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquamnit1ActionPerformed

        //       this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "aquathemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/aquathemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "aquathemepack.zip");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_aquamnit1ActionPerformed

    private void modernmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modernmnit1ActionPerformed

        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "modernthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/modernthemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "modernthemepack.zip");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_modernmnit1ActionPerformed

    private void whiltmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiltmnit1ActionPerformed

        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "whistlerthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/whistlerthemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "whistlerthemepack.zip");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_whiltmnit1ActionPerformed

    private void macos1mnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macos1mnit1ActionPerformed

        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "macosthemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/macosthemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "macosthemepack.zip");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_macos1mnit1ActionPerformed

    private void xpmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xpmnit1ActionPerformed

        //        this.changeTheme("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", "xplunathemepack.zip");
        this.changeThemeByUrl("com.l2fprod.gui.plaf.skin.SkinLookAndFeel", getClass().getResource("/xplunathemepack.zip"));

        appProp.setProperty("defaultlnf", "com.l2fprod.gui.plaf.skin.SkinLookAndFeel");

        appProp.setProperty("defaulttheme", "xplunathemepack.zip");
        this.updateNewComponentsUI();
        // Add your handling code here:
    }//GEN-LAST:event_xpmnit1ActionPerformed

    private void cpactdatamnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpactdatamnitActionPerformed

        SampleDbCompact smpthr_dbcompact = new SampleDbCompact();

        int dbcompact_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start Compacting the database?", "System DB Compacter dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Compact DB Immediately", "Schedule DB Compacter Process", "Cancel the DB Compacter Process"}, "Schedule DB Compacter Process");

        switch (dbcompact_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_dbcompact.SampleDbCompact();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DB Compacter operation");

                break;

            default:
                ;
                ;

        }

        smpthr_dbcompact.stop();

        // Add your handling code here:
    }//GEN-LAST:event_cpactdatamnitActionPerformed

    private void otherrecptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherrecptmnitActionPerformed

        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
            while (rsetx.next()) {
                //  cashPoint = rsetx.getObject(1).toString();
            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND  (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");
            } else {

                com.afrisoftech.accounting.InpatientDepositIntfr comp = new com.afrisoftech.accounting.InpatientDepositIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                try {
                    comp.setSelected(true);
                    comp.setSize(saccopn.getSize());
                } catch (java.beans.PropertyVetoException pvt) {
                }
            }

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        // Add your handling code here:
    }//GEN-LAST:event_otherrecptmnitActionPerformed

    private void saccopnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saccopnMousePressed

        System.out.println("Selected taskbar " + jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()));

        if (evt.getModifiers() == java.awt.event.MouseEvent.BUTTON3_MASK) {

            if (jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()) == "Hospital Operations") {

                this.operationsPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());

            } else if (jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()) == "Stock & Inventory") {

                this.inventoryPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());

            } else if (jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()) == "HR & Payroll") {

                this.payrollPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());

            } else if (jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()) == "HR Management") {

                this.hrmPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());

            } else if (jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()) == "Reports & Utilities") {

                this.reportsPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());

            } else {

                this.operationsPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_saccopnMousePressed

    private void mtmediaBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtmediaBttnActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("kscd");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));
            } else {

                rt.exec("mplayer2");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }         // Add your handling code here:
    }//GEN-LAST:event_mtmediaBttnActionPerformed

    private void mailBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailBttnActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("evolution");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));
            } else {

                rt.exec("outlook");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }         // Add your handling code here:
    }//GEN-LAST:event_mailBttnActionPerformed

    private void editButtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtnActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("kedit");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));
            } else {

                rt.exec("winword");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }         // Add your handling code here:
    }//GEN-LAST:event_editButtnActionPerformed

    private void brwsrBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brwsrBttnActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("netscape");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));
            } else {

                rt.exec("iexplore");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }         // Add your handling code here:
    }//GEN-LAST:event_brwsrBttnActionPerformed

    private void calcBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBttnActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("kcalc");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            } else {

                rt.exec("calc");

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }         // Add your handling code here:
    }//GEN-LAST:event_calcBttnActionPerformed

    private void fmgrBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmgrBttnActionPerformed

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        try {

            if (System.getProperty("os.name").equalsIgnoreCase("Linux")) {

                rt.exec("konqueror " + System.getProperty("docs.dir"));

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));
            } else {

                rt.exec("explorer " + System.getProperty("docs.dir"));

                System.out.print(System.getProperty("os.name") + "  " + System.getProperty("os.version"));

            }

        } catch (IOException IOExec) {

            IOExec.printStackTrace();

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }      // Add your handling code here:
    }//GEN-LAST:event_fmgrBttnActionPerformed

    private void sharesummmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sharesummmnitActionPerformed
        try {
            try {
                try {
                    try {
                        javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);
                    } catch (javax.swing.UnsupportedLookAndFeelException un) {
                    }
                } catch (java.lang.IllegalAccessException il) {
                }

            } catch (java.lang.InstantiationException inst) {
                System.out.println("Win Look and feel classes not found");
            } //System.out.println(nf.getMessage());
        } catch (java.lang.ClassNotFoundException nf) {
        }

        /*
         * javax.swing.JInternalFrame worst1 = new WorkStation1();
         * saccopn.add(worst1, javax.swing.JLayeredPane.DEFAULT_LAYER);
         */    // Add your handling code here:
    }//GEN-LAST:event_sharesummmnitActionPerformed

    private void utilitymnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitymnActionPerformed
        //javax.swing.JInternalFrame prod = new balanceintfr();
        //saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        // Add your handling code here:
    }//GEN-LAST:event_utilitymnActionPerformed

    private void otherprmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherprmnitActionPerformed
        int rowsNo = 0;

        try {

            java.sql.Statement stmtx = connectDB.createStatement();
            java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
            while (rsetx.next()) {
                // cashPoint = rsetx.getObject(1).toString();
            }

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "There is no Shift running");
            } else {

                javax.swing.JInternalFrame prod = new com.afrisoftech.hospital.OtherPymintfr(connectDB, pConnDB);
                saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    prod.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        /*
         * int rowsNo = 0;
         *
         * try { java.sql.Statement stmt = connectDB.createStatement();
         * java.sql.Statement stmt1 = connectDB.createStatement(); //
         * java.sql.ResultSet rset = stmt.executeQuery("select
         * user,count(debit),sum(debit + credit) from ac_cash_book where
         * account_no ='"+jComboBox2.getSelectedItem()+"' and description !=''
         * and reconciled = false AND date BETWEEN
         * '"+datePicker1.getDate().toString()+"' AND
         * '"+datePicker2.getDate().toString()+"' group by account_name");
         * java.sql.ResultSet rset1 = stmt1.executeQuery("select
         * count(user_name) from ac_shifts where user_name ilike
         * '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR
         * status = 'Suspended')");
         *
         * while (rset1.next()) {
         *
         * rowsNo = rset1.getInt(1);
         *
         * }
         * if (rowsNo < 1) { javax.swing.JOptionPane.showMessageDialog(this,
         * "There is no Shift running"); } else {
         *
         * // while (rset.next()){
         *
         * //if(this.getShiftStatus()){
         *
         * javax.swing.JInternalFrame prod = new
         * com.afrisoftech.hospital.PaymentScheduleIntfr(connectDB,pConnDB);
         * saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
         * prod.setSelected(true); } catch(java.beans.PropertyVetoException
         * pvt){}
         *
         * // com.afrisoftech.accounting.InpatientRecpIntfr comp = new
         * com.afrisoftech.accounting.InpatientRecpIntfr(connectDB,pConnDB); //
         * saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER); //
         * com.afrisoftech.hospital.InpatientReceiptsIntfr comp = new
         * com.afrisoftech.hospital.InpatientReceiptsIntfr(connectDB,pConnDB);
         * // comp.getContentPane().add(comp,
         * javax.swing.JLayeredPane.DEFAULT_LAYER); } }
         *
         * catch(java.sql.SQLException sqlex){
         * javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error
         * Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
         *
         * System.out.println(sqlex.getMessage());
         *
         * }
         */
        // Add your handling code here:
    }//GEN-LAST:event_otherprmnitActionPerformed

    private void alloConfrmmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alloConfrmmnitActionPerformed
        com.afrisoftech.accounting.AllocateConfirmIntfr comp = new com.afrisoftech.accounting.AllocateConfirmIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // TODO add your handling code here:
}//GEN-LAST:event_alloConfrmmnitActionPerformed

    private void nokrelationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nokrelationsmnitActionPerformed

        com.afrisoftech.records.NOKRelationsIntfr comp = new com.afrisoftech.records.NOKRelationsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_nokrelationsmnitActionPerformed

    private void enableExemptionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableExemptionsmnitActionPerformed

        if (enableExemptionsmnit.isSelected()) {
            System.setProperty("exemptions.mode", "true");
            appProp.setProperty("exemptions.mode", "true");
            //this.storePreferences();
        } else {
            System.setProperty("exemptions.mode", "false");
            appProp.setProperty("exemptions.mode", "false");
            /// this.storePreferences();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_enableExemptionsmnitActionPerformed

    private void DebtStattexlmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebtStattexlmnitActionPerformed
        com.afrisoftech.lib.HosDebtorPerSchemePanel dates = new com.afrisoftech.lib.HosDebtorPerSchemePanel(this, pConnDB, true, this.DebtStmPerSchemeExl, connectDB);

        dates.setVisible(true);          // TODO add your handling code here:
}//GEN-LAST:event_DebtStattexlmnitActionPerformed

    private void salesPrefsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesPrefsmnitActionPerformed

        com.afrisoftech.accounting.SalesPrefsIntfr comp = new com.afrisoftech.accounting.SalesPrefsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_salesPrefsmnitActionPerformed

    private void dailyCashReturnsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyCashReturnsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DailyCashCollections, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_dailyCashReturnsmnitActionPerformed

    private void hlpcontmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlpcontmnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hlpcontmnitActionPerformed

    private void debtorSchemeStatementmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorSchemeStatementmnitActionPerformed
        com.afrisoftech.lib.HosDebtorPerSchemePanel dates = new com.afrisoftech.lib.HosDebtorPerSchemePanel(this, pConnDB, true, this.DebtStmPerSchemeDirect, connectDB);

        dates.setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_debtorSchemeStatementmnitActionPerformed

    private void changeUserPasswordmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeUserPasswordmnitActionPerformed
        com.afrisoftech.lib.ChangeUserPassword chgPasswd = new com.afrisoftech.lib.ChangeUserPassword(this, true, connectDB, psWord);

        chgPasswd.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_changeUserPasswordmnitActionPerformed

    private void shiftTotalsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftTotalsmnitActionPerformed

        com.afrisoftech.accounting.TotalShiftsIntfr comp = new com.afrisoftech.accounting.TotalShiftsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftTotalsmnitActionPerformed

    private void auditAccountsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditAccountsmnitActionPerformed

        com.afrisoftech.accounting.AuditAccountsIntfr comp = new com.afrisoftech.accounting.AuditAccountsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_auditAccountsmnitActionPerformed

    private void finaliseipmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finaliseipmnitActionPerformed
        int rowsNo = 0;
        int codes = 0;
        try {

            java.sql.Statement stmtx1 = connectDB.createStatement();
            java.sql.ResultSet rsetx1 = stmtx1.executeQuery("select COUNT(code) from ac_cash_points_setup where description = current_user");
            while (rsetx1.next()) {
                codes = rsetx1.getInt(1);

            }
            if (codes > 0) {
                java.sql.Statement stmtx = connectDB.createStatement();
                java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description = current_user");
                while (rsetx.next()) {
                    //  cashPointPett = rsetx.getObject(1).toString();
                }

                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

                while (rset1.next()) {

                    rowsNo = rset1.getInt(1);

                }
                rowsNo = 1;
                if (rowsNo < 1) {
                    int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                    if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                        java.util.Calendar calendar = java.util.Calendar.getInstance();

                        long dateNow = calendar.getTimeInMillis();

                        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                        System.out.println(datenowSql1.toString());

                        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                        System.out.println(datenowSql.toString());

                        String current_user;

                        try {

                            java.sql.Statement stmtf = connectDB.createStatement();
                            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
                            while (rsetf.next()) {
                                //cashPointPett = rsetf.getObject(1).toString();
                            }
                        } catch (java.sql.SQLException sqe) {
                            sqe.printStackTrace();
                            System.out.println("select not successful");
                        }
                        try {
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");

                            pstmt.setString(1, cashPoint);
                            pstmt.setString(2, "Running");
                            pstmt.executeUpdate();
                        } catch (java.sql.SQLException sqE) {
                            sqE.printStackTrace();
                        }
                        System.out.println("Opening shift");

                        com.afrisoftech.accounting.FinSchemeInvsNhifIntfr prod = new com.afrisoftech.accounting.FinSchemeInvsNhifIntfr(connectDB, pConnDB);
                        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                        try {
                            prod.setSelected(true);
                        } catch (java.beans.PropertyVetoException pvt) {
                        }

                    }
                } else {
                    com.afrisoftech.accounting.FinSchemeInvsNhifIntfr prod = new com.afrisoftech.accounting.FinSchemeInvsNhifIntfr(connectDB, pConnDB);
                    saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        prod.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.FinSchemeInvsNhifIntfr prod = new com.afrisoftech.accounting.FinSchemeInvsNhifIntfr(connectDB, pConnDB);
                saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    prod.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }
            }
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }// TODO add your handling code here:
}//GEN-LAST:event_finaliseipmnitActionPerformed

    private void patientdiagmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientdiagmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.PatDiag, connectDB);

        dates.setVisible(true);    // Add your handling code here:
}//GEN-LAST:event_patientdiagmnitActionPerformed

    private void DiagnosissummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagnosissummnitActionPerformed
        com.afrisoftech.lib.HosDiagDatePanel dates = new com.afrisoftech.lib.HosDiagDatePanel(this, true, this.DiagSumm, connectDB);

        dates.setVisible(true); // Add your handling code here:
}//GEN-LAST:event_DiagnosissummnitActionPerformed

    private void DiagnosisSumPerSexmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagnosisSumPerSexmnitActionPerformed
        com.afrisoftech.lib.HosDiagDatePanel dates = new com.afrisoftech.lib.HosDiagDatePanel(this, true, this.DiagSummPerSex, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
}//GEN-LAST:event_DiagnosisSumPerSexmnitActionPerformed

    private void DiagnosisanalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagnosisanalysismnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DiagnosisAnalysis, connectDB);

        dates.setVisible(true);   // Add your handling code here:
}//GEN-LAST:event_DiagnosisanalysismnitActionPerformed

    private void MonthlyDiagAnalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyDiagAnalysismnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MonthlyDiagSummary, connectDB);

        dates.setVisible(true);   // Add your handling code here:
}//GEN-LAST:event_MonthlyDiagAnalysismnitActionPerformed

    private void DiagnosisbydocsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagnosisbydocsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DiagByDocSumm, connectDB);

        dates.setVisible(true);   // Add your handling code here:
}//GEN-LAST:event_DiagnosisbydocsummnitActionPerformed

    private void diagbydocsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagbydocsmnitActionPerformed
        com.afrisoftech.lib.HosDoctorsPanel dates = new com.afrisoftech.lib.HosDoctorsPanel(this, pConnDB, true, this.DiagByDoc, connectDB);

        dates.setVisible(true);     // Add your handling code here:
}//GEN-LAST:event_diagbydocsmnitActionPerformed

    private void diagnosisperdiesesemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosisperdiesesemnitActionPerformed
        com.afrisoftech.lib.HosDiseaseDatePanel dates = new com.afrisoftech.lib.HosDiseaseDatePanel(this, true, this.diagPerDisease, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_diagnosisperdiesesemnitActionPerformed

    private void midwivesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midwivesmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.midWives, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
}//GEN-LAST:event_midwivesmnitActionPerformed

    private void monthlydeliveryretmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlydeliveryretmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.deliveriesMonth, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_monthlydeliveryretmnitActionPerformed

    private void BirthWeightmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthWeightmnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.birthWeight, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_BirthWeightmnitActionPerformed

    private void theatrecasesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatrecasesmnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.theatreCases, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_theatrecasesmnitActionPerformed

    private void conditionfoundmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conditionfoundmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.codiborn, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_conditionfoundmnitActionPerformed

    private void ipMobidityMotaritymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipMobidityMotaritymnitActionPerformed
        com.afrisoftech.lib.HosDiagDatePanel dates = new com.afrisoftech.lib.HosDiagDatePanel(this, true, this.DiagSummByAge, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_ipMobidityMotaritymnitActionPerformed

    private void dailywardstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailywardstmtmnitActionPerformed
        com.afrisoftech.lib.HosWardsDatePanel dates = new com.afrisoftech.lib.HosWardsDatePanel(this, pConnDB, true, WardStmt, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_dailywardstmtmnitActionPerformed

    private void dailywardsdischmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailywardsdischmnitActionPerformed
        com.afrisoftech.lib.HosWardsDatePanel dates = new com.afrisoftech.lib.HosWardsDatePanel(this, pConnDB, true, ipDischStatement, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_dailywardsdischmnitActionPerformed

    private void inpatientstmtmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpatientstmtmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.ipStatements, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_inpatientstmtmnitActionPerformed

    private void ipanalysisformmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipanalysisformmnitActionPerformed
        com.afrisoftech.lib.HosWardsDatePanel dates = new com.afrisoftech.lib.HosWardsDatePanel(this, pConnDB, true, IpAnalysisFrm, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_ipanalysisformmnitActionPerformed

    private void ipmorbmotaritymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipmorbmotaritymnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.IpMorbMotality, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
}//GEN-LAST:event_ipmorbmotaritymnitActionPerformed

    private void AttendancePerDeptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttendancePerDeptmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.OpAttDepartmental, connectDB);

        dates.setVisible(true);// TODO add your handling code here:
}//GEN-LAST:event_AttendancePerDeptmnitActionPerformed

    private void attdencebydptmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attdencebydptmnitActionPerformed
        com.afrisoftech.lib.HosDepartmentDatePanel dates = new com.afrisoftech.lib.HosDepartmentDatePanel(this, true, this.attByDepartment, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_attdencebydptmnitActionPerformed

    private void xraysmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xraysmnitActionPerformed
        XrayProceduresIntfr comp = new XrayProceduresIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // Add your handling code here:
}//GEN-LAST:event_xraysmnitActionPerformed

    private void xraypendingReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xraypendingReqActionPerformed
        com.afrisoftech.laboratory.XrayPendingRequestsIntfr comp = new com.afrisoftech.laboratory.XrayPendingRequestsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_xraypendingReqActionPerformed

    private void xrayresultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xrayresultsActionPerformed
        com.afrisoftech.laboratory.XrayResIntfr comp = new com.afrisoftech.laboratory.XrayResIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_xrayresultsActionPerformed

    private void physioReqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_physioReqmnitActionPerformed
        com.afrisoftech.laboratory.PhyPendingRequestsIntfr comp = new com.afrisoftech.laboratory.PhyPendingRequestsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_physioReqmnitActionPerformed

    private void physioresultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_physioresultsmnitActionPerformed
        com.afrisoftech.laboratory.PhysioResulIntfr comp = new com.afrisoftech.laboratory.PhysioResulIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
}//GEN-LAST:event_physioresultsmnitActionPerformed

    private void dentalReqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dentalReqmnitActionPerformed
//        com.afrisoftech.laboratory.DentPendingRequestsIntfr comp = new com.afrisoftech.laboratory.DentPendingRequestsIntfr(connectDB, pConnDB);

        com.afrisoftech.laboratory.ConsultationDentalIntfr comp = new com.afrisoftech.laboratory.ConsultationDentalIntfr(connectDB, pConnDB, getMainClass());

        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_dentalReqmnitActionPerformed

    private void dentalresultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dentalresultsmnitActionPerformed
        com.afrisoftech.laboratory.DentalResulIntfr comp = new com.afrisoftech.laboratory.DentalResulIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_dentalresultsmnitActionPerformed

    private void consultationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultationmnitActionPerformed
        com.afrisoftech.laboratory.ConsultationIntfr comp = new com.afrisoftech.laboratory.ConsultationIntfr(connectDB, pConnDB, getMainClass());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
}//GEN-LAST:event_consultationmnitActionPerformed

    private void clinicalhistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clinicalhistmnitActionPerformed
        com.afrisoftech.laboratory.PatHistIntfr comp = new com.afrisoftech.laboratory.PatHistIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_clinicalhistmnitActionPerformed

    private void opattendbydocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opattendbydocmnitActionPerformed
        com.afrisoftech.accounting.OpAttSummaryIntfr prod = new com.afrisoftech.accounting.OpAttSummaryIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_opattendbydocmnitActionPerformed

    private void refferalsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refferalsmnitActionPerformed
        com.afrisoftech.accounting.RefferalsIntfr comp = new com.afrisoftech.accounting.RefferalsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }          // Add your handling code here:
}//GEN-LAST:event_refferalsmnitActionPerformed

    private void nurseprofmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nurseprofmnitActionPerformed
        com.afrisoftech.laboratory.NurseProfIntfr comp = new com.afrisoftech.laboratory.NurseProfIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_nurseprofmnitActionPerformed

    private void progressmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progressmnitActionPerformed
        com.afrisoftech.hospital.PatientProgressIntfr comp = new com.afrisoftech.hospital.PatientProgressIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_progressmnitActionPerformed

    private void fluidchartmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fluidchartmnitActionPerformed
        com.afrisoftech.laboratory.FluidChartIntfr comp = new com.afrisoftech.laboratory.FluidChartIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_fluidchartmnitActionPerformed

    private void radreqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radreqmnitActionPerformed
        com.afrisoftech.laboratory.RadioReqIntfr comp = new com.afrisoftech.laboratory.RadioReqIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_radreqmnitActionPerformed

    private void AmbreqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmbreqmnitActionPerformed
        com.afrisoftech.laboratory.AmbReqIntfr comp = new com.afrisoftech.laboratory.AmbReqIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }   // Add your handling code here:
}//GEN-LAST:event_AmbreqmnitActionPerformed

    private void ConsentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsentmnitActionPerformed
        com.afrisoftech.laboratory.ConsentIntfr comp = new com.afrisoftech.laboratory.ConsentIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
}//GEN-LAST:event_ConsentmnitActionPerformed

    private void milknutritionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_milknutritionmnitActionPerformed
        com.afrisoftech.laboratory.MilkNutritionIntfr comp = new com.afrisoftech.laboratory.MilkNutritionIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_milknutritionmnitActionPerformed

    private void certficatemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_certficatemnitActionPerformed
        com.afrisoftech.laboratory.ExamCtfIntfr comp = new com.afrisoftech.laboratory.ExamCtfIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        } // Add your handling code here:
}//GEN-LAST:event_certficatemnitActionPerformed

    private void turnchartmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnchartmnitActionPerformed
        com.afrisoftech.laboratory.TurningChartIntfr comp = new com.afrisoftech.laboratory.TurningChartIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_turnchartmnitActionPerformed

    private void schememnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schememnitActionPerformed
        com.afrisoftech.accounting.FinSchemeInvsIntfr comp = new com.afrisoftech.accounting.FinSchemeInvsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // Add your handling code here:
}//GEN-LAST:event_schememnitActionPerformed

    private void dailybedreturnmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailybedreturnmnitActionPerformed
        com.afrisoftech.lib.HosWardsDatePanel dates = new com.afrisoftech.lib.HosWardsDatePanel(this, pConnDB, true, BedReturns, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_dailybedreturnmnitActionPerformed

    private void IpmobiditymatalitymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpmobiditymatalitymnitActionPerformed
        com.afrisoftech.lib.HosDiagGenderDatePanel dates = new com.afrisoftech.lib.HosDiagGenderDatePanel(this, true, ipMoralGenders, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_IpmobiditymatalitymnitActionPerformed

    private void releasepapermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releasepapermnitActionPerformed
        com.afrisoftech.lib.HosInPatientRPaperDatePanel dates = new com.afrisoftech.lib.HosInPatientRPaperDatePanel(this, pConnDB, true, this.rPaper, connectDB);

        dates.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_releasepapermnitActionPerformed

    private void xraylistmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xraylistmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.XrayList, connectDB);

        dates.setVisible(true);  // Add your handling code here:
}//GEN-LAST:event_xraylistmnitActionPerformed

    private void XrayResultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XrayResultsmnitActionPerformed
        com.afrisoftech.lib.HosXrayResultsDatePanel dates = new com.afrisoftech.lib.HosXrayResultsDatePanel(this, pConnDB, true, this.XrayRes, connectDB);

        dates.setVisible(true);// Add your handling code here:
}//GEN-LAST:event_XrayResultsmnitActionPerformed

    private void xrayperfmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xrayperfmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.XrayPerf, connectDB);

        dates.setVisible(true); // Add your handling code here:
}//GEN-LAST:event_xrayperfmnitActionPerformed

    private void dentregistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dentregistermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DentalList, connectDB);

        dates.setVisible(true);  // Add your handling code here:
}//GEN-LAST:event_dentregistermnitActionPerformed

    private void labresultsindmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labresultsindmnitActionPerformed
        com.afrisoftech.lib.HosLabPanel dates = new com.afrisoftech.lib.HosLabPanel(this, true, this.labResults, connectDB);

        dates.setVisible(true);      // Add your handling code here:
}//GEN-LAST:event_labresultsindmnitActionPerformed

    private void laborresultsummnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laborresultsummnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.LabResults, connectDB);

        dates.setVisible(true);  // Add your handling code here:
}//GEN-LAST:event_laborresultsummnitActionPerformed

    private void labsspecimensmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labsspecimensmnitActionPerformed
        com.afrisoftech.reports.LabTestsPdf policy = new com.afrisoftech.reports.LabTestsPdf();
        policy.LabTestsPdf(connectDB);
        // Add your handling code here:
}//GEN-LAST:event_labsspecimensmnitActionPerformed

    private void patlabresusmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patlabresusmnitActionPerformed
        com.afrisoftech.lib.HosPatientLabDatePanel dates = new com.afrisoftech.lib.HosPatientLabDatePanel(this, pConnDB, true, this.PatLabResults, connectDB);

        dates.setVisible(true);        // Add your handling code here:
}//GEN-LAST:event_patlabresusmnitActionPerformed

    private void reqbydocmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqbydocmnitActionPerformed
        com.afrisoftech.lib.HosDoctDepPanel dates = new com.afrisoftech.lib.HosDoctDepPanel(this, pConnDB, true, this.reqByDoc, connectDB);

        dates.setVisible(true);        // Add your handling code here:
}//GEN-LAST:event_reqbydocmnitActionPerformed

    private void xaxisComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xaxisComboBox1ActionPerformed

        populateColumnSelectorTableChartDefiner();

        javax.swing.table.DefaultTableModel columnTableModel1 = (javax.swing.table.DefaultTableModel) columnSelectorTable1.getModel();

        for (int k = 0; k < columnTableModel1.getRowCount(); k++) {

            if (columnTableModel1.getValueAt(k, 0) == null) {

                columnTableModel1.removeRow(k);

            }

        }

        // TODO add your handling code here:
}//GEN-LAST:event_xaxisComboBox1ActionPerformed

    private void submitQuery1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitQuery1ActionPerformed

        java.sql.PreparedStatement queryPstmt;

        java.sql.PreparedStatement pstmtChartDefinition;

        try {

            queryPstmt = connectDB.prepareStatement("CREATE OR REPLACE VIEW " + viewNameTxt.getText() + " AS " + querykiwiTextPanel.getText());

            queryPstmt.execute();

            pstmtChartDefinition = connectDB.prepareStatement("INSERT INTO charts_graphs("
                    + "chart_description, chart_view, chart_type,"
                    + "chart_header, x_axis, y_axis,"
                    + "chart_category) VALUES (?, ?, ?, ?, ?, ?, ?)");

            pstmtChartDefinition.setString(1, chartNameTxt.getText());
            pstmtChartDefinition.setString(2, viewNameTxt.getText());
            pstmtChartDefinition.setString(3, chartTypeCmbx.getSelectedItem().toString().toLowerCase());
            pstmtChartDefinition.setString(4, chartTitleTxt.getText());
            pstmtChartDefinition.setString(5, xaxisComboBox1.getSelectedItem().toString().toLowerCase());
            pstmtChartDefinition.setString(6, yAxisTxt.getText());
            pstmtChartDefinition.setString(7, chartCategoryCmbx.getSelectedItem().toString());

            pstmtChartDefinition.execute();

            chartsTaskScrollPane.setViewportView(createChartsTaskPane());

            chartEditCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT chart_description FROM charts_graphs ORDER BY chart_description"));

        } catch (SQLException ex) {

            ex.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());

        }

        // TODO add your handling code here:
}//GEN-LAST:event_submitQuery1ActionPerformed

    private void cancelQuery1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelQuery1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_cancelQuery1ActionPerformed

    private void closeDialog1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeDialog1ActionPerformed

        this.chartDdefinitionDialog.dispose();

        // TODO add your handling code here:
}//GEN-LAST:event_closeDialog1ActionPerformed

    private void updateChartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateChartBtnActionPerformed

        java.sql.PreparedStatement queryPstmt;

        java.sql.PreparedStatement pstmt;

        try {

            queryPstmt = connectDB.prepareStatement("CREATE OR REPLACE VIEW " + viewNameTxt.getText() + " AS " + querykiwiTextPanel.getText());

            queryPstmt.execute();

            pstmt = connectDB.prepareStatement("UPDATE charts_graphs"
                    + " SET chart_description=?, chart_view=?, "
                    + " chart_type=?, chart_header=?, chart_update_user=?, "
                    + " y_axis=?, chart_category=? "
                    + " WHERE chart_description = ?");

            pstmt.setString(1, chartNameTxt.getText());
            pstmt.setString(2, viewNameTxt.getText());
            pstmt.setString(3, chartTypeCmbx.getSelectedItem().toString().toLowerCase());
            pstmt.setString(4, chartTitleTxt.getText());
            pstmt.setString(5, "SELECT current_user");
            pstmt.setString(6, yAxisTxt.getText());
            pstmt.setString(7, chartCategoryCmbx.getSelectedItem().toString());
            pstmt.setString(8, chartEditCmbx.getSelectedItem().toString());
            pstmt.executeUpdate();
            chartsTaskScrollPane.setViewportView(createChartsTaskPane());
            chartEditCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT chart_description FROM charts_graphs ORDER BY chart_description"));
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        // TODO add your handling code here:
}//GEN-LAST:event_updateChartBtnActionPerformed

    private void deleteChartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteChartBtnActionPerformed
        java.sql.PreparedStatement pstmt;
        try {

            pstmt = connectDB.prepareStatement(" DELETE FROM charts_graphs "
                    + " WHERE chart_description = ?");

            pstmt.setString(1, chartEditCmbx.getSelectedItem().toString());
            pstmt.executeUpdate();
            chartsTaskScrollPane.setViewportView(createChartsTaskPane());
            chartEditCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT chart_description FROM charts_graphs ORDER BY chart_description"));
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        // TODO add your handling code here:
}//GEN-LAST:event_deleteChartBtnActionPerformed

    private void saveQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveQueryActionPerformed
        javax.swing.JFileChooser chooserPortrait = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));

        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();

        filter.addExtension("sqy");

        filter.setDescription("SQL Query Files");

        chooserPortrait.setFileFilter(filter);

        int returnVal = chooserPortrait.showSaveDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            System.out.println("You chose to Save as this file: "
                    + chooserPortrait.getSelectedFile().getName());

            filePortrait = chooserPortrait.getSelectedFile();

            sqlStringFile = filePortrait.getName();

        }

        java.io.File requisFile;

        java.io.FileOutputStream requistOutStream;

        java.io.ObjectOutputStream requisObjStream;

        try {

            if (querykiwiTextPanel.getText().toCharArray().length > 0) {

                requisFile = java.io.File.createTempFile(sqlStringFile + "_", ".sqy", new java.io.File(System.getProperty("user.dir")));

                //          requisFile.deleteOnExit();
                requistOutStream = new java.io.FileOutputStream(requisFile);

                requisObjStream = new java.io.ObjectOutputStream(requistOutStream);

                requisObjStream.writeObject(querykiwiTextPanel.getText());

                requisObjStream.flush();

            } else {

                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Can't serialize an empty query!", "Warning on empty query", javax.swing.JOptionPane.ERROR_MESSAGE);

            }
            //            requisObjStream.writeObject(jTable11);

        } catch (java.io.IOException IOexec) {

            javax.swing.JOptionPane.showMessageDialog(this, IOexec.getMessage());

        }

        // Add your handling code here:
}//GEN-LAST:event_saveQueryActionPerformed

    private void clearQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearQueryActionPerformed
        querykiwiTextPanel.setText("");
        // Add your handling code here:
}//GEN-LAST:event_clearQueryActionPerformed

    private void loadQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadQueryActionPerformed
        javax.swing.JFileChooser chooserPortrait = new javax.swing.JFileChooser(new java.io.File(System.getProperty("user.dir")));

        com.afrisoftech.lib.ExampleFileFilter filter = new com.afrisoftech.lib.ExampleFileFilter();

        filter.addExtension("sqy");

        filter.setDescription("SQL Query Files");

        chooserPortrait.setFileFilter(filter);

        int returnVal = chooserPortrait.showOpenDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            System.out.println("You chose to open this file: "
                    + chooserPortrait.getSelectedFile().getName());

            filePortrait = chooserPortrait.getSelectedFile();

            loadQueryFile = filePortrait.getName();

        }

        //        this.invalidate();
        try {

            try {

                java.io.FileInputStream requisFileIOStream = new java.io.FileInputStream(filePortrait);

                java.io.ObjectInputStream requisObjInStream = new java.io.ObjectInputStream(requisFileIOStream);

                java.lang.String queryString = (java.lang.String) requisObjInStream.readObject();

                //  jScrollPane1.setViewportView(requisTable);
                querykiwiTextPanel.setText(queryString);

                this.validate();

            } catch (java.lang.ClassNotFoundException cnfExec) {

                javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

            }

        } catch (java.io.IOException ioExec) {

            javax.swing.JOptionPane.showMessageDialog(this, ioExec.getMessage());

        }                // Add your handling code here:
}//GEN-LAST:event_loadQueryActionPerformed

    private void closeDialog2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeDialog2ActionPerformed

        this.chartDdefinitionDialog.dispose();

        // Add your handling code here:
}//GEN-LAST:event_closeDialog2ActionPerformed

    private void submitQuery2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitQuery2ActionPerformed
        Vector tableColumnsVectorChartDefiner;

        tableColumnsVectorChartDefiner = getTableColumnsChartDefiner(querykiwiTextPanel.getText());

        xaxisComboBox1.setModel(new javax.swing.DefaultComboBoxModel(tableColumnsVectorChartDefiner));

        // Add your handling code here:
}//GEN-LAST:event_submitQuery2ActionPerformed

    private void chartEditCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartEditCmbxActionPerformed
        java.sql.PreparedStatement pstmt;
        try {
            pstmt = connectDB.prepareStatement("SELECT chart_view, chart_type, "
                    + " chart_header, x_axis, y_axis, update_time, chart_category, test_id  FROM charts_graphs "
                    + "WHERE chart_description = ?");

            pstmt.setString(1, chartEditCmbx.getSelectedItem().toString());

            java.sql.ResultSet rset = pstmt.executeQuery();

            while (rset.next()) {

                chartNameTxt.setText(chartEditCmbx.getSelectedItem().toString());

                viewNameTxt.setText(rset.getString(1));
                chartTitleTxt.setText(rset.getString(3));
                chartCategoryCmbx.setSelectedItem(rset.getString(7));
                yAxisTxt.setText(rset.getString(5));
                chartTypeCmbx.setSelectedItem(rset.getString(2).toUpperCase());

                java.sql.PreparedStatement pstmtChart = connectDB.prepareStatement("SELECT view_definition FROM information_schema.views WHERE table_name = ?");

                pstmtChart.setString(1, rset.getString(1));

                java.sql.ResultSet rsetChart = pstmtChart.executeQuery();

                while (rsetChart.next()) {

                    querykiwiTextPanel.setText(rsetChart.getString(1));

                }

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        // TODO add your handling code here:
}//GEN-LAST:event_chartEditCmbxActionPerformed

    private void diagnosistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosistActionPerformed

    private void gbvmonthmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gbvmonthmnitActionPerformed
        com.afrisoftech.lib.HosGbvDatePanel dates = new com.afrisoftech.lib.HosGbvDatePanel(this, true, this.GbvMonthlyRep, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_gbvmonthmnitActionPerformed

    private void survivorprofmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_survivorprofmnitActionPerformed
        com.afrisoftech.lib.HosGbvDatePanel dates = new com.afrisoftech.lib.HosGbvDatePanel(this, true, this.SurvivorProfileRep, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_survivorprofmnitActionPerformed

    private void pepetratormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pepetratormnitActionPerformed
        com.afrisoftech.lib.HosGbvDatePanel dates = new com.afrisoftech.lib.HosGbvDatePanel(this, true, this.PapetratorProfileRep, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_pepetratormnitActionPerformed

    private void safedeliveriesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_safedeliveriesmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MatDeliveries, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_safedeliveriesmnitActionPerformed

    private void pendinginjmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendinginjmnitActionPerformed
        com.afrisoftech.laboratory.InjectionRequestsIntfr comp = new com.afrisoftech.laboratory.InjectionRequestsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_pendinginjmnitActionPerformed

    private void poprequestmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poprequestmnitActionPerformed
        com.afrisoftech.laboratory.PopRequestsIntfr comp = new com.afrisoftech.laboratory.PopRequestsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_poprequestmnitActionPerformed

    private void mohovermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mohovermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.mohdiagnosis, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_mohovermnitActionPerformed

    private void opmobidityundermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opmobidityundermnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.mohdiagnosisunderfive, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_opmobidityundermnitActionPerformed

    private void gbvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gbvmnitActionPerformed
        com.afrisoftech.gbv.GbvDataIntfr comp = new com.afrisoftech.gbv.GbvDataIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_gbvmnitActionPerformed

    private void exemptionmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exemptionmnitActionPerformed
        com.afrisoftech.accounting.ExemptionWaiverintfr comp = new com.afrisoftech.accounting.ExemptionWaiverintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_exemptionmnitActionPerformed

    private void shiftreptotalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftreptotalmnitActionPerformed
        com.afrisoftech.lib.HosCashierDatePanel dates = new com.afrisoftech.lib.HosCashierDatePanel(this, pConnDB, true, this.ShiftNoPerCashier, connectDB);

        dates.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_shiftreptotalmnitActionPerformed

    private void shifttotalpercashpointmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shifttotalpercashpointmnitActionPerformed
        com.afrisoftech.lib.HosCashPointDatePanel dates = new com.afrisoftech.lib.HosCashPointDatePanel(this, pConnDB, true, this.ShiftNoPerPerPoint, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_shifttotalpercashpointmnitActionPerformed

    private void laboresultsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laboresultsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.LabWorkload, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_laboresultsmnitActionPerformed

    private void opworkloadmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opworkloadmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.OpWorkload, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_opworkloadmnitActionPerformed

    private void waiverexemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waiverexemnitActionPerformed
        com.afrisoftech.lib.AccountHosDatePanel dates = new com.afrisoftech.lib.AccountHosDatePanel(this, pConnDB, true, this.WaiverExe, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_waiverexemnitActionPerformed

    private void transbyaccmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transbyaccmnitActionPerformed1
        com.afrisoftech.lib.AccountHosDatePanel dates = new com.afrisoftech.lib.AccountHosDatePanel(this, pConnDB, true, this.TransByacc, connectDB);
        System.out.println("Launching the dialog");
        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_transbyaccmnitActionPerformed1

    private void laboworktimemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laboworktimemnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.LabTime, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_laboworktimemnitActionPerformed

    private void allocationmnitdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocationmnitdActionPerformed
        com.afrisoftech.votebook.ReverseCommitmentIntfr dismth = new com.afrisoftech.votebook.ReverseCommitmentIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);

        } catch (java.beans.PropertyVetoException pvt) {
        }

//        com.afrisoftech.votebook.Allocationintfr comp = new com.afrisoftech.votebook.Allocationintfr(connectDB, pConnDB);
//        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        try {
//            comp.setSelected(true);
//        } catch (java.beans.PropertyVetoException pvt) {
//        }        // TODO add your handling code here:
//        com.afrisoftech.votebook.BudgetQuaterlyBalancePdf policy = new com.afrisoftech.votebook.BudgetQuaterlyBalancePdf();
//
//                policy.BudgetQuaterlyBalancePdf(connectDB,jTextField36.);
    }//GEN-LAST:event_allocationmnitdActionPerformed

    private void dconsultationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dconsultationmnitActionPerformed
        com.afrisoftech.laboratory.ClerkingPatientsIntfr comp = new com.afrisoftech.laboratory.ClerkingPatientsIntfr(connectDB, pConnDB, getMainClass());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_dconsultationmnitActionPerformed

    private void LoanregmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoanregmnitActionPerformed
        com.afrisoftech.accounting.LoanRegistrationintfr prod = new com.afrisoftech.accounting.LoanRegistrationintfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }  // Add your handling code here:
}//GEN-LAST:event_LoanregmnitActionPerformed

    private void commitmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitmentmnitActionPerformed
        com.afrisoftech.votebook.Aiecommitmentintfr comp = new com.afrisoftech.votebook.Aiecommitmentintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // TODO add your handling code here:
    }//GEN-LAST:event_commitmentmnitActionPerformed

    private void votepaymentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_votepaymentmnitActionPerformed
        com.afrisoftech.accounting.DocumentTrackIntfr comp = new com.afrisoftech.accounting.DocumentTrackIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_votepaymentmnitActionPerformed

    private void anteNatalCaremnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteNatalCaremnitActionPerformed
        com.afrisoftech.records.FPMCHIntfr comp = new com.afrisoftech.records.FPMCHIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_anteNatalCaremnitActionPerformed

    private void vallocationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vallocationmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.VoteAllocation, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_vallocationmnitActionPerformed

    private void vcommitmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vcommitmentmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.VoteCommitment, connectDB);

        dates.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_vcommitmentmnitActionPerformed

    private void vpaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vpaymentsmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.VotePayment, connectDB);

        dates.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_vpaymentsmnitActionPerformed

    private void glreportsmn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glreportsmn
        // TODO add your handling code here:ActionPerformed
    }//GEN-LAST:event_glreportsmn

    private void outstandingcomitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outstandingcomitmnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.VoteComitOutStanding, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_outstandingcomitmnitActionPerformed

private void nursestationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursestationmnitActionPerformed
    com.afrisoftech.records.InpatientNurseStationIntfr comp = new com.afrisoftech.records.InpatientNurseStationIntfr(connectDB, this.pConnDB);
    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
    comp.setSize(saccopn.getSize());
    try {
        comp.setSelected(true);
    } catch (java.beans.PropertyVetoException pvt) {
    }
    // TODO add your handling code here:
}//GEN-LAST:event_nursestationmnitActionPerformed

private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
    com.afrisoftech.records.PatientDiagEditIntfr comp = new com.afrisoftech.records.PatientDiagEditIntfr(connectDB, pConnDB);
    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
    try {
        comp.setSelected(true);
    } catch (java.beans.PropertyVetoException pvt) {
    }// TODO add your handling code here:
}//GEN-LAST:event_jMenuItem5ActionPerformed

private void dailybedreturnSummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailybedreturnSummarymnitActionPerformed

    com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.DBRSummary, connectDB);

    dates.setVisible(true);
    // TODO add your handling code here:
}//GEN-LAST:event_dailybedreturnSummarymnitActionPerformed

private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

    com.afrisoftech.records.PaediatricIntfr comp = new com.afrisoftech.records.PaediatricIntfr(connectDB, pConnDB);
    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
    try {
        comp.setSelected(true);
    } catch (java.beans.PropertyVetoException pvt) {
    }
    // TODO add your handling code here:
}//GEN-LAST:event_jMenuItem6ActionPerformed

private void glaccountsmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glaccountsmnit1ActionPerformed
    com.afrisoftech.accounting.ActivitiesEntIntfr comp = new com.afrisoftech.accounting.ActivitiesEntIntfr(connectDB, pConnDB);
    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
    try {
        comp.setSelected(true);
    } catch (java.beans.PropertyVetoException pvt) {
    }// TODO add your handling code here:
}//GEN-LAST:event_glaccountsmnit1ActionPerformed

    private void storeAllocationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeAllocationsmnitActionPerformed
        com.afrisoftech.accounting.PharmacyPointsIntfr comp = new com.afrisoftech.accounting.PharmacyPointsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_storeAllocationsmnitActionPerformed

    private void cafeteriaSalesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cafeteriaSalesmnitActionPerformed

        int rowsNo = 0;

        try {


            /*
             * java.sql.Statement stmtx = connectDB.createStatement();
             * java.sql.ResultSet rsetx = stmtx.executeQuery("select code from
             * ac_cash_points_setup where description = current_user"); while
             * (rsetx.next()) { cashPointPett = rsetx.getObject(1).toString();
             *
             * }
             */
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.Statement stmt1 = connectDB.createStatement();
            // java.sql.ResultSet rset = stmt.executeQuery("select user,count(debit),sum(debit + credit) from ac_cash_book where account_no ='"+jComboBox2.getSelectedItem()+"' and description !='' and reconciled = false AND date BETWEEN '"+datePicker1.getDate().toString()+"' AND '"+datePicker2.getDate().toString()+"' group by account_name");
            // java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike '"+System.getProperty("currentuser")+"' AND (status = 'Running' OR status = 'Suspended')");
            java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

            while (rset1.next()) {

                rowsNo = rset1.getInt(1);

            }
            if (rowsNo < 1) {
                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;

                    try {

                        java.sql.Statement stmtf = connectDB.createStatement();
                        java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description = current_user");
                        while (rsetf.next()) {
                            // cashPointPett = rsetf.getObject(1).toString();
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        System.out.println("select not successful");
                    }
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                        pstmt.setString(1, System.getProperty("cashpoint"));
                        //pstmt.setString(1, cashPointPett);
                        pstmt.setString(2, "Running");
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    //  status = true;
                    com.afrisoftech.accounting.CafeteriaBillPaymentsIntfr comp = new com.afrisoftech.accounting.CafeteriaBillPaymentsIntfr(connectDB, pConnDB);
                    saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        comp.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.CafeteriaBillPaymentsIntfr comp = new com.afrisoftech.accounting.CafeteriaBillPaymentsIntfr(connectDB, pConnDB);
                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    comp.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }

            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_cafeteriaSalesmnitActionPerformed

    private void inventoryACLmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryACLmnitActionPerformed

        com.afrisoftech.hospinventory.UserSetupInventoryHospitalIntfr comp = new com.afrisoftech.hospinventory.UserSetupInventoryHospitalIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryACLmnitActionPerformed

    private void hcmACLmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hcmACLmnitActionPerformed
        com.afrisoftech.hr.UserSetupHRHospitalIntfr comp = new com.afrisoftech.hr.UserSetupHRHospitalIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_hcmACLmnitActionPerformed

    private void payrollACLmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollACLmnitActionPerformed
        com.afrisoftech.hospayroll.UserSetupPayrollHospitalIntfr comp = new com.afrisoftech.hospayroll.UserSetupPayrollHospitalIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_payrollACLmnitActionPerformed

    private void attendancepaidupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendancepaidupmnitActionPerformed
        com.afrisoftech.lib.HosDepDatePanel dates = new com.afrisoftech.lib.HosDepDatePanel(this, pConnDB, true, this.AttendanceSheetPaidup, connectDB);

        dates.setVisible(true);

        // com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.AttendanceSheetPaidup, connectDB);
        // dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_attendancepaidupmnitActionPerformed

    private void otherReceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherReceiptsmnitActionPerformed
        com.afrisoftech.accounting.OtherRecptintfr comp = new com.afrisoftech.accounting.OtherRecptintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_otherReceiptsmnitActionPerformed

    private void PregistermnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PregistermnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PregistermnActionPerformed

    private void billingStationAllocationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingStationAllocationmnitActionPerformed

        com.afrisoftech.accounting.BillingPointsIntfr comp = new com.afrisoftech.accounting.BillingPointsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_billingStationAllocationmnitActionPerformed

    private void serviceCharterAdjustmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceCharterAdjustmentmnitActionPerformed

        com.afrisoftech.hospital.ServiceCharterAdjustmentIntfr comp = new com.afrisoftech.hospital.ServiceCharterAdjustmentIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_serviceCharterAdjustmentmnitActionPerformed

    private void securityReleasemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_securityReleasemnitActionPerformed

        com.afrisoftech.accounting.SecurityReleaseIntfr comp = new com.afrisoftech.accounting.SecurityReleaseIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            //   PatientRegisterIntfr
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_securityReleasemnitActionPerformed

    private void patientReleasemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientReleasemnitActionPerformed
        com.afrisoftech.accounting.FinalizeSchemeInvsNhifIntfr comp = new com.afrisoftech.accounting.FinalizeSchemeInvsNhifIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_patientReleasemnitActionPerformed

    private void finaliseipnhifmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finaliseipnhifmnitActionPerformed
        int rowsNo = 0;
        int codes = 0;
        try {

            java.sql.Statement stmtx1 = connectDB.createStatement();
            java.sql.ResultSet rsetx1 = stmtx1.executeQuery("select COUNT(code) from ac_cash_points_setup where description = current_user");
            while (rsetx1.next()) {
                codes = rsetx1.getInt(1);

            }
            if (codes > 0) {
                java.sql.Statement stmtx = connectDB.createStatement();
                java.sql.ResultSet rsetx = stmtx.executeQuery("select code from ac_cash_points_setup where description = current_user");
                while (rsetx.next()) {
                    //  cashPointPett = rsetx.getObject(1).toString();
                }

                java.sql.Statement stmt = connectDB.createStatement();
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select count(user_name) from ac_shifts where  user_name ilike current_user AND (status = 'Running' OR status = 'Suspended')");

                while (rset1.next()) {

                    rowsNo = rset1.getInt(1);

                }
                rowsNo = 1;
                if (rowsNo < 1) {
                    int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                    if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                        java.util.Calendar calendar = java.util.Calendar.getInstance();

                        long dateNow = calendar.getTimeInMillis();

                        java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                        System.out.println(datenowSql1.toString());

                        java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                        System.out.println(datenowSql.toString());

                        String current_user;

                        try {

                            java.sql.Statement stmtf = connectDB.createStatement();
                            java.sql.ResultSet rsetf = stmtf.executeQuery("select code from ac_cash_points_setup where description ilike current_user");
                            while (rsetf.next()) {
                                //cashPointPett = rsetf.getObject(1).toString();
                            }
                        } catch (java.sql.SQLException sqe) {
                            sqe.printStackTrace();
                            System.out.println("select not successful");
                        }
                        try {
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");

                            pstmt.setString(1, cashPoint);
                            pstmt.setString(2, "Running");
                            pstmt.executeUpdate();
                        } catch (java.sql.SQLException sqE) {
                            sqE.printStackTrace();
                        }
                        System.out.println("Opening shift");

                        com.afrisoftech.accounting.FinSchemeInvsNhifRebateIntfr prod = new com.afrisoftech.accounting.FinSchemeInvsNhifRebateIntfr(connectDB, pConnDB);
                        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                        try {
                            prod.setSelected(true);
                        } catch (java.beans.PropertyVetoException pvt) {
                        }

                    }
                } else {
                    com.afrisoftech.accounting.FinSchemeInvsNhifRebateIntfr prod = new com.afrisoftech.accounting.FinSchemeInvsNhifRebateIntfr(connectDB, pConnDB);
                    saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                    try {
                        prod.setSelected(true);
                    } catch (java.beans.PropertyVetoException pvt) {
                    }

                }
            } else {
                com.afrisoftech.accounting.FinSchemeInvsNhifRebateIntfr prod = new com.afrisoftech.accounting.FinSchemeInvsNhifRebateIntfr(connectDB, pConnDB);
                saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
                try {
                    prod.setSelected(true);
                } catch (java.beans.PropertyVetoException pvt) {
                }
            }
        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }        // TODO add your handling code here:
    }//GEN-LAST:event_finaliseipnhifmnitActionPerformed

    private void mobilepayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobilepayBtnActionPerformed
        com.afrisoftech.accounting.MpesaDetailsintfr comp = new com.afrisoftech.accounting.MpesaDetailsintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_mobilepayBtnActionPerformed

    private void voteDepartmentmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteDepartmentmnitActionPerformed
        com.afrisoftech.hospital.VoteDepartmentIntfr comp = new com.afrisoftech.hospital.VoteDepartmentIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_voteDepartmentmnitActionPerformed

    private void procurementPlanmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procurementPlanmnitActionPerformed
//        com.afrisoftech.accounting.ProcurementPlanIntfr comp = new com.afrisoftech.accounting.ProcurementPlanIntfr(connectDB);
//        comp.setSize(saccopn.getSize());
//        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        try {
//            comp.setSelected(true);
//        } catch (java.beans.PropertyVetoException pvt) {
//        }
        // TODO add your handling code here:
        com.afrisoftech.hospinventory.ProcurementPlanDialog dismth = new com.afrisoftech.hospinventory.ProcurementPlanDialog(null, true, connectDB);
        dismth.setSize(1300, 700);
        dismth.setVisible(true);

    }//GEN-LAST:event_procurementPlanmnitActionPerformed

    private void aiemnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aiemnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aiemnActionPerformed

    private void voteBookBalancesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteBookBalancesmnitActionPerformed
        com.afrisoftech.votebook.SetVoteBalancesIntfr comp = new com.afrisoftech.votebook.SetVoteBalancesIntfr(connectDB, pConnDB);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_voteBookBalancesmnitActionPerformed

    private void shiftsurrendermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftsurrendermnitActionPerformed
        com.afrisoftech.lib.HosShiftDatePanel dates = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, this.ShiftSurrender, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_shiftsurrendermnitActionPerformed

    private void staffStatementsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffStatementsmnitActionPerformed
        com.afrisoftech.lib.StaffInPatientDatePanel dates = new com.afrisoftech.lib.StaffInPatientDatePanel(this, pConnDB, true, this.StaffStatement, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_staffStatementsmnitActionPerformed

    private void cafeteriaDebtorsStatementmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cafeteriaDebtorsStatementmnitActionPerformed
        com.afrisoftech.lib.CafeteriaScemesDatePanel_1 dates = new com.afrisoftech.lib.CafeteriaScemesDatePanel_1(this, pConnDB, true, this.CafeteriaStaffStatement, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_cafeteriaDebtorsStatementmnitActionPerformed

    private void mortTransferMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mortTransferMnitActionPerformed
        com.afrisoftech.hospital.MortTransferInfr comp = new com.afrisoftech.hospital.MortTransferInfr(connectDB, pConnDB);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // TODO add your handling code here:
    }//GEN-LAST:event_mortTransferMnitActionPerformed

    private void postOpeningBalancesPatientsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postOpeningBalancesPatientsmnitActionPerformed
        com.afrisoftech.hospital.OpeningBalanceGeneralBillingIntfr comp = new com.afrisoftech.hospital.OpeningBalanceGeneralBillingIntfr(connectDB, pConnDB);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_postOpeningBalancesPatientsmnitActionPerformed

    private void accessControlMnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessControlMnitActionPerformed

        com.afrisoftech.lib.SecuritySettings.setUserAccessControl(connectDB);

        // TODO add your handling code here:
    }//GEN-LAST:event_accessControlMnitActionPerformed

    private void namesearchmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesearchmnit1ActionPerformed
        com.afrisoftech.accounting.NameSearchIntfr comp = new com.afrisoftech.accounting.NameSearchIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_namesearchmnit1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //     this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void nursingBillingmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursingBillingmnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nursingBillingmnActionPerformed

    private void theatrebillingNursingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatrebillingNursingmnitActionPerformed
        TheatreBillingIntfr comp = new TheatreBillingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // TODO add your handling code here:
    }//GEN-LAST:event_theatrebillingNursingmnitActionPerformed

    private void nursingGeneralBillingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursingGeneralBillingmnitActionPerformed
        com.afrisoftech.hospital.GeneralBillingIntfr comp = new com.afrisoftech.hospital.GeneralBillingIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // TODO add your handling code here:
    }//GEN-LAST:event_nursingGeneralBillingmnitActionPerformed

    private void wardProceduresmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardProceduresmnitActionPerformed
        com.afrisoftech.laboratory.NursingNotesIntfr comp = new com.afrisoftech.laboratory.NursingNotesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }     // TODO add your handling code here:
    }//GEN-LAST:event_wardProceduresmnitActionPerformed

    private void nursingStoresmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursingStoresmnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nursingStoresmnActionPerformed

    private void pharmacyBillingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyBillingmnitActionPerformed
        com.afrisoftech.hospinventory.PatientsBillingIntfr_ dismth = new com.afrisoftech.hospinventory.PatientsBillingIntfr_(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_pharmacyBillingmnitActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void suppliesDressingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesDressingmnitActionPerformed
        com.afrisoftech.hospinventory.PatientsBillingIpIntfr dismth = new com.afrisoftech.hospinventory.PatientsBillingIpIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_suppliesDressingmnitActionPerformed

    private void chartaccountsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartaccountsmnitActionPerformed
        com.afrisoftech.reports.AllAccountsPdf policy = new com.afrisoftech.reports.AllAccountsPdf();
        policy.AllAccountsPdf(connectDB);
        // TODO add your handling code here:
    }//GEN-LAST:event_chartaccountsmnitActionPerformed

    private void paymentSchedulemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentSchedulemnitActionPerformed
        com.afrisoftech.accounting.PaymentScheduleIntfr dismth = new com.afrisoftech.accounting.PaymentScheduleIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentSchedulemnitActionPerformed

    private void nhifStatementmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhifStatementmnitActionPerformed
        com.afrisoftech.lib.NHIFHosScemesDatePanel dates = new com.afrisoftech.lib.NHIFHosScemesDatePanel(this, pConnDB, true, this.NHIFAccntStatement, connectDB);

        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_nhifStatementmnitActionPerformed

    private void wardOccupancyReportsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardOccupancyReportsmnitActionPerformed

        com.afrisoftech.hospital.WardOccupancyIntfr dismth = new com.afrisoftech.hospital.WardOccupancyIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_wardOccupancyReportsmnitActionPerformed

    private void clinicsSpecialtiesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clinicsSpecialtiesmnitActionPerformed

        com.afrisoftech.hospital.ClinicsRegisterIntfr dismth = new com.afrisoftech.hospital.ClinicsRegisterIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_clinicsSpecialtiesmnitActionPerformed

    private void storesSecuritymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storesSecuritymnitActionPerformed

        com.afrisoftech.accounting.SecurityStoresReleaseIntfr dismth = new com.afrisoftech.accounting.SecurityStoresReleaseIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_storesSecuritymnitActionPerformed

    private void directPaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directPaymentsmnitActionPerformed
        com.afrisoftech.votebook.PaymentVoucherIntfr dismth = new com.afrisoftech.votebook.PaymentVoucherIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_directPaymentsmnitActionPerformed

    private void nursingOperationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursingOperationsmnitActionPerformed

        com.afrisoftech.hospital.NursingComboTasksIntfr dismth = new com.afrisoftech.hospital.NursingComboTasksIntfr(connectDB, pConnDB, getMainClass());
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_nursingOperationsmnitActionPerformed

    private void extendedNursingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extendedNursingmnitActionPerformed
        com.afrisoftech.nursing.NursingOperationsIntfr dismth = new com.afrisoftech.nursing.NursingOperationsIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_extendedNursingmnitActionPerformed

    private void clinicBookingsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clinicBookingsmnitActionPerformed
        com.afrisoftech.hospital.ClinicsOccupancyIntfr dismth = new com.afrisoftech.hospital.ClinicsOccupancyIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_clinicBookingsmnitActionPerformed

    private void groupedTBmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupedTBmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.GroupedTb, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_groupedTBmnitActionPerformed

    private void orderPaymentCommitmentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderPaymentCommitmentsmnitActionPerformed
        com.afrisoftech.votebook.CommitmentsIntfr dismth = new com.afrisoftech.votebook.CommitmentsIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_orderPaymentCommitmentsmnitActionPerformed

    private void automatedChargesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automatedChargesmnitActionPerformed

        com.afrisoftech.hmis.automatedoperations.AutomatedOperationsChargesIntfr dismth = new com.afrisoftech.hmis.automatedoperations.AutomatedOperationsChargesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_automatedChargesmnitActionPerformed

    private void mortOccupancymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mortOccupancymnitActionPerformed

        com.afrisoftech.hospital.MortOccupancyIntfr dismth = new com.afrisoftech.hospital.MortOccupancyIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // TODO add your handling code here:
    }//GEN-LAST:event_mortOccupancymnitActionPerformed

    private void cashSalesReportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashSalesReportmnitActionPerformed

        biz.systempartners.reports.CashSalesReportIntfr dismth = new biz.systempartners.reports.CashSalesReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // TODO add your handling code here:
        // }
        // TODO add your handling code here:
    }//GEN-LAST:event_cashSalesReportmnitActionPerformed

    private void creditSalesReportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditSalesReportmnitActionPerformed
        biz.systempartners.reports.CreditSalesReportIntfr dismth = new biz.systempartners.reports.CreditSalesReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_creditSalesReportmnitActionPerformed

    private void imprestPettyCashPaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestPettyCashPaymentsmnitActionPerformed
        com.afrisoftech.accounting.TemporaryImprestIntfr dismth = new com.afrisoftech.accounting.TemporaryImprestIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_imprestPettyCashPaymentsmnitActionPerformed

    private void accountstransmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountstransmnitActionPerformed
        com.afrisoftech.lib.AccountHosDatePanel dates = new com.afrisoftech.lib.AccountHosDatePanel(this, pConnDB, true, this.TransByacc, connectDB);
        System.out.println("Launching the dialog");
        dates.setVisible(true);     // TODO add your handling code here:
    }//GEN-LAST:event_accountstransmnitActionPerformed

    private void approvedImprestmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvedImprestmnitActionPerformed
        com.afrisoftech.accounting.ImprestExaminationAccIntr dismth = new com.afrisoftech.accounting.ImprestExaminationAccIntr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_approvedImprestmnitActionPerformed

    private void approvedVouchersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvedVouchersmnitActionPerformed
        biz.systempartners.reports.ApprovedVouchersIntfr dismth = new biz.systempartners.reports.ApprovedVouchersIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_approvedVouchersmnitActionPerformed

    private void rebatesCreditSalesReportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rebatesCreditSalesReportmnitActionPerformed
        biz.systempartners.reports.NHIFCreditSalesIntfr dismth = new biz.systempartners.reports.NHIFCreditSalesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_rebatesCreditSalesReportmnitActionPerformed

    private void creditSalesDetailedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditSalesDetailedmnitActionPerformed
        biz.systempartners.reports.CreditSalesDetailsIntfr dismth = new biz.systempartners.reports.CreditSalesDetailsIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_creditSalesDetailedmnitActionPerformed

    private void casualtymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casualtymnitActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NursingWards dialog = new NursingWards(new javax.swing.JFrame(), true, connectDB);

                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_casualtymnitActionPerformed

    private void theatermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatermnitActionPerformed

        com.afrisoftech.theater.NursingTheatre dismt = new com.afrisoftech.theater.NursingTheatre(connectDB, pConnDB);
        dismt.setVisible(true);
        saccopn.add(dismt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismt.setSelected(true);
            dismt.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
            System.out.println("the nursing theater problem is " + pvt);
        }

//          java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                Theatre dialog = new Theatre(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//        
        //jButton524.doClick();

    }//GEN-LAST:event_theatermnitActionPerformed

    private void creditorsViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsViewActionPerformed
        biz.systempartners.reports.CreditorsStatementView dismth = new biz.systempartners.reports.CreditorsStatementView(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_creditorsViewActionPerformed

    private void useraccountsmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useraccountsmnActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserAccountsDialog dialog = new UserAccountsDialog(new javax.swing.JFrame(), true, pConnDB, connectDB);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        try {
                            connectDB.close();
                        } catch (SQLException ex) {
                            ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                        }
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_useraccountsmnActionPerformed

    private void useractivitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useractivitiesActionPerformed

        biz.systempartners.reports.UserActivitesIntfr dismth = new biz.systempartners.reports.UserActivitesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (Exception pvt) {
        }

    }//GEN-LAST:event_useractivitiesActionPerformed

    private void examineImprestmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examineImprestmnitActionPerformed
        com.afrisoftech.accounting.ImprestCheckingAccIntr dismth = new com.afrisoftech.accounting.ImprestCheckingAccIntr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_examineImprestmnitActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        com.afrisoftech.hospital.HospitalMain.mainSplitPane.setDividerLocation(0);
        com.afrisoftech.votebook.Expenditure_dashboardIntFr dismth = new com.afrisoftech.votebook.Expenditure_dashboardIntFr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void theatreSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theatreSetupActionPerformed
        com.afrisoftech.hospital.TheatreSetupIntfr dismth = new com.afrisoftech.hospital.TheatreSetupIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

    }//GEN-LAST:event_theatreSetupActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        biz.systempartners.reports.ImprestFinalReporter reporter = new biz.systempartners.reports.ImprestFinalReporter(connectDB);//connectDB, pConnDB);

        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void creditorssummarybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorssummarybtnActionPerformed
        biz.systempartners.reports.CreditorReportIntfr reporter = new biz.systempartners.reports.CreditorReportIntfr(connectDB);//connectDB, pConnDB);

        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_creditorssummarybtnActionPerformed

    private void generatedVouchersitemmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatedVouchersitemmnitActionPerformed
        biz.systempartners.reports.GeneratedVouchersIntfr dismth = new biz.systempartners.reports.GeneratedVouchersIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_generatedVouchersitemmnitActionPerformed

    private void nurseraisebillmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nurseraisebillmnitActionPerformed
        // TODO add your handling code here:
        javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.PatientsBillingIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }

    }//GEN-LAST:event_nurseraisebillmnitActionPerformed

    private void triagemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_triagemnitActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                com.afrisoftech.nursing.NursingClinics dialog = new com.afrisoftech.nursing.NursingClinics(new javax.swing.JFrame(), true, connectDB);

                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_triagemnitActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        com.afrisoftech.hospinventory.StockMain.s13analysismenuitem.doClick();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void unrecordedRecItemsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unrecordedRecItemsmnitActionPerformed
        com.afrisoftech.accounting.unrecordedReconcilingItems dismth = new com.afrisoftech.accounting.unrecordedReconcilingItems(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_unrecordedRecItemsmnitActionPerformed

    private void reconcilationreportermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reconcilationreportermnitActionPerformed
        biz.systempartners.reports.BankStatements dismth = new biz.systempartners.reports.BankStatements(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_reconcilationreportermnitActionPerformed

    private void bloodpackmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodpackmnitActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                com.afrisoftech.nursing.BloodPackVerification dialog = new com.afrisoftech.nursing.BloodPackVerification(new javax.swing.JFrame(), true, connectDB, pConnDB);
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_bloodpackmnitActionPerformed

    private void nursessetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursessetupmnitActionPerformed
        com.afrisoftech.hospital.NursesSetUpIntfr dismth = new com.afrisoftech.hospital.NursesSetUpIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_nursessetupmnitActionPerformed

    private void groupedSurrendermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupedSurrendermnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.lib.HosShiftDatePanel dlg = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, groupedShiftrpt, connectDB);
        //999922
        // saccopn.add(dlg, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dlg.setVisible(true);
        // dlg.setSize(500, 300);


    }//GEN-LAST:event_groupedSurrendermnitActionPerformed

    private void divisionalSurrendermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionalSurrendermnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.lib.HosShiftDatePanel dlg = new com.afrisoftech.lib.HosShiftDatePanel(this, pConnDB, true, divShiftrpt, connectDB);
        //999922
        //   saccopn.add(dlg, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dlg.setVisible(true);
        //dlg.setSize(500, 300);


    }//GEN-LAST:event_divisionalSurrendermnitActionPerformed

    private void allocation1mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocation1mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.YearlyAllocationIntFr comp = new com.afrisoftech.votebook.YearlyAllocationIntFr(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_allocation1mnitActionPerformed

    private void allocation2mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocation2mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.QuarterlySpillOverIntFr comp = new com.afrisoftech.votebook.QuarterlySpillOverIntFr(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_allocation2mnitActionPerformed

    private void allocation3mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocation3mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.VirementAllocationIntFr comp = new com.afrisoftech.votebook.VirementAllocationIntFr(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_allocation3mnitActionPerformed

    private void allocation4mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocation4mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.Lpo_LsoCommitmentintfr comp = new com.afrisoftech.accounting.Lpo_LsoCommitmentintfr(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_allocation4mnitActionPerformed

    private void allocation5mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocation5mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.voteExpenditure comp = new com.afrisoftech.votebook.voteExpenditure(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_allocation5mnitActionPerformed

    private void hcmACL1mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hcmACL1mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.headsSetupIntfr comp = new com.afrisoftech.votebook.headsSetupIntfr(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_hcmACL1mnitActionPerformed

    private void payrollACL1mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollACL1mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.QuarterSetupIntFr comp = new com.afrisoftech.votebook.QuarterSetupIntFr(connectDB, null);
        comp.setSize(saccopn.getSize());
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setVisible(true);
            comp.setSelected(true);

        } catch (Exception pvt) {

            pvt.printStackTrace();
            System.out.println(pvt.getMessage());
        }

    }//GEN-LAST:event_payrollACL1mnitActionPerformed

    private void LinkGrn1mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinkGrn1mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.AccountingApproval comp = new com.afrisoftech.accounting.AccountingApproval(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_LinkGrn1mnitActionPerformed

    private void LinkGrn2mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinkGrn2mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.VoucherExaminationInfr comp = new com.afrisoftech.accounting.VoucherExaminationInfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_LinkGrn2mnitActionPerformed

    private void LinkGrn3mnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinkGrn3mnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.VoucherApprintfr comp = new com.afrisoftech.accounting.VoucherApprintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_LinkGrn3mnitActionPerformed

    private void entireVoteBookmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entireVoteBookmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.lib.HosBudgetPanel dates = new com.afrisoftech.lib.HosBudgetPanel(this, pConnDB, true, 20, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_entireVoteBookmnitActionPerformed

    private void departmentalVoteBookmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentalVoteBookmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.lib.HosBudgetPanel dates = new com.afrisoftech.lib.HosBudgetPanel(this, pConnDB, true, 22, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_departmentalVoteBookmnitActionPerformed

    private void entireProcurementPlanmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entireProcurementPlanmnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entireProcurementPlanmnitActionPerformed

    private void departmentalVoteBookmnit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentalVoteBookmnit1ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.lib.HosBudgetPanel dates = new com.afrisoftech.lib.HosBudgetPanel(this, pConnDB, true, 21, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_departmentalVoteBookmnit1ActionPerformed

    private void departmentalVoteBookmnit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentalVoteBookmnit2ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.votebook.VoteheadPdf policy = new com.afrisoftech.votebook.VoteheadPdf();

        policy.VoteheadPdf(connectDB);
    }//GEN-LAST:event_departmentalVoteBookmnit2ActionPerformed

    private void servicesstmntmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesstmntmnitActionPerformed

        javax.swing.JInternalFrame comp = new com.afrisoftech.reports.ServicesSalesViewSummary(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setSelected(true);
            comp.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_servicesstmntmnitActionPerformed

    private void unutilisedepositmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unutilisedepositmnitActionPerformed
        com.afrisoftech.lib.HosDepositsDatePanel dates = new com.afrisoftech.lib.HosDepositsDatePanel(this, true, 96, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_unutilisedepositmnitActionPerformed

    private void patientstatementmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientstatementmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, 200, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_patientstatementmnitActionPerformed

    private void divisionalexpendituremnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionalexpendituremnitActionPerformed
        com.afrisoftech.lib.HosVotePanel dates = new com.afrisoftech.lib.HosVotePanel(this, pConnDB, true, 20, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_divisionalexpendituremnitActionPerformed

    private void debtorTypemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorTypemnitActionPerformed
        javax.swing.JInternalFrame comp = new com.afrisoftech.hospital.DebtorType(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            comp.setSelected(true);
            comp.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_debtorTypemnitActionPerformed

    private void nonstockitemmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonstockitemmnitActionPerformed
        com.afrisoftech.accounting.ImprestSurrenderIntfrNonSkable dismth = new com.afrisoftech.accounting.ImprestSurrenderIntfrNonSkable(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_nonstockitemmnitActionPerformed

    private void patientrefundmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientrefundmnitActionPerformed
        com.afrisoftech.hospital.PatientRefund dismth = new com.afrisoftech.hospital.PatientRefund(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_patientrefundmnitActionPerformed

    private void taxsetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxsetupmnitActionPerformed
        com.afrisoftech.hospital.TaxRegisterIntfr prod = new com.afrisoftech.hospital.TaxRegisterIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
            prod.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_taxsetupmnitActionPerformed

    private void clerkingServicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clerkingServicesmnitActionPerformed
        com.afrisoftech.hospital.DoctorRequestSetupIntfr comp = new com.afrisoftech.hospital.DoctorRequestSetupIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_clerkingServicesmnitActionPerformed

    private void MonthlyrevmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyrevmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, 120, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_MonthlyrevmnitActionPerformed

    private void creditorsageingbycatmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsageingbycatmnitActionPerformed
        biz.systempartners.reports.CreditorAgingView comp = new biz.systempartners.reports.CreditorAgingView(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_creditorsageingbycatmnitActionPerformed

    private void MonthlyrevCompmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyrevCompmnitActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        biz.systempartners.reports.MonthlyRevView comp = new biz.systempartners.reports.MonthlyRevView(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_MonthlyrevCompmnitActionPerformed

    private void dispatchedmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchedmnActionPerformed
        biz.systempartners.reports.DispatchedInvoicesViewIntfr prod = new biz.systempartners.reports.DispatchedInvoicesViewIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
            prod.setSize(saccopn.getSize());
            prod.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_dispatchedmnActionPerformed

    private void boardMembersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boardMembersmnitActionPerformed
        // TODO add your handling code here:
        biz.systempartners.reports.OtherPaymentsReporterIntr reporter = new biz.systempartners.reports.OtherPaymentsReporterIntr(connectDB);//connectDB, pConnDB);

        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_boardMembersmnitActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.SalariesPaymentIntfr dismth = new com.afrisoftech.accounting.SalariesPaymentIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void alteredreceiptsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alteredreceiptsmnitActionPerformed
        // TODO add your handling code here:
        biz.systempartners.reports.cancelledTransferredReceiptReporter reporter = new biz.systempartners.reports.cancelledTransferredReceiptReporter(connectDB);//connectDB, pConnDB);

        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_alteredreceiptsmnitActionPerformed

    private void depositsviewmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositsviewmnitActionPerformed
        biz.systempartners.reports.DepositsStatementView dismth = new biz.systempartners.reports.DepositsStatementView(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_depositsviewmnitActionPerformed

    private void InPatsInvTotalmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InPatsInvTotalmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FinalInPatInvTotal, connectDB);

        dates.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_InPatsInvTotalmnitActionPerformed

    private void InPatInvCashmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InPatInvCashmnitActionPerformed
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.FinalInPatInvCash, connectDB);

        dates.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_InPatInvCashmnitActionPerformed

    private void sumfinalinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumfinalinvmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, 201, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_sumfinalinvmnitActionPerformed

    private void detailedfinalinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedfinalinvmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, 202, connectDB);
        dates.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_detailedfinalinvmnitActionPerformed

    private void patientdiagnosisreportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientdiagnosisreportmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.records.reports.Diagnosisreport comp = new com.afrisoftech.records.reports.Diagnosisreport(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

    }//GEN-LAST:event_patientdiagnosisreportmnitActionPerformed

    private void journalsviewmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_journalsviewmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.reports.JournalsView comp = new com.afrisoftech.reports.JournalsView(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setVisible(true);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

    }//GEN-LAST:event_journalsviewmnitActionPerformed

    private void transferItemsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferItemsmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.hospital.MovingServiceItemsIntfr comp = new com.afrisoftech.hospital.MovingServiceItemsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setVisible(true);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_transferItemsmnitActionPerformed

    private void ward2wardtransfermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward2wardtransfermnitActionPerformed
        // TODO add your handling code here:
        wardtfrmnit.doClick();
    }//GEN-LAST:event_ward2wardtransfermnitActionPerformed

    private void debtorinvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debtorinvmnitActionPerformed
        // TODO add your handling code here:

        com.afrisoftech.lib.DebtorInvoices dates = new com.afrisoftech.lib.DebtorInvoices(this, pConnDB, true, this.InvByInvDbt, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_debtorinvmnitActionPerformed

    private void labmonthlyanalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labmonthlyanalysismnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MonthlylabSummary, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_labmonthlyanalysismnitActionPerformed

    private void xraymonthlyanalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xraymonthlyanalysismnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.MonthlyxraySummary, connectDB);

        dates.setVisible(true); // TODO add your handling code here:
    }//GEN-LAST:event_xraymonthlyanalysismnitActionPerformed

    private void admrqmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admrqmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.accounting.AdmissionRequestIntfr comp = new com.afrisoftech.accounting.AdmissionRequestIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_admrqmnitActionPerformed

    private void inpprvvstmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpprvvstmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.hospital.PatientPreviousVisit comp = new com.afrisoftech.hospital.PatientPreviousVisit(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_inpprvvstmnitActionPerformed

    private void cashbookReportsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashbookReportsmnitActionPerformed
        //   TODO add your handling code here:
        com.afrisoftech.reports.CashBookReportsIntfr comp = new com.afrisoftech.reports.CashBookReportsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_cashbookReportsmnitActionPerformed

    private void schemeExclusionsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeExclusionsmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.records.SchemeExclusionsIntfr comp = new com.afrisoftech.records.SchemeExclusionsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_schemeExclusionsmnitActionPerformed

    private void allergiesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allergiesmnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.records.AllergiesIntfr comp = new com.afrisoftech.records.AllergiesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_allergiesmnitActionPerformed

    private void receivablesDashboardmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivablesDashboardmnitActionPerformed
        com.afrisoftech.accounting.ReceivablesDashBoardIntfr comp = new com.afrisoftech.accounting.ReceivablesDashBoardIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_receivablesDashboardmnitActionPerformed

    private void editPatientNamesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatientNamesmnitActionPerformed
        com.afrisoftech.hospital.NameAdjustmentIntfr comp = new com.afrisoftech.hospital.NameAdjustmentIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_editPatientNamesmnitActionPerformed

    private void registersmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registersmnitActionPerformed
        com.afrisoftech.reports.BillAndCashCollectionRegistersIntfr comp = new com.afrisoftech.reports.BillAndCashCollectionRegistersIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_registersmnitActionPerformed

    private void helpDeskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpDeskActionPerformed
        biz.systempartners.utils.HelpDeskIntfr comp = new biz.systempartners.utils.HelpDeskIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_helpDeskActionPerformed

    private void helpdeskOperationsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpdeskOperationsmnitActionPerformed
        biz.systempartners.utils.HelpDeskOperationsIntfr comp = new biz.systempartners.utils.HelpDeskOperationsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_helpdeskOperationsmnitActionPerformed

    private void emrDashBoardmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emrDashBoardmnitActionPerformed
        com.afrisoftech.reports.emr.EMRReportsIntfr comp = new com.afrisoftech.reports.emr.EMRReportsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_emrDashBoardmnitActionPerformed

    private void bedsoremnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedsoremnActionPerformed
        com.afrisoftech.nursing.NursingReporterIntfr reporter = new com.afrisoftech.nursing.NursingReporterIntfr(connectDB);//connectDB, pConnDB);

        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
            reporter.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_bedsoremnActionPerformed

    private void patientrepotsmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientrepotsmnActionPerformed
        biz.systempartners.reports.inPatientReporter reporter = new biz.systempartners.reports.inPatientReporter(connectDB);
        saccopn.add(reporter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            reporter.setSize(saccopn.getSize());
            reporter.setSelected(true);
            reporter.setVisible(true);
            //comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_patientrepotsmnActionPerformed

    private void reportingdepartmentalMenuItemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportingdepartmentalMenuItemnitActionPerformed
        com.afrisoftech.nursingreports.NursingDepartmentalREpIntfr comp = new com.afrisoftech.nursingreports.NursingDepartmentalREpIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setVisible(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add you
    }//GEN-LAST:event_reportingdepartmentalMenuItemnitActionPerformed

    private void reportincidenceMenuItemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportincidenceMenuItemnitActionPerformed
        com.afrisoftech.nursingreports.IncidenceReportintfr comp = new com.afrisoftech.nursingreports.IncidenceReportintfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setVisible(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_reportincidenceMenuItemnitActionPerformed

    private void approveincidenceMenuItemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveincidenceMenuItemnitActionPerformed
        com.afrisoftech.nursingreports.IncidenceReportApprovalintfr comp = new com.afrisoftech.nursingreports.IncidenceReportApprovalintfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setVisible(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_approveincidenceMenuItemnitActionPerformed

    private void viewincidenceMenuItemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewincidenceMenuItemnitActionPerformed
        com.afrisoftech.nursingreports.IncidenceReportApprovedintfr comp = new com.afrisoftech.nursingreports.IncidenceReportApprovedintfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setVisible(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
    }//GEN-LAST:event_viewincidenceMenuItemnitActionPerformed

    private void creditorsLedgermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditorsLedgermnitActionPerformed
        // TODO add your handling code here:
        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, 12090, connectDB);

        dates.setVisible(true);
    }//GEN-LAST:event_creditorsLedgermnitActionPerformed

    private void dailybedreturnDetailedmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailybedreturnDetailedmnitActionPerformed

        com.afrisoftech.reports.PatientAdminPdf_ detailedDBR = new com.afrisoftech.reports.PatientAdminPdf_();

        detailedDBR.PatientAdminPdf(connectDB, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB), com.afrisoftech.lib.ServerTime.getSQLDate(connectDB), "-");
        // TODO add your handling code here:
    }//GEN-LAST:event_dailybedreturnDetailedmnitActionPerformed

    private void postInvoicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postInvoicesmnitActionPerformed
        com.afrisoftech.accounting.InvoiceRegIntfr comp = new com.afrisoftech.accounting.InvoiceRegIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setVisible(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }       // TODO add your handling code here:
    }//GEN-LAST:event_postInvoicesmnitActionPerformed

    private void mergeLPOmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeLPOmnitActionPerformed
        com.afrisoftech.accounting.MergingElectronicAndManualOrdersInfr comp = new com.afrisoftech.accounting.MergingElectronicAndManualOrdersInfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
            comp.setVisible(true);
            comp.setSize(saccopn.getSize());
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mergeLPOmnitActionPerformed

    private void analyseMaternityBillsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyseMaternityBillsmnitActionPerformed
        biz.systempartners.reports.MaternityCreditSalesIntfr dismth = new biz.systempartners.reports.MaternityCreditSalesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_analyseMaternityBillsmnitActionPerformed

    private void dispatchschmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchschmnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dispatchschmnActionPerformed

    private void departmentalreportMenuItemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentalreportMenuItemnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentalreportMenuItemnitActionPerformed

    private void postNatalCaremnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postNatalCaremnitActionPerformed
        com.afrisoftech.records.FPMCHPostNatalIntfr dismth = new com.afrisoftech.records.FPMCHPostNatalIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // TODO add your handling code here:
    }//GEN-LAST:event_postNatalCaremnitActionPerformed

    private void immunisationProceduresmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_immunisationProceduresmnitActionPerformed
        com.afrisoftech.records.ImmunisationProceduresIntfr dismth = new com.afrisoftech.records.ImmunisationProceduresIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_immunisationProceduresmnitActionPerformed

    private void immunisationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_immunisationmnitActionPerformed
        com.afrisoftech.records.ImmunisationRecordsIntfr dismth = new com.afrisoftech.records.ImmunisationRecordsIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }       // TODO add your handling code here:
    }//GEN-LAST:event_immunisationmnitActionPerformed

    private void emrmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emrmnActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_emrmnActionPerformed

    private void cwcRegistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cwcRegistermnitActionPerformed
        com.afrisoftech.records.ChildFollowUPRecordsIntfr dismth = new com.afrisoftech.records.ChildFollowUPRecordsIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }        // TODO add your handling code here:
    }//GEN-LAST:event_cwcRegistermnitActionPerformed

    private void cwcIndicatormnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cwcIndicatormnitActionPerformed
        com.afrisoftech.records.ChildHealthIndicatorsIntfr dismth = new com.afrisoftech.records.ChildHealthIndicatorsIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }         // TODO add your handling code here:
    }//GEN-LAST:event_cwcIndicatormnitActionPerformed

    private void fpRHServicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpRHServicesmnitActionPerformed
        com.afrisoftech.records.MCHFamilyPlanningIntfr dismth = new com.afrisoftech.records.MCHFamilyPlanningIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }        // TODO add your handling code here:
    }//GEN-LAST:event_fpRHServicesmnitActionPerformed

    private void fpIndicatorsSetupmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpIndicatorsSetupmnitActionPerformed
        com.afrisoftech.records.FPProceduresIntfr dismth = new com.afrisoftech.records.FPProceduresIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }        // TODO add your handling code here:
    }//GEN-LAST:event_fpIndicatorsSetupmnitActionPerformed

    private void communityHealthRegistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communityHealthRegistermnitActionPerformed
        com.afrisoftech.records.CommunityHealthIndicatorsIntfr dismth = new com.afrisoftech.records.CommunityHealthIndicatorsIntfr(connectDB, pConnDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }    // TODO add your handling code here:
    }//GEN-LAST:event_communityHealthRegistermnitActionPerformed

    private void houseHoldRegistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseHoldRegistermnitActionPerformed
        com.afrisoftech.records.CHWHouseHoldRegisterIntfr dismth = new com.afrisoftech.records.CHWHouseHoldRegisterIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }       // TODO add your handling code here:
    }//GEN-LAST:event_houseHoldRegistermnitActionPerformed

    private void gisReportermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gisReportermnitActionPerformed
        com.afrisoftech.reports.emr.GISReporter dismth = new com.afrisoftech.reports.emr.GISReporter(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }       // TODO add your handling code here:
    }//GEN-LAST:event_gisReportermnitActionPerformed

    private void rehabilitationServicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rehabilitationServicesmnitActionPerformed
        com.afrisoftech.records.RehabilitationServicesIntfr dismth = new com.afrisoftech.records.RehabilitationServicesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_rehabilitationServicesmnitActionPerformed

    private void socialWorkServicesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socialWorkServicesmnitActionPerformed
        com.afrisoftech.records.SocialWorkServicesIntfr dismth = new com.afrisoftech.records.SocialWorkServicesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_socialWorkServicesmnitActionPerformed

    private void billingAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingAuditmnitActionPerformed
        com.afrisoftech.reports.BillAndCashCollectionRegistersIntfr comp = new com.afrisoftech.reports.BillAndCashCollectionRegistersIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_billingAuditmnitActionPerformed

    private void receivablesAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivablesAuditmnitActionPerformed
        com.afrisoftech.accounting.ReceivablesDashBoardIntfr comp = new com.afrisoftech.accounting.ReceivablesDashBoardIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSize(saccopn.getSize());
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_receivablesAuditmnitActionPerformed

    private void inventoryAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryAuditmnitActionPerformed
        javax.swing.JInternalFrame dismth = new com.afrisoftech.hospinventory.StoresLedgerReportsIntfr(connectDB);
        medicdspane.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
            dismth.setSize(medicdspane.getSize());
            dismth.setVisible(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryAuditmnitActionPerformed

    private void invoicingAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicingAuditmnitActionPerformed
        com.afrisoftech.audit.InvoicesAuditIntfr comp = new com.afrisoftech.audit.InvoicesAuditIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_invoicingAuditmnitActionPerformed

    private void userAccessAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userAccessAuditmnitActionPerformed

        biz.systempartners.reports.UserActivitesIntfr dismth = new biz.systempartners.reports.UserActivitesIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            dismth.setSelected(true);
        } catch (Exception pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_userAccessAuditmnitActionPerformed

    private void sysAdminAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sysAdminAuditmnitActionPerformed
        com.afrisoftech.audit.SystemAdminAuditTrailIntfr comp = new com.afrisoftech.audit.SystemAdminAuditTrailIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_sysAdminAuditmnitActionPerformed

    private void auditTrailmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditTrailmnitActionPerformed
        com.afrisoftech.audit.AccountsAuditTrailIntfr comp = new com.afrisoftech.audit.AccountsAuditTrailIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_auditTrailmnitActionPerformed

    private void payablesAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payablesAuditmnitActionPerformed
        com.afrisoftech.audit.PayablesAuditIntfr comp = new com.afrisoftech.audit.PayablesAuditIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_payablesAuditmnitActionPerformed

    private void patientRegistrationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientRegistrationmnitActionPerformed
        com.afrisoftech.audit.PatientAttendanceTrailIntfr comp = new com.afrisoftech.audit.PatientAttendanceTrailIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_patientRegistrationmnitActionPerformed

    private void cashBookAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashBookAuditmnitActionPerformed
        com.afrisoftech.reports.CashBookReportsIntfr comp = new com.afrisoftech.reports.CashBookReportsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_cashBookAuditmnitActionPerformed

    private void imprestAuditmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprestAuditmnitActionPerformed
        com.afrisoftech.audit.ImprestAuditIntfr comp = new com.afrisoftech.audit.ImprestAuditIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }         // TODO add your handling code here:
    }//GEN-LAST:event_imprestAuditmnitActionPerformed

    private void interimInvoicePlainmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interimInvoicePlainmnitActionPerformed
        com.afrisoftech.lib.HosInPatientDatePanel dates = new com.afrisoftech.lib.HosInPatientDatePanel(this, pConnDB, true, this.PatientBill, connectDB);

        dates.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_interimInvoicePlainmnitActionPerformed

    private void finalInPatientInvmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalInPatientInvmnitActionPerformed
        com.afrisoftech.lib.HosInPatInvPanel dates = new com.afrisoftech.lib.HosInPatInvPanel(this, true, this.FinalInPatInv, connectDB);

        dates.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_finalInPatientInvmnitActionPerformed

    private void patientRegistrationPointsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientRegistrationPointsmnitActionPerformed
        com.afrisoftech.hospital.RegistrationPointsIntfr comp = new com.afrisoftech.hospital.RegistrationPointsIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_patientRegistrationPointsmnitActionPerformed

    private void xrayFilmTypesmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xrayFilmTypesmnitActionPerformed
        com.afrisoftech.hospital.XrayFilmTypesIntfr comp = new com.afrisoftech.hospital.XrayFilmTypesIntfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // TODO add your handling code here:
    }//GEN-LAST:event_xrayFilmTypesmnitActionPerformed

    private void labSpecimenSourcemnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labSpecimenSourcemnitActionPerformed
        javax.swing.JInternalFrame prod = new com.afrisoftech.laboratory.SpecimenSourcesIntfr(connectDB, pConnDB);
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_labSpecimenSourcemnitActionPerformed

    private void eyeUnitmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eyeUnitmnitActionPerformed
        javax.swing.JInternalFrame prod = new com.afrisoftech.laboratory.EyeConsultationIntfr(connectDB, pConnDB, getMainClass());
        saccopn.add(prod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            prod.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_eyeUnitmnitActionPerformed

    private void eyeClinicRegistermnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eyeClinicRegistermnitActionPerformed
        biz.systempartners.reports.EyeUnitRegisterReportIntfr dismth = new biz.systempartners.reports.EyeUnitRegisterReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_eyeClinicRegistermnitActionPerformed

    private void eyeUnitDetailedReportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eyeUnitDetailedReportmnitActionPerformed
        biz.systempartners.reports.EyeUnitDetailedReportIntfr dismth = new biz.systempartners.reports.EyeUnitDetailedReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_eyeUnitDetailedReportmnitActionPerformed

    private void eyeServicesSummarymnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eyeServicesSummarymnitActionPerformed

        com.afrisoftech.lib.HosDatePanel dates = new com.afrisoftech.lib.HosDatePanel(this, true, this.eyeOptSumm, connectDB);

        dates.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_eyeServicesSummarymnitActionPerformed

    private void creditSalesDepartmentReportsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditSalesDepartmentReportsmnitActionPerformed
        biz.systempartners.reports.CreditSalesDepartmentalReportIntfr dismth = new biz.systempartners.reports.CreditSalesDepartmentalReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_creditSalesDepartmentReportsmnitActionPerformed

    private void creditSalesDepartmentDetailedReportsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditSalesDepartmentDetailedReportsmnitActionPerformed
        biz.systempartners.reports.CreditSalesDepartmentalDetailsReportIntfr dismth = new biz.systempartners.reports.CreditSalesDepartmentalDetailsReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_creditSalesDepartmentDetailedReportsmnitActionPerformed

    private void exmptionsWaiversRefundsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exmptionsWaiversRefundsmnitActionPerformed
        biz.systempartners.reports.WaiversExemptionsRefundssReportIntfr dismth = new biz.systempartners.reports.WaiversExemptionsRefundssReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }       // TODO add your handling code here:
    }//GEN-LAST:event_exmptionsWaiversRefundsmnitActionPerformed

    private void universalHealthcareSalesAnalysismnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_universalHealthcareSalesAnalysismnitActionPerformed
        com.afrisoftech.lib.UniversalHealthcareDatePanel dates = new com.afrisoftech.lib.UniversalHealthcareDatePanel(this, true, this.MohCashUniversal, connectDB);

        dates.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_universalHealthcareSalesAnalysismnitActionPerformed

    private void tbScreeningReportmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbScreeningReportmnitActionPerformed
        biz.systempartners.reports.TBScreeningRegisterReportIntfr dismth = new biz.systempartners.reports.TBScreeningRegisterReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tbScreeningReportmnitActionPerformed

    private void tbScreeningProceduresmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbScreeningProceduresmnitActionPerformed
        biz.systempartners.reports.TBScreeningProceduresReportIntfr dismth = new biz.systempartners.reports.TBScreeningProceduresReportIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbScreeningProceduresmnitActionPerformed

    private void labResultsListingmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labResultsListingmnitActionPerformed
        com.afrisoftech.laboratory.LaboratoryResultsListingIntfr dismth = new com.afrisoftech.laboratory.LaboratoryResultsListingIntfr(connectDB);
        saccopn.add(dismth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dismth.setSize(saccopn.getSize());
        try {
            dismth.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_labResultsListingmnitActionPerformed

    private void paybillPaymentsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paybillPaymentsmnitActionPerformed
        //   TODO add your handling code here:
        com.afrisoftech.reports.PaybillPaymentsReportsIntfr comp = new com.afrisoftech.reports.PaybillPaymentsReportsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_paybillPaymentsmnitActionPerformed

    private void dailyWorkloadsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyWorkloadsmnitActionPerformed
        //   TODO add your handling code here:
        com.afrisoftech.reports.emr.DailyDepartmentalWorkloadsIntfr comp = new com.afrisoftech.reports.emr.DailyDepartmentalWorkloadsIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }    // TODO add your handling code here:
    }//GEN-LAST:event_dailyWorkloadsmnitActionPerformed

    private void mobileTxReportsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileTxReportsmnitActionPerformed
        com.afrisoftech.accounting.MpesaDetailsintfr comp = new com.afrisoftech.accounting.MpesaDetailsintfr(connectDB, pConnDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileTxReportsmnitActionPerformed

    private void urlRegistrationmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlRegistrationmnitActionPerformed
        com.afrisoftech.hospital.CallBackURSIntfr comp = new com.afrisoftech.hospital.CallBackURSIntfr(connectDB);
        saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        comp.setSize(saccopn.getSize());
        try {
            comp.setSelected(true);
        } catch (java.beans.PropertyVetoException pvt) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_urlRegistrationmnitActionPerformed

    private void unhNHIFClaimmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unhNHIFClaimmnitActionPerformed
        com.afrisoftech.lib.HosOUTPatientDatePanel dates = new com.afrisoftech.lib.HosOUTPatientDatePanel(this, pConnDB, true, 20012, connectDB);
        dates.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_unhNHIFClaimmnitActionPerformed

    /**
     * Exit the Application
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //      HospitalMain stockInstance = new HospitalMain(connect2DB(), getPooledConnectionSource(), getPath2Acrobat(), psWord, null, null, null);
        //      stockInstance.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        //      stockInstance.setVisible(true);
        //      java.util.Properties sysProp = System.getProperties();
    }

    /**
     *
     * @return
     */
    public static java.sql.Connection connect2DB() {

        java.sql.Connection connDBStock = null;

        try {

            java.lang.Class.forName("org.postgresql.Driver");

        } catch (java.lang.ClassNotFoundException cnf) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());

        }

        try {

            connDBStock = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/medic", "postgres", "pilsiner");
            // connDBStock = java.sql.DriverManager.

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), sqlExec.getMessage());

        }

        return connDBStock;

    }

    /**
     *
     * @param menuList2Disable
     */
    public void menuItemsDisabler(java.lang.Object[] menuList2Disable) {

        java.lang.reflect.Field[] fieldsArray = null;

        javax.swing.JMenuItem disMenuItems = null;

        try {
            java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hospital.HospitalMain");

            try {

                fieldsArray = classMain.getDeclaredFields();

                for (int n = 0; n < fieldsArray.length; n++) {

                    if (fieldsArray[n].getName().endsWith("mnit")) {

                        disMenuItems = (javax.swing.JMenuItem) fieldsArray[n].get(this);

                        ////    System.out.println(fieldsArray[n].getName()+"\t"+"\t"+"\t"+disMenuItems.getText());
                        // disMenuItems.setEnabled(false);
                        disMenuItems.setVisible(false);

                        for (int m = 0; m < menuList2Disable.length; m++) {

                            if (fieldsArray[n].getName().equals(menuList2Disable[m])) {

                                java.lang.Object obj = (java.lang.Object) fieldsArray[n];

                                try {

                                    javax.swing.JMenuItem men2dis = (javax.swing.JMenuItem) fieldsArray[n].get(this);

                                    men2dis.setVisible(true);

                                } catch (java.lang.IllegalAccessException illAcc) {

                                    System.out.println(illAcc.getMessage());

                                }

                            }

                        }

                    }

                }

            } catch (java.lang.IllegalAccessException illAcc) {

                System.out.println(illAcc.getMessage());

            }

        } catch (java.lang.ClassNotFoundException clsNotFnd) {

            javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");

        }

    }

    /**
     *
     */
    public void updateActivityDomains() {

        if (domainsReset) {

            try {

                java.sql.PreparedStatement pstmt_del = this.connectDB.prepareStatement("DELETE FROM menu_item_list where app_name = 'hospital_main'");

                pstmt_del.execute();

            } catch (java.sql.SQLException sqlExec) {

                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

            }

            try {

                java.lang.Class classMain = java.lang.Class.forName("com.afrisoftech.hospital.HospitalMain");

                java.lang.reflect.Field[] fieldsArray = classMain.getDeclaredFields();

                for (int n = 0; n < fieldsArray.length; n++) {

                    if (fieldsArray[n].getName().endsWith("mnit")) {

                        try {

                            javax.swing.JMenuItem disMenuItems = (javax.swing.JMenuItem) fieldsArray[n].get(this);

                            try {

                                Class.forName("org.postgresql.Driver");

                            } catch (java.lang.ClassNotFoundException cnfExec) {

                                System.out.println("Can't locate PostgreSQL driver");

                            }

                            try {

                                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into menu_item_list values(?, ?, ?)");

                                System.out.println("Inserting Menu Item>>" + fieldsArray[n].getName());

                                pstmt.setString(1, fieldsArray[n].getName());

                                pstmt.setString(2, disMenuItems.getText());

                                pstmt.setString(3, "hospital_main");

                                pstmt.executeUpdate();

                            } catch (java.sql.SQLException sq) {

                                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                                System.out.println(sq.getMessage());

                            }

                        } catch (java.lang.IllegalAccessException illAcc) {

                            System.out.println(illAcc.getMessage());

                        }
                    }

                }

            } catch (java.lang.ClassNotFoundException clsNotFnd) {

                javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");

            }
        }

    }

    /**
     *
     * @param lnf
     * @param themepack
     */
    public void changeThemeByUrl(java.lang.String lnf, java.net.URL themepack) {

        java.lang.String themepackPath = null;

        com.l2fprod.gui.plaf.skin.Skin skin = null;

        try {

            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);

        } catch (java.lang.Exception exec) {
        }

        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);

        java.awt.Component[] component_array = null;

        component_array = this.getComponents();

        try {

            try {

                try {

                    try {

                        javax.swing.UIManager.setLookAndFeel(lnf);

                        // jToolBar1.updateUI();
                        //   this.jPopupMenu1.updateUI();
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);

                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());

                        updateNewComponentsUI();

                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        // this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Hospital System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                    } catch (java.lang.ClassNotFoundException cnfExec) {

                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

                    }

                } catch (java.lang.InstantiationException instExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());

                }

            } catch (java.lang.IllegalAccessException illegExec) {

                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());

            }

        } catch (javax.swing.UnsupportedLookAndFeelException unsuppExec) {

            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());

        }

    }

    /**
     *
     * @param lnf
     * @param themepack
     */
    public void changeTheme(java.lang.String lnf, java.lang.String themepack) {

        java.lang.String themepackPath = null;

        com.l2fprod.gui.plaf.skin.Skin skin = null;

        try {

            skin = com.l2fprod.gui.plaf.skin.SkinLookAndFeel.loadThemePack(themepack);

        } catch (java.lang.Exception exec) {
        }

        com.l2fprod.gui.plaf.skin.SkinLookAndFeel.setSkin(skin);

        java.awt.Component[] component_array = null;

        component_array = this.getComponents();

        try {

            try {

                try {

                    try {

                        javax.swing.UIManager.setLookAndFeel(lnf);

                        //jToolBar1.updateUI();
                        //   this.jPopupMenu1.updateUI();
                        javax.swing.SwingUtilities.updateComponentTreeUI(this);

                        updateNewComponentsUI();

                        javax.swing.SwingUtilities.updateComponentTreeUI(this.getRootPane());

                        //    javax.swing.SwingUtilities.updateComponentTreeUI(this.jPopupMenu1);
                        // this.jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Hospital System Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 8), new java.awt.Color(0, 0, 153)));
                    } catch (java.lang.ClassNotFoundException cnfExec) {

                        javax.swing.JOptionPane.showMessageDialog(this, cnfExec.getMessage());

                    }

                } catch (java.lang.InstantiationException instExec) {

                    javax.swing.JOptionPane.showMessageDialog(this, instExec.getMessage());

                }

            } catch (java.lang.IllegalAccessException illegExec) {

                javax.swing.JOptionPane.showMessageDialog(this, illegExec.getMessage());

            }

        } catch (javax.swing.UnsupportedLookAndFeelException unsuppExec) {

            javax.swing.JOptionPane.showMessageDialog(this, unsuppExec.getMessage());

        }

    }

    /**
     *
     * @return
     */
    public static java.lang.String getCompanyName() {

        java.lang.String title = null;

        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rs1 = stmt1.executeQuery("select hospital_name from pb_hospitalprofile");

            while (rs1.next()) {

                //   title = "FUNSOFT Integrated Hospital Management Information System (FUNSOFT I-HMIS Ver 7.0 R 3.2) :: " + (rs1.getString(1)); //- ["+jTabbedPane1.getSelectedComponent().getName()+"]";
                title = "FUNSOFT Integrated Universal Healthcare Management Information System (FUNSOFT I-HMIS/UHC MIS Ver " + com.afrisoftech.sys.Login2Hospital.version + ") :: " + (rs1.getString(1)); //- ["+jTabbedPane1.getSelectedComponent().getName()+"]";

            }

//            netscape.javascript.JSObject global = netscape.javascript.JSObject.getWindow(new java.applet.Applet());
//            global.eval("document.title = '" + title + "'");
        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqlEx.getMessage());
        }
        return title;
    }

    public static java.lang.String getAbsoluteCompanyName() {

        java.lang.String title = null;

        try {

            java.sql.Statement stmt1 = connectDB.createStatement();

            java.sql.ResultSet rs1 = stmt1.executeQuery("select hospital_name from pb_hospitalprofile");

            while (rs1.next()) {

                title = rs1.getString(1).toUpperCase();

            }

//            netscape.javascript.JSObject global = netscape.javascript.JSObject.getWindow(new java.applet.Applet());
//            global.eval("document.title = '" + title + "'");
        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqlEx.getMessage());
        }
        return title;
    }

    /**
     *
     * @return
     */
    public java.lang.String getDateLable() {

        java.lang.String date_label = null;

        java.lang.String month_now_strs = null;

        java.lang.String date_now_strs = null;

        java.lang.String year_now_strs = null;

        java.lang.String minute_now_strs = null;

        java.lang.String hour_now_strs = null;

        java.lang.Runtime rt = java.lang.Runtime.getRuntime();

        java.util.Calendar calinst = java.util.Calendar.getInstance();

        java.util.Date date_now = calinst.getTime();

        int date_now_str = date_now.getDate();

        int month_now_str = date_now.getMonth();

        int year_now_str = date_now.getYear();

        int hour_now_str = date_now.getHours();

        int minute_now_str = date_now.getMinutes();

        int year_now_abs = year_now_str - 100;

        if (year_now_abs < 10) {

            year_now_strs = "200" + year_now_abs;

        } else {

            year_now_strs = "20" + year_now_abs;

        }

        switch (month_now_str) {

            case 0:
                month_now_strs = "JAN";

                break;

            case 1:
                month_now_strs = "FEB";

                break;

            case 2:
                month_now_strs = "MAR";

                break;

            case 3:
                month_now_strs = "APR";

                break;

            case 4:
                month_now_strs = "MAY";

                break;

            case 5:
                month_now_strs = "JUN";

                break;

            case 6:
                month_now_strs = "JUL";

                break;

            case 7:
                month_now_strs = "AUG";

                break;

            case 8:
                month_now_strs = "SEP";

                break;

            case 9:
                month_now_strs = "OCT";

                break;

            case 10:
                month_now_strs = "NOV";

                break;

            case 11:
                month_now_strs = "DEC";

                break;

            default:
                if (month_now_str < 10) {

                    month_now_strs = "0" + month_now_str;

                } else {

                    month_now_strs = "" + month_now_str;

                }

        }

        if (date_now_str < 10) {

            date_now_strs = "0" + date_now_str;

        } else {

            date_now_strs = "" + date_now_str;

        }

        if (minute_now_str < 10) {

            minute_now_strs = "0" + minute_now_str;

        } else {

            minute_now_strs = "" + minute_now_str;

        }

        if (hour_now_str < 10) {

            hour_now_strs = "0" + hour_now_str;

        } else {

            hour_now_strs = "" + hour_now_str;

        }

        date_label = date_now_strs + month_now_strs + year_now_strs + "@" + hour_now_strs + minute_now_strs;

        return date_label;

    }

    /**
     *
     */
    public void backupImmediate() {

        java.lang.Runtime rt_backup = java.lang.Runtime.getRuntime();

        java.lang.String backup_date_stamp = this.getDateLable();

        try {

            java.lang.Process backup_proc;

            backup_proc = rt_backup.exec("pg_dump medic -f MEDIC_" + backup_date_stamp + ".sql");

            try {

                backup_proc.waitFor();

            } catch (java.lang.InterruptedException IntruptExec) {

                javax.swing.JOptionPane.showMessageDialog(this, IntruptExec.getLocalizedMessage());

            }

            int backup_proc_return = backup_proc.exitValue();

            if (backup_proc_return == 0) {

                javax.swing.JOptionPane.showMessageDialog(this, "Backup of the Medic database successfully completed on " + backup_date_stamp);

            } else {

                javax.swing.JOptionPane.showMessageDialog(this, "Backup of the Medic database failed at " + backup_date_stamp);

            }

        } catch (IOException IOExec) {

            JOptionPane.showMessageDialog(this, "Sorry, can't get path to Help utility", "Error Message", JOptionPane.ERROR_MESSAGE);

        }

    }

    /**
     *
     */
    public void stop() {

        Thread.currentThread().stop();

    }

    /*
     * public void run() { // this.setCursor(javax.swing.JFrame.WAIT_CURSOR);
     * System.out.println("Thread is
     * "+java.lang.Thread.currentThread().getName());
     *
     * if (java.lang.Thread.currentThread().getName().matches("Cash")) {
     *
     * loadingMode = true;
     *
     * //progressBarPopup.setVisible(true);
     *
     * aliveStatus = true;
     *
     * startRunning(); // System.out.println("Thread Patient starting...");
     * while (cashRunning) {
     *
     * com.afrisoftech.accounting.BillPaymentsIntfr comp = new
     * com.afrisoftech.accounting.BillPaymentsIntfr(connectDB,pConnDB);
     *
     * saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
     *
     * loadingMode = false;
     *
     * // progressBarPopup.hide();
     *
     * try { comp.setSelected(true);
     *
     * } catch(java.beans.PropertyVetoException pvt){} try {
     * Thread.currentThread().sleep(100);
     *
     * } catch(java.lang.InterruptedException IntExec){
     * System.out.println(IntExec.getMessage());}
     *
     *
     * stopRunning();
     *
     *
     * cashRunning = false; }
     *
     * // while(isRunning) {
     *
     * // int comp_dlg = javax.swing.JOptionPane.showConfirmDialog(this, "About
     * to open Company profile", "Company profile dialogue",
     * javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
     *
     * // if (comp_dlg == javax.swing.JOptionPane.YES_OPTION){
     *
     * // this.backupImmediate();
     *
     * // isRunning = false;
     *
     *
     * // javax.swing.JInternalFrame comp = new CompanyPrfintfr(connectDB,
     * pConnDB);
     *
     *
     *
     *
     * // saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
     *
     *
     *
     *
     * // patientRunning = false;
     *
     * cashierRunning = false;
     *
     * /* try { comp.setSelected(true);
     *
     * this.setCursor(javax.swing.JFrame.DEFAULT_CURSOR);
     *
     * } catch(java.beans.PropertyVetoException pvt){}
     */
    // }
    //}
    // if (!cashRunning) {
    //   stop();
    //   Thread.currentThread().destroy();
    // }
    // }
/*
     * else if (java.lang.Thread.currentThread().getName().matches("Sales
     * Open")){
     *
     *
     * System.out.println("Thread is
     * "+java.lang.Thread.currentThread().getName());
     *
     * while (threadSales == true) {
     *
     * if (getShiftStatus()) {
     *
     * loadingMode = true;
     *
     * // progressBarPopup.setVisible(true);
     *
     * aliveStatus = true;
     *
     * startRunning();
     *
     * // System.out.println(statusShift);
     *
     * com.afrisoftech.accounting.BillPaymentsIntfr comp = new
     * com.afrisoftech.accounting.BillPaymentsIntfr(connectDB,pConnDB);
     *
     * if (!(System.getProperty("billpmnt").equalsIgnoreCase("showing"))) {
     * saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER); try {
     *
     * comp.setSelected(true);
     *
     * this.billPaymentIntfr_isShowing = true;
     *
     * try {
     *
     * java.sql.PreparedStatement pstmt = connectDB.prepareStatement("UPDATE
     * ac_shifts SET status = 'Running' WHERE cash_point =
     * '"+System.getProperty("cashpoint")+"' AND user_name =
     * '"+System.getProperty("currentuser")+"' AND status = 'Suspended'");
     *
     * pstmt.executeUpdate();
     *
     * } catch(java.sql.SQLException sqlExec) {
     *
     *
     * javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
     *
     * }
     *
     * System.setProperty("billpmnt", "showing");
     *
     * System.out.println(System.getProperty("billpmnt"));
     *
     * try {
     *
     * Thread.currentThread().sleep(100);
     *
     * } catch(java.lang.InterruptedException IntExec){
     * System.out.println(IntExec.getMessage());}
     *
     * } catch(java.beans.PropertyVetoException pvt){} }
     *
     * } else {
     *
     * javax.swing.JOptionPane.showMessageDialog(this, "Can't proceed without a
     * valid shift instance", "Error Message",
     * javax.swing.JOptionPane.WARNING_MESSAGE);
     *
     * }
     *
     * loadingMode = false;
     *
     * stopRunning();
     *
     // progressBarPopup.hide();
     *
     * threadSales = false; }
     *
     * }
     */
    // if (!threadSales) {
    //   stop();
    //  Thread.currentThread().destroy();
    //}
    // }
    public void run() {
        //   this.setCursor(javax.swing.JFrame.WAIT_CURSOR);
        System.out.println("Thread is " + java.lang.Thread.currentThread().getName());

        if (java.lang.Thread.currentThread().getName().matches("Patient")) {

            loadingMode = true;

            //progressBarPopup.setVisible(true);
            aliveStatus = true;

            startRunning();
            //            System.out.println("Thread Patient starting...");
            while (patientRunning) {

                com.afrisoftech.hospital.PatientRegisterIntfr comp = new com.afrisoftech.hospital.PatientRegisterIntfr(connectDB, pConnDB);

                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                loadingMode = false;

                // progressBarPopup.hide();
                try {
                    comp.setSelected(true);

                } catch (java.beans.PropertyVetoException pvt) {
                }
                try {
                    Thread.currentThread().sleep(100);

                } catch (java.lang.InterruptedException IntExec) {
                    System.out.println(IntExec.getMessage());
                }

                stopRunning();

                patientRunning = false;
            }

            // while(isRunning) {
            //         int comp_dlg  = javax.swing.JOptionPane.showConfirmDialog(this, "About to open Company profile", "Company profile dialogue", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
            //       if (comp_dlg == javax.swing.JOptionPane.YES_OPTION){
            //               this.backupImmediate();
            //               isRunning = false;
            //   javax.swing.JInternalFrame comp = new CompanyPrfintfr(connectDB, pConnDB);
            // saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            patientRunning = false;

            cashRunning = false;

            /*
             * try { comp.setSelected(true);
             *
             * this.setCursor(javax.swing.JFrame.DEFAULT_CURSOR);
             *
             * } catch(java.beans.PropertyVetoException pvt){}
             */
            // }
            //}
            if (!patientRunning) {

                stop();

                Thread.currentThread().destroy();
            }

        } else if (java.lang.Thread.currentThread().getName().matches("Cash")) {

            System.out.println("Thread is " + java.lang.Thread.currentThread().getName());

            while (cashRunning) {

                //  if (getShiftStatus()) {
                loadingMode = true;

                // progressBarPopup.setVisible(true);
                aliveStatus = true;

                startRunning();

                //        System.out.println(statusShift);
                com.afrisoftech.accounting.BillPaymentsIntfr comp = new com.afrisoftech.accounting.BillPaymentsIntfr(connectDB, pConnDB);

                saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);

                System.setProperty("billpmnt", "showing");

                System.out.println(System.getProperty("billpmnt"));

                try {
                    comp.setSelected(true);

                } catch (java.beans.PropertyVetoException pvt) {
                }
                try {
                    Thread.currentThread().sleep(100);

                } catch (java.lang.InterruptedException IntExec) {
                    System.out.println(IntExec.getMessage());
                }

                loadingMode = false;

                stopRunning();

                //   progressBarPopup.hide();
                cashRunning = false;

            }
            if (!cashRunning) {

                stop();

                Thread.currentThread().destroy();
            }
        }
    }

    /**
     *
     * @param instIntfrName
     * @param intfrClass
     */
    public void launchIntfr(java.lang.String instIntfrName, java.lang.String intfrClass) {
    }

    /*
     * public java.lang.Object[] getMemberNo() {
     *
     * java.util.Vector memVector = new java.util.Vector(1,1);
     *
     * java.lang.Object[] memObj = null;
     *
     *
     *
     * / try {
     *
     * // java.sql.Connection dbConn =
     * java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");
     *
     * java.sql.Statement connStmt = this.connectDB.createStatement();
     *
     * java.sql.ResultSet rSet = connStmt.executeQuery("SELECT DISTINCT
     * lpad(m_number,9,0) FROM member");
     *
     * while (rSet.next()) {
     *
     *
     * memVector.addElement(rSet.getObject(1).toString());
     *
     * }
     *
     * } catch(java.sql.SQLException sqlExec) {
     *
     * javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
     *
     * }
     *
     * memObj = memVector.toArray();
     *
     * return memObj;
     *
     * }
     *
     * public java.lang.Object[] getLoanNo() {
     *
     * java.util.Vector memVector = new java.util.Vector(1,1);
     *
     * java.lang.Object[] memObj = null;
     *
     *
     *
     *
     * try {
     *
     * // java.sql.Connection dbConn =
     * java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/sako","postgres","pilsiner");
     *
     * java.sql.Statement connStmt = connectDB.createStatement();
     *
     * java.sql.ResultSet rSet = connStmt.executeQuery("SELECT DISTINCT
     * loan_acc_no FROM approved_loans");
     *
     * while (rSet.next()) {
     *
     * memVector.addElement(rSet.getObject(1).toString());
     *
     * }
     *
     * } catch(java.sql.SQLException sqlExec) {
     *
     * javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
     *
     * }
     *
     * memObj = memVector.toArray();
     *
     *
     * return memObj;
     *
     * }
     */
    /**
     *
     * @return
     */
    public static org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {

        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();

        pooledConnectionSource1.setDatabase("jdbc:postgresql://localhost:5432/medic");

        pooledConnectionSource1.setDriver("org.postgresql.Driver");

        pooledConnectionSource1.setPassword("02ac219a6b011019ea966757de3451d2399ce04dd82596d3ba4266a8845ab7f80861", true);

        pooledConnectionSource1.setUsername("postgres");

        return pooledConnectionSource1;
    }

    /**
     *
     * @param jMenuBar
     * @return
     */
    public javax.swing.JPopupMenu createPopupMenu(javax.swing.JMenuBar jMenuBar) {

        javax.swing.JPopupMenu popMenuContext = null;

        jMenuBar1.countComponents();

        return popMenuContext;
    }

    /**
     *
     * @return
     */
    public static java.lang.String getPath2Acrobat() {
        //        java.lang.String dbServerIp = null;
        java.lang.String acroPath = null;

        java.lang.String myAppFileUrl = null;

        myAppFileUrl = System.getProperty("user.dir") + System.getProperty("file.separator") + "myapp.properties";

        try {

            java.io.FileInputStream propInFile = new java.io.FileInputStream(myAppFileUrl);

            //       java.io.FileOutputStream propOutFile = new java.io.FileOutputStream("myapp.properties");
            java.util.Properties appProp = new java.util.Properties();

            try {

                appProp.load(propInFile);

                //            dbServerIp = appProp.getProperty("dbServerIpAdd", "127.0.0.1");
                acroPath = appProp.getProperty("acrobatPath", "c:/Program Files/Adobe/Acrobat 5.0/Reader/AcroRd32.exe ");

                //            System.out.println(dbServerIp);
                System.out.println(acroPath);

                //  return dbServerIp;
            } catch (java.io.IOException ioExec) {

                System.out.println(ioExec.getMessage());

            }

            // return dbServerIp;
        } catch (java.lang.Exception exc) {

            System.out.println(exc.getMessage());

            //    javax.swing.JOptionPane.showMessageDialog(this, "Properties file not found!");
        }

        return acroPath;

    }

    private boolean getShiftStatus() {

        boolean status = false;

        java.lang.String shift_state = null;

        try {

            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select code from ac_cash_points where description = current_user");
            while (rset.next()) {
                // cashPoint = rset.getObject(1).toString();
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            System.out.println("select not successful");
        }

        try {

            java.sql.Statement stmt = connectDB.createStatement();

            // java.sql.ResultSet rSet = stmt.executeQuery("Select status from ac_shifts where cash_point = '"+System.getProperty("cashpoint")+"' AND user_name = '"+System.getProperty("currentuser")+"'");
            java.sql.ResultSet rSet = stmt.executeQuery("Select status from ac_shifts where cash_point = '" + cashPoint + "' AND user_name = '" + System.getProperty("currentuser") + "'");

            while (rSet.next()) {

                shift_state = rSet.getString(1);

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        }

        if (shift_state == null) {

            int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

            if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                java.util.Calendar calendar = java.util.Calendar.getInstance();

                long dateNow = calendar.getTimeInMillis();

                java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                System.out.println(datenowSql1.toString());

                java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                System.out.println(datenowSql.toString());

                String current_user;
                try {
                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");
                    pstmt.setString(1, System.getProperty("cashpoint"));
                    // pstmt.setString(1, cashPoint);
                    pstmt.setString(2, "Running");
                    pstmt.executeUpdate();
                } catch (java.sql.SQLException sqE) {
                    sqE.printStackTrace();
                }
                System.out.println("Opening shift");

                status = true;

            }
            //            javax.swing.JOptionPane.showMessageDialog(this, "ERROR : Contact System Administrator regarding shift status.");

        } else {

            if (!shift_state.equalsIgnoreCase("Closed")) {

                status = true;

                /*
                 * if (shiftStatus) {
                 *
                 * javax.swing.JOptionPane.showMessageDialog(this, "You have an
                 * instance of shift running");
                 *
                 * status = true;
                 */
            } else {

                int openShift = javax.swing.JOptionPane.showConfirmDialog(this, "Opening new shift", "Starting a new shift ...", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

                if (openShift == javax.swing.JOptionPane.YES_OPTION) {
                    java.util.Calendar calendar = java.util.Calendar.getInstance();

                    long dateNow = calendar.getTimeInMillis();

                    java.sql.Date datenowSql1 = new java.sql.Date(dateNow);

                    System.out.println(datenowSql1.toString());

                    java.sql.Timestamp datenowSql = new java.sql.Timestamp(dateNow);

                    System.out.println(datenowSql.toString());

                    String current_user;
                    try {
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("INSERT INTO ac_shifts values(?,?)");

                        pstmt.setString(1, System.getProperty("cashpoint"));
                        // pstmt.setString(1, cashPoint);

                        //  pstmt.setString(3,null);
                        pstmt.setString(2, "Running");
                        // pstmt.setTimestamp(5,datenow);
                        //   pstmt.setTimestamp(6,null);
                        pstmt.executeUpdate();
                    } catch (java.sql.SQLException sqE) {
                        sqE.printStackTrace();
                    }
                    System.out.println("Opening shift");

                    status = true;

                } else {

                    System.out.println("Cancelled opening shift");

                    status = false;
                }

            }
        }

        return (status);

    }

    /**
     *
     */
    public static void storePreferences() {

        //        appProp.setProperty("defaultsplitpane", jTabbedPane1.getSelectedComponent().getName());
        myAppOutFileUrl = null;

        myAppOutFileUrl = System.getProperty("user.dir") + System.getProperty("file.separator") + "hosprop.properties";

        System.out.println("Properties file : " + myAppOutFileUrl);

        try {

            try {

                java.io.File outFile = new java.io.File(myAppOutFileUrl);

                java.io.BufferedOutputStream outFileIOStream = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outFile));

                appProp.store(outFileIOStream, "Funsoft properties/configuration file");

                outFileIOStream.close();

                int numberOfProperties = appProp.size();
                java.lang.Object[] keySetArray = appProp.keySet().toArray();
                try {
                    if (!connectDB.isClosed()) {
                        for (int i = 0; i < numberOfProperties; i++) {
                            System.out.println("Funsoft properties pairs [" + i + "] has key [" + keySetArray[i] + "] and value [" + appProp.getProperty(keySetArray[i].toString()) + "]");
                            try {

                                java.sql.PreparedStatement pstmtProperties = connectDB.prepareStatement("SELECT count(property_key)"
                                        + " FROM funsoft_properties WHERE property_key = ? AND user_name = current_user");
                                pstmtProperties.setObject(1, keySetArray[i]);
                                if (!pstmtProperties.isClosed()) {
                                    java.sql.ResultSet rsetProperties = pstmtProperties.executeQuery();
                                    while (rsetProperties.next()) {
                                        if (rsetProperties.getInt(1) > 0) {
                                            java.sql.PreparedStatement pstmtUpdateProperty = connectDB.prepareStatement("UPDATE "
                                                    + "funsoft_properties"
                                                    + " SET property_value = ? "
                                                    + " WHERE property_key = ? and user_name = current_user");
                                            pstmtUpdateProperty.setObject(1, appProp.getProperty(keySetArray[i].toString()));//.replace("'", " "));
                                            pstmtUpdateProperty.setObject(2, keySetArray[i].toString());
                                            pstmtUpdateProperty.executeUpdate();
                                        } else {
                                            java.sql.PreparedStatement pstmtUpdateProperty = connectDB.prepareStatement("INSERT INTO "
                                                    + "funsoft_properties("
                                                    + " property_key, property_value)"
                                                    + " VALUES (?, ?)");
                                            pstmtUpdateProperty.setObject(1, keySetArray[i]);
                                            pstmtUpdateProperty.setObject(2, appProp.getProperty(keySetArray[i].toString()));
                                            pstmtUpdateProperty.execute();
                                        }
                                    }

                                }

                            } catch (SQLException ex) {
                                // ex.printStackTrace();
                                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), ex.getMessage());
                                ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                                connectDB.close();
                                System.exit(1);
                            }
                        }

                    }

                } catch (SQLException ex) {
                    javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), ex.getMessage());
                    ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                    try {
                        connectDB.close();
                    } catch (SQLException ex1) {
                        ex1.printStackTrace();
                    }
                    System.exit(1);
                }

            } catch (java.io.FileNotFoundException fnfExec) {

                fnfExec.printStackTrace();

                javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), fnfExec.getMessage());

            }

        } catch (java.io.IOException IOExec) {

            IOExec.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), IOExec.getMessage());

        }

    }

    class ProgressThread extends java.lang.Thread {

        boolean stopStatus = false;
        int min = 0;
        int max = 50;

        public ProgressThread(java.awt.Component parent) {

            progressMonitor = new javax.swing.ProgressMonitor(parent, "Please wait while form initializes...", "About to start...", min, max);

            System.out.println("Progress Monitor object : " + progressMonitor.toString());

            progressMonitor.setMillisToDecideToPopup(1);
        }

        public void setStop(boolean value) {

            stopStatus = value;

            progressMonitor.close();

        }

        public void run() {

            System.out.println("Progress Monitor object 1 : " + progressMonitor.toString());

            progressMonitor.setNote("Loading. Please wait...");

            while (loadingMode) {

                min = 0;

                max = 100000;

                for (int i = min; i <= max; i++) {

                    if (stopStatus) {

                        break;

                    } else {

                        progressMonitor.setProgress(i);

                        //  progressBar.setValue(i);
                        progressMonitor.setNote("" + (i * 2) + "%");

                        System.out.println("This process starting [" + i + "]");

                        try {

                            java.lang.Thread.sleep(500);

                        } catch (java.lang.InterruptedException intExec) {

                            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "Interruption Exception!");
                        }

                        // }
                    }

                }
                aliveStatus = false;

            }

        }
    }

    private void startRunning() {

        System.out.println("Starting to run Progress Thread");

        if (progressThread == null || !progressThread.isAlive()) {

            progressThread = new ProgressThread(this);

            progressThread.start();

            System.out.println("Progress Thread started");

        }

    }

    private void stopRunning() {

        System.out.println("Stopping run Progress Thread");

        progressThread.setStop(true);

    }

    /**
     *
     * @return
     */
    public java.lang.Object[] getOrderNo() {

        java.util.Vector memVector = new java.util.Vector(1, 1);

        java.lang.Object[] orderObj = null;

        try {

            java.sql.Statement connStmt = connectDB.createStatement();

            java.sql.ResultSet rSet = connStmt.executeQuery("SELECT DISTINCT order_no FROM st_orders");

            while (rSet.next()) {

                memVector.addElement(rSet.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        orderObj = memVector.toArray();

        return orderObj;

    }

    /**
     *
     * @return
     */
    public java.lang.Object[] getSuppName() {

        java.util.Vector memVector = new java.util.Vector(1, 1);

        java.lang.Object[] suppObj = null;

        try {

            java.sql.Statement connStmt = connectDB.createStatement();

            java.sql.ResultSet rSet = connStmt.executeQuery("SELECT DISTINCT supplier FROM st_product_list");

            while (rSet.next()) {

                memVector.addElement(rSet.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

        }

        suppObj = memVector.toArray();

        return suppObj;

    }

    private void optimizeDB() {

        SampleDbOptim smpthr_dboptim = new SampleDbOptim();

        int dboptim_int = javax.swing.JOptionPane.showOptionDialog(this, "Are you sure to start the DB Optimizer?", "System DB Optimizer dialog", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, new java.lang.String[]{"Optimize DB  Immediately", "Schedule DB Optimizer", "Cancel Optimizer process"}, "Schedule DB Optimizer");

        switch (dboptim_int) {

            case javax.swing.JOptionPane.YES_OPTION:

                smpthr_dboptim.SampleDbOptim();

                break;

            case javax.swing.JOptionPane.NO_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "Not implemented yet!");

                break;

            case javax.swing.JOptionPane.CANCEL_OPTION:

                javax.swing.JOptionPane.showMessageDialog(this, "You have cancelled the DB Optimizer operation");

                break;

            default:
                ;
                ;

        }

        smpthr_dboptim.stop();

    }

    /*
     * public void setURL(java.net.URL newURL) {
     *
     * try {
     *
     * // helpDocEditorPane.setPage(newURL);
     *
     * } catch(java.io.IOException exec) {
     *
     * exec.printStackTrace();
     *
     * javax.swing.JOptionPane.showMessageDialog(this, exec.getMessage());
     *
     * }
     *
     * }
     *
     * public void setURLSet(java.lang.String stringUrl) {
     *
     * try {
     *
     * java.net.URL urlString = new java.net.URL("file:///"+homeUrl+stringUrl);
     *
     * setURL(urlString);
     *
     * } catch (java.net.MalformedURLException malExec) {
     *
     * malExec.printStackTrace();
     *
     * javax.swing.JOptionPane.showMessageDialog(this, malExec.getMessage());
     *
     * }
     *
     * }
     */
    /**
     *
     */
    public class OpenShiftAction extends javax.swing.AbstractAction {

        /**
         *
         */
        public void OpenShiftAction() {
        }

        public void actionPerformed(java.awt.event.ActionEvent actionEvent) {

            threadSales = true;

            java.lang.Thread threadSalesOpen = new java.lang.Thread(getMainClass(), "Sales Open");

            threadSalesOpen.start();

            //openShiftAction.setEnabled(false);
        }
    }

    private class PatientRegistrationAction extends javax.swing.AbstractAction {

        public void PatientRegistrationAction() {
        }

        public void actionPerformed(java.awt.event.ActionEvent actionEvent) {

            patientRunning = true;

            patientThread = new java.lang.Thread(getMainClass(), "Patient");

            patientThread.start();

        }
    }

    /**
     *
     * @return
     */
    public com.afrisoftech.hospital.HospitalMain getMainClass() {

        return this;

    }

    /*
     * private javax.swing.JTextPane createTextPane() { javax.swing.JTextPane
     * textPane = new javax.swing.JTextPane(); java.lang.String[] initString = {
     * "This is an editable JTextPane, ",	//regular "another ",	//italic "styled
     * ",	//bold "text ",	//small "component, ",	//large "which supports
     * embedded components..." + newline,//regular newTab+newTab+newTab+newTab+"
     * " + newline, // newline, newTab+newTab+newTab+newTab+" " +
     * newline,//button "...and embedded icons..." + newline,	//regular " ",
     * //icon newline + "JTextPane is a subclass of JEditorPane that " + "uses a
     * StyledEditorKit and StyledDocument, and provides " + "cover methods for
     * interacting with those objects." };
     *
     * java.lang.String[] initStyles = { "regular", "italic", "bold", "small",
     * "large", "regular", "button", "button1", "regular", "icon", "regular" };
     *
     * initStylesForTextPane(textPane);
     *
     * javax.swing.text.Document doc = textPane.getDocument();
     *
     * try { for (int i=0; i < initString.length; i++) {
     * doc.insertString(doc.getLength(), initString[i],
     * textPane.getStyle(initStyles[i])); } } catch
     * (javax.swing.text.BadLocationException ble) {
     * System.err.println("Couldn't insert initial text."); }
     *
     * return textPane; }
     *
     * protected void initStylesForTextPane(javax.swing.JTextPane textPane) {
     * //Initialize some styles. javax.swing.text.Style def =
     * javax.swing.text.StyleContext.getDefaultStyleContext().
     * getStyle(javax.swing.text.StyleContext.DEFAULT_STYLE);
     *
     * Style regular = textPane.addStyle("regular", def);
     * StyleConstants.setFontFamily(def, "SansSerif");
     *
     * Style s = textPane.addStyle("italic", regular);
     * StyleConstants.setItalic(s, true);
     *
     * s = textPane.addStyle("bold", regular); StyleConstants.setBold(s, true);
     *
     * s = textPane.addStyle("small", regular); StyleConstants.setFontSize(s,
     * 10);
     *
     * s = textPane.addStyle("large", regular); StyleConstants.setFontSize(s,
     * 16);
     *
     * s = textPane.addStyle("icon", regular); StyleConstants.setAlignment(s,
     * StyleConstants.ALIGN_CENTER); StyleConstants.setIcon(s, new
     * javax.swing.ImageIcon("images/Pig.gif"));
     *
     * s = textPane.addStyle("button", regular); StyleConstants.setAlignment(s,
     * StyleConstants.ALIGN_CENTER); // javax.swing.JButton button = new
     * javax.swing.JButton(new
     * javax.swing.ImageIcon(getClass().getResource("/npdbr1.gif")));
     * javax.swing.JButton button = new
     * javax.swing.JButton(this.openShiftAction); button.setMargin(new
     * java.awt.Insets(1,1,1,1)); button.setSize(30,10);
     * button.addActionListener(new java.awt.event.ActionListener() { public
     * void actionPerformed(java.awt.event.ActionEvent e) {
     * java.awt.Toolkit.getDefaultToolkit().beep(); } });
     * StyleConstants.setComponent(s, button);
     *
     * s = textPane.addStyle("button1", regular);
     *
     * StyleConstants.setAlignment(s, StyleConstants.ALIGN_CENTER); //
     * javax.swing.JButton button = new javax.swing.JButton(new
     * javax.swing.ImageIcon(getClass().getResource("/npdbr1.gif")));
     * javax.swing.JButton button1 = new
     * javax.swing.JButton(this.patientRegistrationAction);
     * button1.setMargin(new java.awt.Insets(1,1,1,1));
     * button1.setOpaque(false); button1.addActionListener(new
     * java.awt.event.ActionListener() { public void
     * actionPerformed(java.awt.event.ActionEvent e) {
     * java.awt.Toolkit.getDefaultToolkit().beep(); } });
     * StyleConstants.setComponent(s, button1);
     *
     * }
     */
    class CustomTreeCellEditor extends javax.swing.tree.DefaultTreeCellEditor {

        // Color currentColor = null;
        public CustomTreeCellEditor(javax.swing.JButton treeButton) {

            super(new javax.swing.JTree(), new javax.swing.tree.DefaultTreeCellRenderer());

            // super(new javax.swing.JCheckBox()); //Unfortunately, the constructor
            //expects a check box, combo box,
            //or text field.
            editingComponent = treeButton;

            //setClickCountToStart(1); //This is usually 1 or 2.
            //Must do this so that editing stops when appropriate.
            /*
             * treeButton.addActionListener(new ActionListener() {
             *
             * public void actionPerformed(ActionEvent e) {
             *
             * fireEditingStopped(); } });
             */
        }

        protected void fireEditingStopped() {
            // super.fireEditingStopped();
        }

        public Object getCellEditorValue() {

            return editingComponent.getName();

        }

        public java.awt.Component getTreeCellEditorComponent(javax.swing.JTree tree,
                Object value,
                boolean isSelected,
                int row,
                int column) {

            //((javax.swing.JButton)editingComponent).setText(value.toString());
            // currentColor = (Color)value;
            return (javax.swing.JButton) value; //= (javax.swing.JButton)value;
        }
    }

    /**
     *
     */
    public void createTreeDBAdmin() {

        treeScrollPaneDBAdmin = new javax.swing.JScrollPane();

        com.afrisoftech.dbadmin.DbSchemaTreeModel dbSchemaModel = new com.afrisoftech.dbadmin.DbSchemaTreeModel();

        final javax.swing.JTree jTreeDBAdmin = dbSchemaModel.createDBSchemaModel(connectDB, topDBAdmin); //        topDBAdmin = new javax.swing.tree.DefaultMutableTreeNode("Hospital Payroll");

        //        int treePayrollRowCount = parseMenuBar.parseHospitalMenus(payrollMain.getJMenuBar(), toPayroll, topReports, "Payroll Reports", "Payroll Utilities");
        //        jTreePayroll = new javax.swing.JTree(toPayroll);
        //jTreePayroll.setBackground(java.awt.Color.gray);
        //        javax.swing.tree.DefaultTreeCellRenderer rendererDBAdmin = new javax.swing.tree.DefaultTreeCellRenderer();
        //        rendererPayroll.setLeafIcon(new javax.swing.ImageIcon(getClass().getResource("/BD21337_.GIF")));
        //        jTreeDBAdmin.getCellRenderer().setTextSelectionColor(java.awt.Color.blue);
        //        rendererPayroll.setOpaque(true);
        //        jTreePayroll.setCellRenderer(rendererPayroll);
        jTreeDBAdmin.getSelectionModel().setSelectionMode(javax.swing.tree.TreeSelectionModel.SINGLE_TREE_SELECTION);

        //Listen for when the selection changes.
        jTreeDBAdmin.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent e) {

                javax.swing.tree.DefaultMutableTreeNode node = (javax.swing.tree.DefaultMutableTreeNode) jTreeDBAdmin.getLastSelectedPathComponent();

                if (node == null) {
                    return;
                }

                Object nodeInfo = node.getUserObject();

                if (node.isLeaf()) {

                    if (tableView.isShowing()) {

                        java.lang.String selectedTable = nodeInfo.toString();

                        tableView.setSize(saccopn.getSize());

                        tableView.populateTableView(selectedTable);

                        tableView.setVisible(true);

                    } else {

                        saccopn.add(tableView, javax.swing.JLayeredPane.DEFAULT_LAYER);

                        java.lang.String selectedTable = nodeInfo.toString();

                        try {

                            tableView.populateTableView(selectedTable);

                            tableView.setSize(saccopn.getSize());

                            tableView.setSelected(true);

                            tableView.setVisible(true);

                        } catch (java.beans.PropertyVetoException pvt) {
                        }

                    }

                    //                    com.afrisoftech.lib.ParseMenuBar parserMenuBar = new com.afrisoftech.lib.ParseMenuBar();
                    // parseMenuBar.getTargetMenuItem(payrollMain.getJMenuBar().getSubElements(), nodeInfo.toString());
                    // javax.swing.JMenuItem targetMenuItem = (javax.swing.JMenuItem)targetItem;
                    //                    System.out.println();
                    //                    System.out.println(targetMenuItem);
                    //                    targetMenuItem.setEnabled(false);
                    //                    callMenuItemFromTree(nodeInfo.toString(), "com.afrisoftech.hospayroll.PayrollMain");
                    //                    invokePayrollTreeActionPlan(nodeInfo.toString());
                } else {
                    // displayURL(helpURL);
                }
            }
        });

        //   parseMenuBar.expandCustomTree(jTreeDBAdmin, treePayrollRowCount);
        treeScrollPaneDBAdmin.setViewportView(jTreeDBAdmin);

    }

    /**
     *
     */
    public void createTreeGraphicals() {

        isCustomQuery = false;

        treeScrollPaneGraphicals = new javax.swing.JScrollPane();

        com.afrisoftech.dbadmin.DbSchemaTreeModel dbSchemaModel = new com.afrisoftech.dbadmin.DbSchemaTreeModel();

        final javax.swing.JTree jTreeGraphicals = dbSchemaModel.createDBSchemaModel(connectDB, topGraphicals); //        topDBAdmin = new javax.swing.tree.DefaultMutableTreeNode("Hospital Payroll");

        jTreeGraphicals.getSelectionModel().setSelectionMode(javax.swing.tree.TreeSelectionModel.SINGLE_TREE_SELECTION);

        //Listen for when the selection changes.
        jTreeGraphicals.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent e) {

                javax.swing.tree.DefaultMutableTreeNode node = (javax.swing.tree.DefaultMutableTreeNode) jTreeGraphicals.getLastSelectedPathComponent();

                if (node == null) {
                    return;
                }

                Object nodeInfo = node.getUserObject();

                if (node.isLeaf()) {

                    selectedTable = nodeInfo.toString();

                    if (graphicalView.isShowing()) {

                        tableColumnsVector = getTableColumns(selectedTable);

                        xaxisComboBox.setModel(new javax.swing.DefaultComboBoxModel(tableColumnsVector));

                        graphViewDialog.setSize(500, 400);

                        graphViewDialog.setLocation((((getSize().width) / 2) - (500 / 2)), (((getSize().height) / 2) - (400 / 2)));

                        graphViewDialog.setVisible(true);

                        graphicalView.showChart(queryString, selectedTable, getSelf());

                        graphicalView.setSize(saccopn.getSize());

                        graphicalView.setVisible(true);

                    } else {

                        saccopn.add(graphicalView, javax.swing.JLayeredPane.DEFAULT_LAYER);

                        selectedTable = nodeInfo.toString();

                        tableColumnsVector = getTableColumns(selectedTable);

                        xaxisComboBox.setModel(new javax.swing.DefaultComboBoxModel(tableColumnsVector));

                        try {

                            graphViewDialog.setSize(500, 400);

                            graphViewDialog.setLocation((((getSize().width) / 2) - (500 / 2)), (((getSize().height) / 2) - (400 / 2)));

                            graphViewDialog.setVisible(true);

                            graphicalView.showChart(queryString, selectedTable, getSelf());

                            graphicalView.setSize(saccopn.getSize());

                            graphicalView.setSelected(true);

                            graphicalView.setVisible(true);

                        } catch (java.beans.PropertyVetoException pvt) {
                        }

                    }

                    //                    com.afrisoftech.lib.ParseMenuBar parserMenuBar = new com.afrisoftech.lib.ParseMenuBar();
                    // parseMenuBar.getTargetMenuItem(payrollMain.getJMenuBar().getSubElements(), nodeInfo.toString());
                    // javax.swing.JMenuItem targetMenuItem = (javax.swing.JMenuItem)targetItem;
                    //                    System.out.println();
                    //                    System.out.println(targetMenuItem);
                    //                    targetMenuItem.setEnabled(false);
                    //                    callMenuItemFromTree(nodeInfo.toString(), "com.afrisoftech.hospayroll.PayrollMain");
                    //                    invokePayrollTreeActionPlan(nodeInfo.toString());
                } else {
                    // displayURL(helpURL);
                }
            }
        });

        //   parseMenuBar.expandCustomTree(jTreeDBAdmin, treePayrollRowCount);
        treeScrollPaneGraphicals.setViewportView(jTreeGraphicals);

    }

    /**
     *
     */
    public void createOperationsPopupMenu() {

        parseMenuBar.parseHospitalPopupMenus(getJMenuBar(), operationsPopupMenu, reportsPopupMenu, "Operations Reports", "Operations Utilities", operationsPopupButtonGroup, reportsPopupButtonGroup);

    }

    /**
     *
     */
    public void createInventoryPopupMenu() {

        parseMenuBar.parseHospitalPopupMenus(stockMain.getJMenuBar(), inventoryPopupMenu, reportsPopupMenu, "Pharmacy & Inventory Reports", "Inventory Utilities", inventoryPopupButtonGroup, null);

//             parseMenuBar.parseHospitalPopupMenus(stockMain.getJMenuBar(), inventorymn, reportsPopupMenu, "Pharmacy & Inventory Reports", "Inventory Utilities", inventoryPopupButtonGroup, null);
    }

    /**
     *
     */
    public void createPayrollPopupMenu() {

        parseMenuBar.parseHospitalPopupMenus(payrollMain.getJMenuBar(), payrollPopupMenu, reportsPopupMenu, "HR & Payroll Reports", "HR & Payroll Utilities", payrollPopupButtonGroup, null);

        parseMenuBar.parseHospitalPopupMenus(payrollMain.getJMenuBar(), payrollmn, reportsPopupMenu, "HR & Payroll Reports", "HR & Payroll Utilities", payrollPopupButtonGroup, null);

    }

    /**
     *
     */
    public void createHRMPopupMenu() {

        parseMenuBar.parseHospitalPopupMenus(hrMain.getJMenuBar(), hrmPopupMenu, reportsPopupMenu, "HRM Reports", "HRM Utilities", hrPopupButtonGroup, null);

//        parseMenuBar.parseHospitalPopupMenus(hrMain.getJMenuBar(), hrmmn, reportsPopupMenu, "HRM Reports", "HRM Utilities", hrPopupButtonGroup, null);
        //       parseMenuBar.parseHospitalPopupMenus(fleetMain.getJMenuBar(), fleetmn, reportsPopupMenu, "HRM Reports", "HRM Utilities", hrPopupButtonGroup, null);
    }

    /**
     *
     */
    public void createStockMenuBar() {

        parseMenuBar.parseHospitalMenuBars(stockMain.getJMenuBar(), null, null, inventoryMenuBar, reportsMenuBar, "Pharmacy & Inventory Reports", "Inventory Utilities", null, null);

    }

    /**
     *
     */
    public void createPayrollMenuBar() {

        parseMenuBar.parseHospitalMenuBars(payrollMain.getJMenuBar(), null, null, payrollMenuBar, reportsMenuBar, "HR & Payroll Reports", "Payroll Utilities", null, null);

    }

    /**
     *
     */
    public void createHRMenuBar() {

        parseMenuBar.parseHospitalMenuBars(hrMain.getJMenuBar(), null, null, hrMenuBar, reportsMenuBar, "HRM Reports", "HRM Utilities", null, null);

    }

    /**
     *
     */
    public void createSystemMenus() {

        parseMenuBar.parseHospitalMenuBars(getJMenuBar(), payrollMenuBar, null, null, null, "Operations Reports", "System Utilities", payrollMenuBarButtonGroup, null);

        parseMenuBar.parseHospitalMenuBars(getJMenuBar(), null, inventoryMenuBar, null, null, "Operations Reports", "System Utilities", inventoryMenuBarButtonGroup, null);

        //        parseMenuBar.parseHospitalMenuBars(getJMenuBar(), payrollMenuBar, inventoryMenuBar, null, reportsMenuBar, "Operations Reports", "System Utilities");
        parseMenuBar.parseHospitalMenuBars(getJMenuBar(), null, null, null, reportsMenuBar, "Operations Reports", "System Utilities", operationsMenuBarButtonGroup, reportsMenuBarButtonGroup);

        updateNewComponentsUI();

    }

    /**
     *
     */
    public void updateNewComponentsUI() {

        this.saccopn.setOpaque(false);

        repaint();

        javax.swing.SwingUtilities.updateComponentTreeUI(jMenuBar1);

        javax.swing.SwingUtilities.updateComponentTreeUI(graphViewDialog);

        //        jMenuBar1.setBorder(new javax.swing.border.TitledBorder(null, "Operations Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 10), new java.awt.Color(0, 0, 153)));
        //        jMenuBar1.setFont(new java.awt.Font("Serif", 0, 12));
        javax.swing.SwingUtilities.updateComponentTreeUI(reportsMenuBar);

        //        reportsMenuBar.setBorder(new javax.swing.border.TitledBorder(null, "Reports Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 10), new java.awt.Color(0, 0, 153)));
        reportsMenuBar.setFont(new java.awt.Font("Serif", 0, 12));

        javax.swing.SwingUtilities.updateComponentTreeUI(payrollMenuBar);

        //  payrollMenuBar.setBorder(new javax.swing.border.TitledBorder(null, "HR & Payroll Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 10), new java.awt.Color(0, 0, 153)));
        payrollMenuBar.setFont(new java.awt.Font("Serif", 0, 12));

        javax.swing.SwingUtilities.updateComponentTreeUI(inventoryMenuBar);

        //  inventoryMenuBar.setBorder(new javax.swing.border.TitledBorder(null, "Pharmacy & Inventory Menu Bar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier", 2, 10), new java.awt.Color(0, 0, 153)));
        inventoryMenuBar.setFont(new java.awt.Font("Serif", 0, 12));

        javax.swing.SwingUtilities.updateComponentTreeUI(reportsPopupMenu);

        javax.swing.SwingUtilities.updateComponentTreeUI(inventoryPopupMenu);

        //        javax.swing.SwingUtilities.updateComponentTreeUI(jMenuBar1);
        javax.swing.SwingUtilities.updateComponentTreeUI(payrollPopupMenu);

        javax.swing.SwingUtilities.updateComponentTreeUI(operationsPopupMenu);

    }

    class ConnectionStatus extends java.lang.Thread {

        boolean runningStatus = true;
        java.sql.Statement stmtConnectionStatus;

        public ConnectionStatus(java.awt.Component parent) {

            try {

                System.out.println(connectDB);

                stmtConnectionStatus = connectDB.createStatement();

            } catch (java.sql.SQLException sqlExec) {

                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Connection not established.");

            }

        }

        public void run() {

            while (runningStatus) {

                try {

                    stmtConnectionStatus.executeQuery("SELECT * FROM connection_status");

                    //                    connectDB.getMetaData();
                    //     System.out.println("Database Connection still on");
                    // stmtConnectionStatus.close();
                    try {

                        java.lang.Thread.sleep(120000);

                    } catch (java.lang.InterruptedException intExec) {

                        javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "Interruption Exception!");
                    }

                } catch (java.sql.SQLException sqlExec) {

                    connectionLabel.setText("DB Connection Status : [DISCONNECTED]");

                    runningStatus = false;

                    javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Connection to database lost. Contact Database or System Administrator.");
                }

            }

        }
    }

    private void populateColumnSelectorTable() {

        columnSelectorTable.setModel(new javax.swing.table.DefaultTableModel(
                /*
                 * new Object [][] { {null, null}, {null, null}, {null, null},
                 * {null, null} }
                 */
                createTableData(),
                new String[]{
                    "Column Name", "Include"
                }) {
            Class[] types = new Class[]{
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });

    }

    private void populateColumnSelectorTableChartDefiner() {

        columnSelectorTable1.setModel(new javax.swing.table.DefaultTableModel(
                /*
                 * new Object [][] { {null, null}, {null, null}, {null, null},
                 * {null, null} }
                 */
                createTableDataChartDefiner(),
                new String[]{
                    "Column Name", "Include"
                }) {
            Class[] types = new Class[]{
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });

    }

    /**
     *
     * @param tableName
     * @return
     */
    public java.util.Vector getTableColumns(java.lang.String tableName) {

        tableColumnsVector = new java.util.Vector(1, 1);

        try {

            java.sql.PreparedStatement pstmtColumns = connectDB.prepareStatement("select * from " + tableName);

            pstmtColumns.executeQuery();

            java.sql.ResultSetMetaData rsetMetadata = pstmtColumns.getMetaData();

            columnCount = rsetMetadata.getColumnCount();

            for (int i = 0; i < rsetMetadata.getColumnCount(); i++) {

                tableColumnsVector.addElement(rsetMetadata.getColumnName(i + 1));

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqlExec.getMessage());

        }

        return tableColumnsVector;

    }

    /**
     *
     * @param chartQuery
     * @return
     */
    public java.util.Vector getTableColumnsChartDefiner(java.lang.String chartQuery) {

        tableColumnsVector1 = new java.util.Vector(1, 1);

        try {

            java.sql.PreparedStatement pstmtColumns = connectDB.prepareStatement(chartQuery);

            pstmtColumns.executeQuery();

            java.sql.ResultSetMetaData rsetMetadata = pstmtColumns.getMetaData();

            columnCount = rsetMetadata.getColumnCount();

            for (int i = 0; i < rsetMetadata.getColumnCount(); i++) {

                tableColumnsVector1.addElement(rsetMetadata.getColumnName(i + 1));

            }

        } catch (java.sql.SQLException sqlExec) {

            sqlExec.getMessage();

            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqlExec.getMessage());

        }

        return tableColumnsVector1;

    }

    /**
     *
     * @param queryStr
     * @return
     */
    public java.util.Vector getTableColumnsFromQuery(java.lang.String queryStr) {

        tableColumnsVector = new java.util.Vector(1, 1);

        try {

            java.sql.PreparedStatement pstmtColumns = connectDB.prepareStatement(queryStr);

            pstmtColumns.executeQuery();

            java.sql.ResultSetMetaData rsetMetadata = pstmtColumns.getMetaData();

            columnCount = rsetMetadata.getColumnCount();

            for (int i = 0; i < rsetMetadata.getColumnCount(); i++) {

                tableColumnsVector.addElement(rsetMetadata.getColumnName(i + 1));

            }

        } catch (java.sql.SQLException sqlExec) {

            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqlExec.getMessage());

        }

        return tableColumnsVector;

    }

    /**
     *
     * @return
     */
    public java.lang.Object[][] createTableData() {

        tableData = new java.lang.Object[columnCount][2];

        for (int i = 0; i < columnCount; i++) {

            if ((tableColumnsVector.get(i).toString() != xaxisComboBox.getSelectedItem().toString()) && !tableColumnsVector.get(i).toString().startsWith("date") && !tableColumnsVector.get(i).toString().endsWith("date")) {

                tableData[i][0] = tableColumnsVector.get(i);

                tableData[i][1] = null;

            }

        }

        return tableData;

    }

    /**
     *
     * @return
     */
    public java.lang.Object[][] createTableDataChartDefiner() {

        tableData = new java.lang.Object[columnCount][2];

        for (int i = 0; i < columnCount; i++) {

            if ((tableColumnsVector1.get(i).toString() != xaxisComboBox1.getSelectedItem().toString()) && !tableColumnsVector1.get(i).toString().startsWith("date") && !tableColumnsVector1.get(i).toString().endsWith("date")) {

                tableData[i][0] = tableColumnsVector1.get(i);

                tableData[i][1] = null;

            }

        }

        return tableData;

    }

    /**
     *
     */
    public void submitQueryString() {

        System.out.println("Selected table [" + selectedTable + "]");

        java.util.Vector qStringVector = new java.util.Vector(1, 1);

        queryString = "";

        String columnValues = "";

        int valueCount = 0;

        for (int n = 0; n < columnSelectorTable.getRowCount(); n++) {

            if ((columnSelectorTable.getValueAt(n, 0).toString() != null) && (columnSelectorTable.getValueAt(n, 1) == Boolean.valueOf(true))) {

                qStringVector.addElement(columnSelectorTable.getValueAt(n, 0));

                //columnValues = columnSelectorTable.getValueAt(n, 0).toString()+" ,";
            }

        }

        java.lang.Object[] queryObjects = qStringVector.toArray();

        for (int n = 0; n < queryObjects.length; n++) {

            if (n < (queryObjects.length - 1)) {

                columnValues = columnValues + queryObjects[n].toString() + ", ";

            } else {

                columnValues = columnValues + queryObjects[n];

            }

        }

        queryString = "SELECT " + xaxisComboBox.getSelectedItem().toString() + ", " + columnValues + " FROM " + selectedTable;

        System.out.println("Query String " + queryString);

        if (isCustomQuery) {

            showCustomChart();

        }

    }

    /**
     *
     * @return
     */
    public com.afrisoftech.hospital.HospitalMain getSelf() {

        return this;

    }

    /**
     *
     * @param selectedTableString
     */
    public void setSelectedTable(java.lang.String selectedTableString) {

        selectedTable = selectedTableString;

    }

    /**
     *
     */
    public void showCustomChart() {

        graphicalView.showChart(queryString, selectedTable, getSelf());

        //        graphicalView.setSize(saccopnGraphicals.getSize());
        //        graphicalView.setSelected(true);
        graphicalView.setVisible(true);
    }

    /**
     *
     * @return
     */
    public com.l2fprod.common.swing.JOutlookBar createOutLookBar() {

        createTreeDBAdmin();

        createTreeGraphicals();

        jOutLookBar = new com.l2fprod.common.swing.JOutlookBar();

//        jOutLookBar.setd
        javax.swing.JScrollPane operationsTaskScrollPane = new javax.swing.JScrollPane();

        operationsTaskScrollPane.setViewportView(operationsTaskPane);

        operationsTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                operationsTaskPaneComponentShown(evt);
            }
        });

        //   operationsTaskScrollPane.setFont(new java.awt.Font("Helvetica", java.awt.Font.PLAIN, 9));
        jOutLookBar.setAlignmentX(jOutLookBar.LEFT_ALIGNMENT);
        jOutLookBar.addTab("Hospital Operations", operationsTaskScrollPane);
        jOutLookBar.setAnimated(true);
        ////  jOutLookBar.setIconAt(getDefaultPaneByName("Hospital Operations"),new javax.swing.ImageIcon(getClass().getResource("/openfold.gif")));

        javax.swing.JScrollPane accountsTaskScrollPane = new javax.swing.JScrollPane();

        accountsTaskScrollPane.setViewportView(acctsMainTaskPane);

        accountsTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                accountsTaskPaneComponentShown(evt);
            }
        });

        jOutLookBar.addTab("Accounts & Financials", accountsTaskScrollPane);

        javax.swing.JScrollPane stockTaskScrollPane = new javax.swing.JScrollPane();

        stockTaskScrollPane.setViewportView(stockTaskPane);

        stockTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                stockTaskPaneComponentShown(evt);
            }
        });

        jOutLookBar.addTab("Supply Chain Management", stockTaskScrollPane);
        //  jOutLookBar.addTab("Stock & Inventory", stockTaskScrollPane);

        javax.swing.JScrollPane hrTaskScrollPane = new javax.swing.JScrollPane();

        hrTaskScrollPane.setViewportView(hrmTaskPane);

        hrTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                hrTaskPaneComponentShown(evt);
            }
        });

        jOutLookBar.addTab("HR Management", hrTaskScrollPane);

        javax.swing.JScrollPane payrollTaskScrollPane = new javax.swing.JScrollPane();

        payrollTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                payrollTaskPaneComponentShown(evt);
            }
        });

        chartsTaskScrollPane = new javax.swing.JScrollPane();

        chartsTaskScrollPane.setViewportView(this.createChartsTaskPane());

        chartsTaskScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                //  chartsTaskPaneComponentShown(evt);
            }
        });

        jOutLookBar.addTab("Charts & Graphs", chartsTaskScrollPane);

        /*
         * payrollTaskScrollPane.setViewportView(payrollTaskPane);
         *
         *
         * // jOutLookBar.addTab("Maintenance & Utilities", new
         * javax.swing.JButton());
         *
         *
         * javax.swing.JScrollPane reportTaskScrollPane = new
         * javax.swing.JScrollPane();
         *
         * reportTaskScrollPane.addComponentListener(new
         * java.awt.event.ComponentAdapter() { public void
         * componentShown(java.awt.event.ComponentEvent evt) {
         * reportTaskPaneComponentShown(evt); } });
         *
         * reportTaskScrollPane.setViewportView(reportTaskPane);
         *
         * jOutLookBar.addTab("Reports & Utilities", reportTaskScrollPane);
         */
        //  jOutLookBar.setFont(new java.awt.Font("Helvetica", java.awt.Font.PLAIN, 9));
        //javax.swing.JScrollPane treeScrollPaneDBAdmin;
        //javax.swing.JScrollPane treeScrollPaneGraphicals;

        /*
         * jOutLookBar.addTab("Database Analysis", treeScrollPaneDBAdmin);
         *
         * /* jOutLookBar.addTab("Chart/Graphs Builder",
         * treeScrollPaneGraphicals);
         *
         * // jOutLookBar.addTab("Charts & Graphs", new
         * com.l2fprod.common.swing.JCollapsiblePane());
         *
         * jOutLookBar.addTab("System Dash Board", new
         * com.l2fprod.common.swing.JCollapsiblePane());
         */
        if (com.afrisoftech.lib.UserName.canIApprove(connectDB, com.afrisoftech.lib.UserName.getLoginName(connectDB)).equalsIgnoreCase("NO")) {
            this.jOutLookBar.setSelectedIndex(getDefaultPaneByName());
        } else {
            this.jOutLookBar.setSelectedIndex(getDefaultPaneByName("Supply Chain Management"));
        }
        this.jOutLookBar.setSelectedIndex(getDefaultPaneByName());

        return jOutLookBar;

    }

    private void operationsTaskPaneComponentShown(java.awt.event.ComponentEvent evt) {

        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(jMenuBar1);

        this.validate();

        this.saccopn = saccopn;

        rememberDefaultPane();

        System.out.println("Component changes registered");
        // Add your handling code here:
    }

    private void accountsTaskPaneComponentShown(java.awt.event.ComponentEvent evt) {

        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(jMenuBar1);

        this.validate();

        this.saccopn = saccopn;

        rememberDefaultPane();

        System.out.println("Component changes registered");
        // Add your handling code here:
    }

    private void stockTaskPaneComponentShown(java.awt.event.ComponentEvent evt) {

        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(stockMain.getJMenuBar());

        this.validate();

        stockMain.medicdspane = saccopn;

        System.out.println("Component changes registered");

        rememberDefaultPane();

        //Component changes registered
        // Add your handling code here:
        if (k == 0) {
            if (!UserName.canIApprove(connectDB, UserName.getLoginName(connectDB)).equalsIgnoreCase("NO")) {
                k = 3;
                System.out.println("Done checking");

                int supp = 0;

                int supp1 = 0;

                try {

                    java.sql.Statement stmtTablez = connectDB.createStatement();

                    java.sql.ResultSet rsetTablez = stmtTablez.executeQuery("SELECT count(distinct(requisition_no)) irq FROM st_receive_requisation WHERE irq_approval=false AND requisition_no ILIKE 'IRQ%' and upper(store_name) IN (select distinct UPPER(stores) from store_allocation where user_name ILIKE current_user and type ilike 'Approve IRQ') and date::date > current_date-5 ");
                    while (rsetTablez.next()) {
                        //storenametxt.setText(rsetTablez.getObject(1).toString());
                        supp = Integer.valueOf(rsetTablez.getObject(1).toString());
                    }

                    rsetTablez = stmtTablez.executeQuery("SELECT count(distinct(requisition_no)) irq FROM st_receive_requisation WHERE analysed=false and (requisition_no ILIKE 'PRQ%' OR requisition_no ILIKE 'SRQ%') and UPPER(store_name) IN (select distinct UPPER(stores) from store_allocation where user_name ILIKE current_user and type ilike 'Approve PRQ/SRQ') and date::date > current_date-5 ");
                    while (rsetTablez.next()) {
                        //storenametxt.setText(rsetTablez.getObject(1).toString());
                        supp1 = Integer.valueOf(rsetTablez.getObject(1).toString());
                    }

                    JOptionPane.showMessageDialog(this, "You currently have approximately [" + supp + "] IRQs and [" + supp1 + "] PRQs to approve");

                } catch (SQLException ex) {
                    //            ex.printStackTrace();             //Exceptions.printStackTrace(ex);
                    ex.printStackTrace();
                }

            }
        }

        k = 20;

    }

    private void payrollTaskPaneComponentShown(java.awt.event.ComponentEvent evt) {
        //  if (allowed2Access()){
        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(payrollMain.getJMenuBar());

        this.validate();

        payrollMain.payrollpn = saccopn;

        System.out.println("Component changes registered");

        rememberDefaultPane();
        /*
         * } else {
         *
         * jOutLookBar.setSelectedIndex(getDefaultPaneByName());
         *
         * }
         */
        // Add your handling code here:
    }

    private void hrTaskPaneComponentShown(java.awt.event.ComponentEvent evt) {
        //  if (allowed2Access()){
        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(hrMain.getJMenuBar());

        this.validate();

        hrMain.hrDesktopPane = saccopn;

        System.out.println("Component changes registered");

        rememberDefaultPane();
        /*
         * } else {
         *
         * jOutLookBar.setSelectedIndex(getDefaultPaneByName());
         *
         * }
         */
        // Add your handling code here:
    }

    private void reportTaskPaneComponentShown(java.awt.event.ComponentEvent evt) {

        this.setTitle(getCompanyName());

        this.invalidate();

        setJMenuBar(reportsMenuBar);

        this.validate();

        this.saccopn = saccopn;

        System.out.println("Component changes registered");

        rememberDefaultPane();
        // Add your handling code here:
    }

    /**
     *
     */
    public void createTaskPanes() {

        parseMenuBar = new com.afrisoftech.lib.ParseMenuBar();

        parseMenuBar1 = new com.afrisoftech.lib.ParseMenuBar1();
        System.out.println(acctsMainTaskPane.toString());
        operationsTaskPane1 = new com.l2fprod.common.swing.JTaskPane();

        // javax.swing.JMenu
        parseMenuBar1.createSPJTaskBarFromMenuBar(this.getJMenuBar(), this.getJMenuBar().getSubElements(), operationsTaskPane1, acctsMainTaskPane, "Accounts & Financials", "Operations & Utilities", operationsPopupButtonGroup, reportsPopupButtonGroup);
        parseMenuBar1.createJTaskBarFromMenuBar(this.getJMenuBar(), this.getJMenuBar().getSubElements(), operationsTaskPane, reportTaskPane, "Operations Reports", "Operations & Utilities", operationsPopupButtonGroup, reportsPopupButtonGroup);
        parseMenuBar1.createJTaskBarFromMenuBar(stockMain.getJMenuBar(), stockMain.getJMenuBar().getSubElements(), stockTaskPane, reportTaskPane, "Stock Reports", "Stock & Utilities", operationsPopupButtonGroup, reportsPopupButtonGroup);
        parseMenuBar1.createJTaskBarFromMenuBar(payrollMain.getJMenuBar(), payrollMain.getJMenuBar().getSubElements(), payrollTaskPane, reportTaskPane, "Payroll Reports", "Payroll & Utilities", operationsPopupButtonGroup, reportsPopupButtonGroup);
        parseMenuBar1.createJTaskBarFromMenuBar(hrMain.getJMenuBar(), hrMain.getJMenuBar().getSubElements(), hrmTaskPane, reportTaskPane, "HRM Reports", "HRM Utilities", operationsPopupButtonGroup, reportsPopupButtonGroup);

        java.awt.GridBagConstraints gridBagConstraints;
        treePane.setLayout(new java.awt.GridBagLayout());

        treePane.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        treePane.add(createOutLookBar(), gridBagConstraints);

    }

    /**
     *
     */
    public void rememberDefaultPane() {
//
//        if (com.afrisoftech.lib.UserName.canIApprove(connectDB, com.afrisoftech.lib.UserName.getLoginName(connectDB)).equals("NO")) {
//
//            System.out.println("Nope so defaultpane=" + jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()));
//
//            appProp.setProperty("defaultsplitpane", jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()));
//
//        } else {
//            //  appProp.setProperty("defaultsplitpane", jOutLookBar.getTitleAt(getDefaultPaneByName("Supply Chain Management")));
//
//            System.out.println("Can approve so defaultpane=.. " + jOutLookBar.getTitleAt(getDefaultPaneByName("Supply Chain Management")));
//        }
        appProp.setProperty("defaultsplitpane", jOutLookBar.getTitleAt(jOutLookBar.getSelectedIndex()));
    }

    /**
     *
     * @return
     */
    public int getDefaultPaneByName() {
        System.out.println("default split pane [" + System.getProperty("defaultsplitpane") + "]");
        String searchString = System.getProperty("defaultsplitpane");
        int index = 0;
        for (int i = 0; i < jOutLookBar.getTabCount(); i++) {

            if (jOutLookBar.getTitleAt(i).equalsIgnoreCase(searchString)) {
                index = i;
                //   break;
            }

        }

        return index;
    }

    /**
     *
     * @param searchString
     * @return
     */
    public int getDefaultPaneByName(java.lang.String searchString) {
        System.out.println("default split pane [" + System.getProperty("defaultsplitpane") + "]");
        //  String searchString = System.getProperty("defaultsplitpane");
        int index = 0;
        for (int i = 0; i < jOutLookBar.getTabCount(); i++) {

            if (jOutLookBar.getTitleAt(i).equalsIgnoreCase(searchString)) {
                index = i;
                //   break;
            }

        }

        return index;

    }

    private class GetAvailablePrintServices extends java.lang.Thread {

        public void GetAvailablePrintServices() {
        }

        public void run() {
            javax.print.DocFlavor textFileDocFlavor = javax.print.DocFlavor.INPUT_STREAM.AUTOSENSE;
            javax.print.attribute.PrintRequestAttributeSet textPrintAttributeSet = new javax.print.attribute.HashPrintRequestAttributeSet();

            java.util.Vector printServicesVector = new java.util.Vector(1, 1);

            javax.print.PrintService printServices[] = javax.print.PrintServiceLookup.lookupPrintServices(textFileDocFlavor, textPrintAttributeSet);
            ///            javax.print.attribute.standard.MediaSize printMediaSize = new javax.print.attribute.standard.MediaSize(java.lang.Integer.parseInt(System.getProperty("invoice_textpagesize_x")), java.lang.Integer.parseInt(System.getProperty("invoice_textpagesize_y")), javax.print.attribute.Size2DSyntax.MM);
            javax.print.attribute.standard.PrintQuality printQuality = javax.print.attribute.standard.PrintQuality.DRAFT;
            //      textPrintAttributeSet.add(printMediaSize);
            //textPrintAttributeSet.add(printQuality);
            for (int i = 0; i < printServices.length; i++) {
                printServicesVector.addElement(printServices[i].getName());
            }

            // javax.swing.JComboBox comboBoxPrintServices = new javax.swing.JComboBox(printServicesVector);
            java.lang.Object selectedPrinter = javax.swing.JOptionPane.showInputDialog(new java.awt.Frame(), "Select Default Receipt Printer", "Setting Default Receipt Printer", javax.swing.JOptionPane.OK_CANCEL_OPTION, new javax.swing.ImageIcon(getClass().getResource("/print.gif")), printServicesVector.toArray(), printServicesVector.toArray()[0]);
            try {
                int x = 0;
                java.sql.PreparedStatement pstmtR = connectDB.prepareStatement("select count(user_name) from cash_point_properties where user_name = current_user");
                java.sql.ResultSet rsetR = pstmtR.executeQuery();
                while (rsetR.next()) {
                    x = rsetR.getInt(1);
                }

                if (System.getProperty("cashpoint") == null) {
                    System.setProperty("cashpoint", "C03");
                }

                if (x == 0) {
                    java.sql.PreparedStatement pstmtD = connectDB.prepareStatement("insert into cash_point_properties (property_id, cash_point, receipt_printer)  values(?,?,?)");
                    pstmtD.setString(1, selectedPrinter.toString().toUpperCase() + System.getProperty("cashpoint").toUpperCase());
                    pstmtD.setString(2, System.getProperty("cashpoint"));
                    pstmtD.setString(3, selectedPrinter.toString());
                    pstmtD.execute();
                } else {
                    java.sql.PreparedStatement pstmtD = connectDB.prepareStatement("update cash_point_properties set receipt_printer = ? where user_name = current_user");
                    pstmtD.setString(1, selectedPrinter.toString());
                    pstmtD.execute();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), ex.getMessage());
                Logger.getLogger(HospitalMain.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (selectedPrinter != null) {
                System.out.println("Selected printer : [" + selectedPrinter + "]");
                System.setProperty("receipt_printer", selectedPrinter.toString());
                appProp.setProperty("receipt_printer", selectedPrinter.toString());
                //  storePreferences();

            }
            stop();
            destroy();
        }
    }

    private class GetAvailableInvoicesPrintServices extends java.lang.Thread {

        public void GetAvailableInvoicesPrintServices() {
        }

        public void run() {
            javax.print.DocFlavor textFileDocFlavor = javax.print.DocFlavor.INPUT_STREAM.AUTOSENSE;
            javax.print.attribute.PrintRequestAttributeSet textPrintAttributeSet = new javax.print.attribute.HashPrintRequestAttributeSet();

            java.util.Vector printServicesVector = new java.util.Vector(1, 1);

            javax.print.PrintService printServices[] = javax.print.PrintServiceLookup.lookupPrintServices(textFileDocFlavor, textPrintAttributeSet);
            //            javax.print.attribute.standard.MediaSize printMediaSize = new javax.print.attribute.standard.MediaSize(java.lang.Integer.parseInt(System.getProperty("invoice_textpagesize_x")), java.lang.Integer.parseInt(System.getProperty("invoice_textpagesize_y")), javax.print.attribute.Size2DSyntax.MM);
            javax.print.attribute.standard.PrintQuality printQuality = javax.print.attribute.standard.PrintQuality.DRAFT;
            //      textPrintAttributeSet.add(printMediaSize);
            //textPrintAttributeSet.add(printQuality);
            for (int i = 0; i < printServices.length; i++) {
                printServicesVector.addElement(printServices[i].getName());
            }

            // javax.swing.JComboBox comboBoxPrintServices = new javax.swing.JComboBox(printServicesVector);
            java.lang.Object selectedPrinter = javax.swing.JOptionPane.showInputDialog(new java.awt.Frame(), "Select Default Receipt Printer", "Setting Default Receipt Printer", javax.swing.JOptionPane.OK_CANCEL_OPTION, new javax.swing.ImageIcon(getClass().getResource("/print.gif")), printServicesVector.toArray(), printServicesVector.toArray()[0]);

            if (selectedPrinter != null) {
                System.out.println("Selected printer : [" + selectedPrinter + "]");
                System.setProperty("invoices_printer", selectedPrinter.toString());
                appProp.setProperty("invoices_printer", selectedPrinter.toString());
                //  storePreferences();
                //  this.destroy();
            }
            stop();
            destroy();
        }
    }

    private class LoadComboTaskPanel extends java.lang.Thread {

        public void LoadComboTaskPanel() {
        }

        public void run() {
            getMainClass().setCursor(java.awt.Cursor.WAIT_CURSOR);
            com.afrisoftech.hospital.ComboTasksIntfr comp = new com.afrisoftech.hospital.ComboTasksIntfr(connectDB, pConnDB, getMainClass());
            saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            if (patientregstmnit.isEnabled() || patientregnummnit.isEnabled()) {
                comp.registrationButton.doClick();
            }
            try {
                comp.setSelected(true);
            } catch (java.beans.PropertyVetoException pvt) {
            }
            getMainClass().setCursor(java.awt.Cursor.DEFAULT_CURSOR);
            stop();
            destroy();
        }
    }

    private class LoadComboTaskPanelfp extends java.lang.Thread {

        public void LoadComboTaskPanelfp() {
        }

        public void run() {
            getMainClass().setCursor(java.awt.Cursor.WAIT_CURSOR);
            com.afrisoftech.hospital.FpComboTasksIntfr comp = new com.afrisoftech.hospital.FpComboTasksIntfr(connectDB, pConnDB, getMainClass());
            saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            if (fpregistermnit.isEnabled()) {
                comp.registrationButton.doClick();
            }
            try {
                comp.setSelected(true);
            } catch (java.beans.PropertyVetoException pvt) {
            }
            getMainClass().setCursor(java.awt.Cursor.DEFAULT_CURSOR);
            stop();
            destroy();
        }
    }

    private class LoadIpTaskPanel extends java.lang.Thread {

        public void LoadIpTaskPanel() {
        }

        public void run() {
            getMainClass().setCursor(java.awt.Cursor.WAIT_CURSOR);
            com.afrisoftech.hospital.InpatientTasksIntfr comp = new com.afrisoftech.hospital.InpatientTasksIntfr(connectDB, pConnDB, getMainClass());
            saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            /*
             * if(patientregstmnit.isEnabled() || patientregnummnit.isEnabled()){
             * comp.registrationButton.doClick(); }
             */
            try {
                comp.setSelected(true);
            } catch (java.beans.PropertyVetoException pvt) {
            }
            getMainClass().setCursor(java.awt.Cursor.DEFAULT_CURSOR);
            stop();
            destroy();
        }
    }

    private class LoadCreditorsTaskPanel extends java.lang.Thread {

        public void LoadCreditorsTaskPanel() {
        }

        public void run() {
            getMainClass().setCursor(java.awt.Cursor.WAIT_CURSOR);
            com.afrisoftech.accounting.CreditorsTasksIntfr comp = new com.afrisoftech.accounting.CreditorsTasksIntfr(connectDB, pConnDB, getMainClass());
            saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            //   comp.registrationButton.doClick();
            try {
                comp.setSelected(true);
            } catch (java.beans.PropertyVetoException pvt) {
            }
            getMainClass().setCursor(java.awt.Cursor.DEFAULT_CURSOR);
            stop();
            destroy();
        }
    }

    private class CashBookTaskPanel extends java.lang.Thread {

        public void CashBookTaskPanel() {
        }

        public void run() {
            getMainClass().setCursor(java.awt.Cursor.WAIT_CURSOR);
            com.afrisoftech.accounting.CashBookTasksIntfr comp = new com.afrisoftech.accounting.CashBookTasksIntfr(connectDB, pConnDB, getMainClass());
            saccopn.add(comp, javax.swing.JLayeredPane.DEFAULT_LAYER);
            //   comp.registrationButton.doClick();
            try {
                comp.setSelected(true);
            } catch (java.beans.PropertyVetoException pvt) {
            }
            getMainClass().setCursor(java.awt.Cursor.DEFAULT_CURSOR);
            stop();
            destroy();
        }
    }

    /**
     *
     * @return
     */
    public static java.util.Date getServerCurrentDate() {

        java.util.Date serverCurrentDate = new java.util.Date();
        try {
            java.sql.PreparedStatement datePstmt = connectDB.prepareStatement("SELECT current_date");

            java.sql.ResultSet dateRset = datePstmt.executeQuery();

            while (dateRset.next()) {
                serverCurrentDate.setTime(dateRset.getDate(1).getTime());
            }

        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
        }
        return serverCurrentDate;

    }

    /**
     *
     * @return
     */
    public static java.util.Date getCurrentBeginDate() {

        java.util.Date serverCurrentDate = new java.util.Date();
        try {
            java.sql.PreparedStatement datePstmt = connectDB.prepareStatement("SELECT current_begin_date FROM accounting_dates");

            java.sql.ResultSet dateRset = datePstmt.executeQuery();

            while (dateRset.next()) {
                serverCurrentDate.setTime(dateRset.getDate(1).getTime());
            }

        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
        }
        return serverCurrentDate;

    }

    /**
     *
     * @return
     */
    public static java.util.Date getCurrentEndDate() {

        java.util.Date serverCurrentDate = new java.util.Date();
        try {
            java.sql.PreparedStatement datePstmt = connectDB.prepareStatement("SELECT current_end_date FROM accounting_dates");

            java.sql.ResultSet dateRset = datePstmt.executeQuery();

            while (dateRset.next()) {
                serverCurrentDate.setTime(dateRset.getDate(1).getTime());
            }

        } catch (java.sql.SQLException sqlEx) {
            sqlEx.printStackTrace();
        }
        return serverCurrentDate;

    }

    private class ViewRequisitions extends java.lang.Thread {

        //super();
        com.afrisoftech.hospinventory.Items2OrderIntfr viewOrders = null;

        public void ViewRequisitions() {
        }

        public void run() {

            while (viewRequisitions) {

                if (checkReminderTarget("reorder_items")) {
                    /*
                     * viewOrders = new
                     * com.afrisoftech.hospinventory.Items2OrderIntfr(connectDB,pConnDB);
                     * viewOrders.jRadioButton1.setSelected(true);
                     * viewOrders.jCheckBox1.doClick();
                     * viewOrders.jComboBox1.setSelectedItem("Pharmacy");
                     * saccopn.add(viewOrders,
                     * javax.swing.JLayeredPane.DEFAULT_LAYER);
                     *
                     * try { viewOrders.setSelected(true); }
                     * catch(java.beans.PropertyVetoException pvt){}
                     */
                }

                try {

                    Thread.currentThread().sleep(java.lang.Integer.parseInt(System.getProperty("message_recycle_delay", "20000000")));
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }

            }

        }
    }

    /**
     *
     * @param reportName
     * @return
     */
    public boolean checkReminderTarget(java.lang.String reportName) {

        boolean viewReminder = false;

        java.sql.PreparedStatement pstmt;

        try {

            pstmt = connectDB.prepareStatement("SELECT reminder_target, current_user FROM reminders_target WHERE reminder_description = ?");

            pstmt.setString(1, reportName);

            java.sql.ResultSet rset = pstmt.executeQuery();

            while (rset.next()) {

                java.lang.Object[] listSetTest = (java.lang.Object[]) rset.getArray(1).getArray();

                for (int i = 0; i < listSetTest.length; i++) {

                    if (listSetTest[i].toString().equalsIgnoreCase(rset.getObject(2).toString())) {

                        viewReminder = true;

                    }

                }

            }

        } catch (SQLException ex) {

            ex.printStackTrace();

        }

        return viewReminder;

    }

    private class ViewMessages extends java.lang.Thread {

        private boolean viewMessages = true;

        //super();
        public void ViewMessages() {
        }

        public void run() {

            while (viewMessages) {
                java.util.Vector messageVector = checkMessages();
                //    System.out.println("Messages being read .....");
                int msgCount = messageVector.size();
                for (int i = 0; i < messageVector.size(); i++) {
                    receivedMessageTxt.setText(messageVector.get(i).toString());

                    try {

                        Thread.currentThread().sleep(300000);//java.lang.Integer.parseInt(System.getProperty("message_recycle_delay", "50000000")));
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }

                }
                try {

                    Thread.currentThread().sleep(300000);//java.lang.Integer.parseInt(System.getProperty("message_snooze_delay", "5000000")));
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }

        }
    }

    /**
     *
     * @return
     */
    public java.util.Vector checkMessages() {

        java.util.Vector messagesVector = new java.util.Vector(1, 1);

        java.sql.PreparedStatement pstmt;

        java.sql.PreparedStatement pstmtMsgRead;

        java.sql.PreparedStatement pstmtMsgArchive;

        try {

            pstmt = connectDB.prepareStatement("SELECT message_sender, message_detail,"
                    + "message_send_date, message_id, message_fetch_count FROM funsoft_messages WHERE message_recipient ilike current_user AND message_status ilike 'Pending'");

            pstmtMsgRead = connectDB.prepareStatement("UPDATE funsoft_messages SET message_fetch_count = message_fetch_count + 1, message_read_date = current_timestamp WHERE message_status ilike 'Pending' AND message_id = ?");

            pstmtMsgArchive = connectDB.prepareStatement("UPDATE funsoft_messages SET message_status = 'ARCHIVED' WHERE message_id = ?");

            java.sql.ResultSet rset = pstmt.executeQuery();

            while (rset.next()) {

                pstmtMsgRead.setString(1, rset.getString(4));

                pstmtMsgArchive.setString(1, rset.getString(4));

                messagesVector.addElement("Message from : [" + rset.getString(1).toUpperCase() + "] -- [" + rset.getString(2) + "]");

                if (rset.getInt(5) <= java.lang.Integer.parseInt(System.getProperty("message_fetch_count", "10"))) {

                    pstmtMsgRead.execute();

                } else {

                    pstmtMsgArchive.execute();

                }
            }
            rset.close();
            pstmtMsgRead.close();

        } catch (SQLException ex) {

            ex.printStackTrace();

        }

        return messagesVector;

    }

    private class SMSReader extends java.lang.Thread {

        public void SMSReader() {
        }

        public void run() {
            while (true) {

                msgShow = new biz.systempartners.claims.ClaimsMsgShowSMS();

                biz.systempartners.claims.SMSAlertDialog smsAlertDialog = new biz.systempartners.claims.SMSAlertDialog(new java.awt.Frame(), true);

                msgShow.ClaimsMsgShowSMS(null, null, null, smsAlertDialog);

                try {
                    Thread.currentThread().sleep(500000);//java.lang.Integer.parseInt(System.getProperty("sms.fetch.snooze.period", "5000")));
                } catch (java.lang.InterruptedException intEx) {
                    intEx.printStackTrace();
                }

            }

        }
    }

    /**
     *
     * @return
     */
    public com.l2fprod.common.swing.JTaskPane createChartsTaskPane() {

        chartsTaskPane = new com.l2fprod.common.swing.JTaskPane();

        java.lang.Object chartsCategories[] = this.getChartCategories();

        for (int i = 0; i < chartsCategories.length; i++) {

            com.l2fprod.common.swing.JTaskPaneGroup newTaskPaneGroup = new com.l2fprod.common.swing.JTaskPaneGroup();

            newTaskPaneGroup.setTitle(chartsCategories[i].toString());

            chartsTaskPane.add(newTaskPaneGroup);

            java.lang.Object chartsDefinitions[] = getChartDefinitions(chartsCategories[i].toString());

            for (int j = 0; j < chartsDefinitions.length; j++) {

                final String reportName = chartsDefinitions[j].toString();

                com.l2fprod.common.swing.JLinkButton newLinkButton = new com.l2fprod.common.swing.JLinkButton(chartsDefinitions[j].toString());

                newLinkButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {

                        newLinkButtonActionPerformed(evt, reportName);
                    }
                });

                newTaskPaneGroup.add(newLinkButton);
            }
        }

        return chartsTaskPane;

    }

    private void newLinkButtonActionPerformed(java.awt.event.ActionEvent evt, String chartDescription) {

        java.lang.String chartDefinitionView = null;

        java.lang.String chartTitle = null;

        java.lang.String xAxis = null;

        java.lang.String yAxis = null;

        java.lang.String chartType = null;

        try {

            java.sql.PreparedStatement pstmtChart = connectDB.prepareStatement("SELECT chart_view, chart_type, "
                    + "chart_header, x_axis, y_axis FROM charts_graphs WHERE chart_description = ?");

            pstmtChart.setString(1, chartDescription);

            java.sql.ResultSet rsetChart = pstmtChart.executeQuery();

            while (rsetChart.next()) {

                chartDefinitionView = rsetChart.getString(1);

                graphicalView.chartTitle = rsetChart.getString(3);

                graphicalView.xAxis = rsetChart.getString(4);

                graphicalView.yAxis = rsetChart.getString(5);

                chartType = rsetChart.getString(2);

                if (chartType.trim().equalsIgnoreCase("bar")) {

                    graphicalView.barChart = true;

                    graphicalView.pieChart = false;

                    graphicalView.xyChart = false;

                } else if (chartType.trim().equalsIgnoreCase("pie")) {

                    graphicalView.barChart = false;

                    graphicalView.pieChart = true;

                    graphicalView.xyChart = false;

                } else {

                    graphicalView.barChart = false;

                    graphicalView.pieChart = false;

                    graphicalView.xyChart = true;
                }

            }

        } catch (java.sql.SQLException sqlEx) {

            sqlEx.printStackTrace();

        }

        //      this.graphicalView.pieChart = true;
        saccopn.removeAll();

        saccopn.validate();

        this.saccopn.add(graphicalView, javax.swing.JLayeredPane.DEFAULT_LAYER);

        selectedTable = chartDefinitionView; //nodeInfo.toString();

        tableColumnsVector = getTableColumns(selectedTable);

        xaxisComboBox.setModel(new javax.swing.DefaultComboBoxModel(tableColumnsVector));

        try {

            this.graphicalView.showChart("SELECT * FROM " + chartDefinitionView, chartTitle, getSelf());

            graphicalView.setSize(saccopn.getSize());

            graphicalView.setSelected(true);

            graphicalView.setVisible(true);

        } catch (java.beans.PropertyVetoException pvt) {
        }

    }

    private java.lang.Object[] getChartCategories() {

        java.util.Vector chartGroupsVector = new java.util.Vector(1, 1);

        try {

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT DISTINCT chart_category FROM charts_graphs ORDER BY chart_category");

            java.sql.ResultSet rset = pstmt.executeQuery();

            while (rset.next()) {

                chartGroupsVector.addElement(rset.getObject(1));

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return chartGroupsVector.toArray();

    }

    private java.lang.Object[] getChartDefinitions(java.lang.String chartGroup) {

        java.util.Vector chartDefinitionsVector = new java.util.Vector(1, 1);

        try {

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT chart_description FROM charts_graphs WHERE chart_category ilike ? ORDER BY chart_description");

            pstmt.setString(1, chartGroup);

            java.sql.ResultSet rset = pstmt.executeQuery();

            while (rset.next()) {

                chartDefinitionsVector.addElement(rset.getObject(1));

            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return chartDefinitionsVector.toArray();

    }

    /**
     *
     */
    public class ManagePOSShifts extends java.lang.Thread {

        /**
         *
         */
        public void ManagePOSShifts() {
        }

        public void run() {

            while (true) {
                java.util.Date shiftDate = null;

                java.util.Date dateNow = java.util.Calendar.getInstance().getTime();

                try {

                    //  java.sql.PreparedStatement pstmtDate = connectDB.prepareStatement("SELECT now()::date");
                    java.sql.PreparedStatement shiftDatePstmt = connectDB.prepareStatement("SELECT shift_no::smallint FROM ac_shifts WHERE start_date < now()::date");

                    java.sql.ResultSet shiftDateRset = shiftDatePstmt.executeQuery();

                    while (shiftDateRset.next()) {

                        java.sql.PreparedStatement closeShifts = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Closed', end_date = now() WHERE status != 'Closed' AND shift_no::smallint = ? ");
                        //java.sql.PreparedStatement closeShifts = connectDB.prepareStatement("UPDATE ac_shifts SET status = 'Closed', end_date = now() WHERE status != 'Closed' AND shift_no::smallint = ? AND (cash_point NOT ILIKE 'accounts%' OR cash_point NOT ILIKE 'pett%')");

                        closeShifts.setInt(1, shiftDateRset.getInt(1));

                        closeShifts.execute();

                        //   System.out.println("closed shifts ...");
                    }

                    shiftDateRset.close();

                    shiftDatePstmt.close();

                } catch (java.sql.SQLException sqe) {

                    sqe.printStackTrace();

                    javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqe.getMessage());

                }

                try {
                    Thread.sleep(15000);
                } catch (java.lang.InterruptedException intE) {
                    intE.printStackTrace();
                }

            }

        }
    }

    private class MobilePayMsgReader extends java.lang.Thread {

        boolean alertShowing = false;

        public void MobilePayMsgReader() {
        }

        public void run() {
            while (true) {
                try {
                    if (checkoutRequestID != null) {
                        String shiftNumber = null;
                        java.sql.PreparedStatement pstmtShiftNo = connectDB.prepareStatement("SELECT shift_no FROM ac_shifts WHERE status = 'Running' and user_name = current_user ORDER BY start_date DESC LIMIT 1");
                        java.sql.ResultSet rsetShiftNo = pstmtShiftNo.executeQuery();
                        while (rsetShiftNo.next()) {
                            shiftNumber = rsetShiftNo.getString(1);
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT DISTINCT '', paid_amount, patient_no, dealer, transaction_no, checkout_request_id, mobile_tx_id, telephone_number, account_no FROM public.mobile_payments WHERE mobilepay_alert = false AND checkout_request_id_paid = ? AND checkout_request_id_paid IS NOT NULL");
////                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT DISTINCT sum(debit), patient_no, dealer, transaction_no, card_no, journal_no, account_no, receipt_no, shift_no, payment_mode FROM ac_cash_collection WHERE mobilepay_alert = false AND checkout_request_id = ? AND patient_no IS NOT NULL AND checkout_request_id IS NOT NULL GROUP BY 2,3,4,5,6,7,8,9,10");
//                    java.sql.PreparedStatement pstmt = connectDB.prepareStatement("SELECT DISTINCT description, debit, patient_no, dealer, transaction_no, card_no, journal_no, account_no FROM ac_cash_collection WHERE mobilepay_alert = false AND checkout_request_id = ? AND patient_no IS NOT NULL AND checkout_request_id IS NOT NULL");

                        pstmt.setString(1, checkoutRequestID);

                        // pstmt.setString(2, checkoutRequestID);
                        java.sql.ResultSet rset = pstmt.executeQuery();
                        while (rset.next()) {
                            mobilePaid = true;
                            ///String receiptNo2 = rset.getString(8);
                            //try {
//                            if (java.awt.SystemTray.isSupported()) {
//                                java.awt.TrayIcon trayIcon = new java.awt.TrayIcon(new javax.swing.ImageIcon(getClass().getResource("/funsoft_logo.gif")).getImage(), "MPESA PAYMENT ALERT! : Funsoft HMIS - Payment FROM - " + rset.getString(3) + ", \n TEL. No.:" + rset.getString(5) + " MPESA TRANSACTION ID :" + rset.getString(4) + " \n for Patient Number : " + rset.getString(2) + ", Amount KES[" + com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rset.getDouble(1)) + "]");
//                                trayIcon.setImageAutoSize(true);
//                                systemTray.add(trayIcon);
//                            } else {
                            int isCashier = 0;
                            java.sql.PreparedStatement pstsmtIsCashier = connectDB.prepareStatement("SELECT count(description) FROm ac_cash_points_setup WHERE description = current_user");
                            java.sql.ResultSet rsetIsCashier = pstsmtIsCashier.executeQuery();
                            while (rsetIsCashier.next()) {
                                isCashier = rsetIsCashier.getInt(1);
                            }
                            if (isCashier > 0 && !alertShowing) {
                                alertShowing = true;
                                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "MPESA PAYMENT ALERT! \n Funsoft HMIS - Payment confirmation FROM - Patient ID/Names : " + patientID + " : " + patientName + ", \n TEL. No.:" + rset.getString("account_no") + "\n MPESA TRANSACTION ID :" + rset.getString("mobile_tx_id") + " \n for Patient Number : " + patientID + ", \n Amount KES[" + com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rset.getDouble("paid_amount")) + "] \n Please confirm the information on display and press \"OK\" to print receipt.");
//                            }
                                java.awt.Toolkit.getDefaultToolkit().beep();
                                mobileTelephone = rset.getString("account_no");
                                mobileTxID = rset.getString("mobile_tx_id");
//                                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("UPDATE ac_cash_collection SET mobilepay_alert = true, user_name = current_user, shift_no = ?, paybill_no = ? WHERE transaction_no = ?");
//                                pstmt1.setString(1, shiftNumber);
//                                pstmt1.setString(2, com.afrisoftech.hospital.HospitalMain.payBillNumber);
//                                pstmt1.setString(3, rset.getString(4));
//                                pstmt1.executeUpdate();
//                                pstmt1.close();
                                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("UPDATE mobile_payments SET mobilepay_alert = true WHERE checkout_request_id_paid = ?");
                                pstmt2.setString(1, checkoutRequestID);
                                pstmt2.executeUpdate();

                                pstmt2.close();

                                if (mobileTxType == "OPD") {
                                    com.afrisoftech.accounting.GovBillPaymentsIntfr.generateReceiptBtn.doClick();
                                } else if (mobileTxType == "IPD") {
                                    com.afrisoftech.accounting.InpatientRecpIntfr.jButton1111.doClick();
                                }
                                //                                // We print the receipt from mobile payment at this stage
//                                String rct = null;
//                                java.sql.Statement ps112 = connectDB.createStatement();
//                                java.sql.ResultSet rst112 = ps112.executeQuery("select distinct rct_format from receipt_pref");
//                                while (rst112.next()) {
//                                    rct = rst112.getObject(1).toString();
//                                }
//                                if (rct.equalsIgnoreCase("Pdf")) {
//                                    com.afrisoftech.reports.ReceiptsPdf policy = new com.afrisoftech.reports.ReceiptsPdf();
//                                    policy.ReceiptsPdf(connectDB, receiptNo2);
//                                    discreetReceipt = false;
//                                } else {
//                                    com.afrisoftech.txtreports.GokReceiptsTxt policy = new com.afrisoftech.txtreports.GokReceiptsTxt(connectDB, rset.getString(3), com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rset.getDouble(1)), receiptNo2, rset.getString(10).toString(), com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(rset.getDouble(1)), "0.00", rset.getString(9), "");
//                                    discreetReceipt = false;
//                                    //  com.afrisoftech.txtreports.GokReceiptsTxt policy = new com.afrisoftech.txtreports.GokReceiptsTxt(connectDB, patientNameTxt.getText(), billAmountTxt.getText(), receiptNo2, this.paymentModeCmbx.getSelectedItem().toString(), amountPaidTxt.getText(), "0.00", shiftNoTxt.getText(), unitNumberTxt.getText());
//
//                                }
//                            } catch (java.awt.AWTException awte) {
//                                //awte.printStackTrace();
//                                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), awte.getMessage());
//                            }

                            }
                        }
                        alertShowing = false;
                        rset.close();
                        pstmt.close();
                    }

                } catch (java.sql.SQLException sqlEx) {
                    sqlEx.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), sqlEx.getMessage());
                }
                try {
                    Thread.currentThread().sleep(5000); //java.lang.Integer.parseInt(System.getProperty("sms.fetch.snooze.period", "5000")));
                } catch (java.lang.InterruptedException intEx) {
                    intEx.printStackTrace();
                }

            }

        }
    }

    private void getCashPointProperties() {
        try {

            java.sql.PreparedStatement pstmtCashPoint = connectDB.prepareStatement("select cash_point, receipt_printer from cash_point_properties");

            java.sql.ResultSet rsetCashPoint = pstmtCashPoint.executeQuery();

            while (rsetCashPoint.next()) {
                System.setProperty("cash_point", rsetCashPoint.getString(1));
                System.setProperty("receipt_printer", rsetCashPoint.getString(2));
            }

        } catch (SQLException ex) {

            ex.printStackTrace();
            // javax.swing.JOptionPane.showMessageDialog(this, ex.printStackTrace());
            // Logger.getLogger(HospitalMain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    class GarbageCollector extends Thread {

        public void run() {

            while (true) {
                System.gc();
                System.out.println("Running GC ...");
                try {
                    Thread.currentThread().sleep(60000);
                } catch (java.lang.InterruptedException intEx) {
                    intEx.printStackTrace();
                }//Thread.currentThread().
            }
        }
    }

    public void initialiseSpellChecker() {
        //FILE LOCATION OF DICTIONARY
        String userDictionaryPath = "/dictionary/";

        //SET DICTIONARY PROVIDER FROM DICTIONARY PATH
        SpellChecker.setUserDictionaryProvider(new FileUserDictionary(userDictionaryPath));

        //REGISTER DICTIONARY
        SpellChecker.registerDictionaries(getClass().getResource(userDictionaryPath), "en");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AdmisDischargesmnit;
    private javax.swing.JMenuItem AieRepmnit;
    private javax.swing.JMenuItem Aiemnit;
    private javax.swing.JMenuItem Ambreqmnit;
    private javax.swing.JMenuItem Ammendstaffregmnit;
    private javax.swing.JMenuItem Anatbmnit;
    private javax.swing.JMenuItem Annualtbmnit;
    private javax.swing.JMenuItem Anualtbmnit;
    private javax.swing.JMenuItem Approvemnit;
    private javax.swing.JMenuItem AssetAlmnit;
    private javax.swing.JMenuItem AttendancePerDeptmnit;
    private javax.swing.JMenuItem Attendancesummnit;
    public javax.swing.JMenuItem Bankingmnit;
    private javax.swing.JMenu Bankrepmn;
    private javax.swing.JMenuItem BedOccmnit;
    private javax.swing.JMenuItem Bedchargesmnit;
    private javax.swing.JMenuItem Bedtrnsfrmnit;
    private javax.swing.JMenuItem Billinginvoicesmnit;
    private javax.swing.JMenuItem BirthWeightmnit;
    private javax.swing.JMenuItem Bookingsmnit;
    public javax.swing.JMenuItem CashBookMangmnit;
    private javax.swing.JMenu CashBookmn;
    private javax.swing.JMenuItem CashSalesbrdmnit;
    private javax.swing.JMenuItem Cashanalysisdeptmnit;
    private javax.swing.JMenuItem Cashanalysismnit;
    private javax.swing.JMenu CashierRepmn;
    private javax.swing.JMenuItem Cashsalesmnit;
    private javax.swing.JMenuItem Categorysetupmnit;
    private javax.swing.JMenu Clinical;
    private javax.swing.JMenuItem Clinicalexamnit;
    private javax.swing.JMenuItem ConfirmedBookingsmnit;
    private javax.swing.JMenuItem Consentmnit;
    private javax.swing.JMenuItem CorporateTaxmnit;
    private javax.swing.JMenuItem Corporatemnit;
    private javax.swing.JMenuItem CrdVouchermnit;
    private javax.swing.JMenuItem CreditnoteSchmnit;
    private javax.swing.JMenuItem Creditorsmnit;
    private javax.swing.JMenuItem Dailyrevmnit;
    private javax.swing.JMenuItem DebtStatementmnit;
    private javax.swing.JMenuItem DebtStatementtxtmnit;
    private javax.swing.JMenuItem DebtStattexlmnit;
    private javax.swing.JMenuItem DebtStatttxtmnit;
    private javax.swing.JMenuItem Debtorscrnotemnit;
    private javax.swing.JMenu Dental;
    private javax.swing.JMenuItem Dentalmnit;
    private javax.swing.JMenuItem Deprecatesmnit;
    private javax.swing.JMenuItem Deprecmnit;
    private javax.swing.JMenuItem Detinvbyinvmnit;
    private javax.swing.JMenuItem DiagnosisSumPerSexmnit;
    private javax.swing.JMenuItem Diagnosisanalysismnit;
    private javax.swing.JMenuItem Diagnosisbydocsummnit;
    private javax.swing.JMenuItem Diagnosissummnit;
    private javax.swing.JMenuItem DispConfSummnit;
    private javax.swing.JMenuItem DispConfirmationmnit;
    private javax.swing.JMenuItem DispatchSummnit;
    private javax.swing.JMenuItem Dispdelnotemnit;
    private javax.swing.JMenu Doctorslistmn;
    private javax.swing.JMenuItem DtlTrialBalancemnit;
    private javax.swing.JMenuItem Endoscopymnit;
    private javax.swing.JMenuItem FPmethodsmnit;
    private javax.swing.JMenu FinancialPeriodmn;
    private javax.swing.JMenu Financialmn;
    private javax.swing.JMenuItem IPCreditmnit;
    private javax.swing.JMenuItem InPatInvCashmnit;
    private javax.swing.JMenuItem InPatsInvTotalmnit;
    private javax.swing.JMenuItem Infomnit;
    private javax.swing.JMenuItem InpatientAnalysismnit;
    private javax.swing.JMenu Interiminvoicemn;
    private javax.swing.JMenuItem IpAnalysismnit;
    private javax.swing.JMenuItem Iperdeptmnit;
    private javax.swing.JMenuItem Ipmobiditymatalitymnit;
    private javax.swing.JMenuItem LabHierachymnit;
    private javax.swing.JMenu Labreportsmn;
    private javax.swing.JMenu LegalDocumentmn;
    public javax.swing.JMenuItem LinkGrn1mnit;
    public javax.swing.JMenuItem LinkGrn2mnit;
    public javax.swing.JMenuItem LinkGrn3mnit;
    public javax.swing.JMenuItem LinkGrnmnit;
    private javax.swing.JMenuItem Loanregmnit;
    public javax.swing.JMenuItem Lumpotherprmnit;
    private javax.swing.JMenu ManagementReportmn;
    private javax.swing.JMenuItem Mergedocaccmnit;
    private javax.swing.JMenuItem MohCashanalysismnit;
    private javax.swing.JMenuItem MonthlyDiagAnalysismnit;
    private javax.swing.JMenuItem MonthlyrevCompmnit;
    private javax.swing.JMenuItem Monthlyrevmnit;
    private javax.swing.JMenuItem MonthrevCompmnit;
    private javax.swing.JMenuItem Monthrevmnit;
    private javax.swing.JMenuItem Opcreditmnit;
    private javax.swing.JMenu Operatingchamn;
    private javax.swing.JMenuItem Operatingparamertersmnit;
    private javax.swing.JMenuItem Outpatientinvoicetmnit;
    private javax.swing.JMenuItem Outpatientinvoicetxtmnit;
    public static javax.swing.JInternalFrame PDFViewerIntfr;
    private javax.swing.JMenu PatientRecordsmn;
    private javax.swing.JMenuItem Payerallocdetmnit;
    private javax.swing.JMenuItem Paymentsmnit;
    private javax.swing.JMenuItem Perdebtormnit;
    private javax.swing.JMenuItem Perschememnit;
    private javax.swing.JMenu Pregistermn;
    private javax.swing.JMenuItem Provisionssummnit;
    private javax.swing.JMenu Provisiontransmn;
    private javax.swing.JMenuItem QuartelyRevCompmnit;
    private javax.swing.JMenuItem Quarterrevmnit;
    private javax.swing.JLabel QueryIcon;
    private javax.swing.JLabel QueryTipLabel;
    private javax.swing.JMenu Receiptmn;
    public javax.swing.JMenuItem Receiptsmnit;
    private javax.swing.JMenu RevRepotmd;
    private javax.swing.JMenuItem Revmnit;
    private javax.swing.JMenu Salesmn;
    private javax.swing.JMenuItem Salesmnit;
    private javax.swing.JMenuItem SchemeAllocmnit;
    private javax.swing.JMenu SchemeDetailsmn;
    private javax.swing.JMenu SchemeInvoicinmn;
    private javax.swing.JMenuItem Schememnit;
    private javax.swing.JMenuItem Scmammnit;
    private javax.swing.JMenuItem ScmsalesSummnit;
    private javax.swing.JMenu Statementsmn;
    private javax.swing.JMenuItem SubActivimnit;
    private javax.swing.JMenuItem Summarymnit;
    private javax.swing.JMenu Taxesmn;
    private javax.swing.JMenuItem TheatreChargesmnit;
    private javax.swing.JMenuItem Transsummnit;
    private javax.swing.JMenu Trialbalancemn;
    private javax.swing.JMenuItem Unreconcitemsmnit;
    private javax.swing.JMenuItem VisitIdmnit;
    private javax.swing.JMenu Voucherdetailsmn;
    private javax.swing.JMenu Wardsmn;
    private javax.swing.JMenuItem Writeoffscrtmnit;
    private javax.swing.JMenuItem Writeoffsmnit;
    private javax.swing.JMenuItem XrayResultsmnit;
    private javax.swing.JMenuItem Yearlyhlpsetsmnit;
    private javax.swing.JMenuItem Yearyrevmnit;
    private javax.swing.JMenuItem aboutmn;
    private javax.swing.JMenuItem accabtexpiremnit;
    private javax.swing.JMenuItem accessControlMnit;
    private javax.swing.JMenuItem accountsmnit1;
    private javax.swing.JMenuItem accountstransmnit;
    private javax.swing.JMenuItem accrualsmnit;
    private javax.swing.JMenuItem accstatusmnit;
    private javax.swing.JMenuItem acctdetmnit;
    private javax.swing.JLabel activeDatabase;
    private javax.swing.JLabel activePane;
    private javax.swing.JMenuItem activeReportsmnit;
    private javax.swing.JMenuItem adjpricesmnit;
    private javax.swing.JMenuItem adjustinvmnit;
    private javax.swing.JMenuItem admissbywardmnit;
    private javax.swing.JMenuItem admissiomnit;
    private javax.swing.JMenuItem admissmnit;
    private javax.swing.JMenuItem admmssionntmnit;
    private javax.swing.JMenuItem admrqmnit;
    private javax.swing.JMenuItem ageingbycatmnit;
    private javax.swing.JMenuItem ageingbysuppmnit;
    private javax.swing.JMenu ageingmn;
    private javax.swing.JMenu aiemn;
    private javax.swing.JMenuItem allergiesmnit;
    private javax.swing.JMenuItem alloConfrmmnit;
    private javax.swing.JMenuItem allocatewtocrtmnit;
    private javax.swing.JMenu allocation;
    private javax.swing.JMenuItem allocation1mnit;
    private javax.swing.JMenuItem allocation2mnit;
    private javax.swing.JMenuItem allocation3mnit;
    private javax.swing.JMenuItem allocation4mnit;
    private javax.swing.JMenuItem allocation5mnit;
    private javax.swing.JMenu allocationmn;
    private javax.swing.JMenuItem allocationmnitd;
    private javax.swing.JMenuItem allocationrepmnit;
    private javax.swing.JMenuItem allocbypayermnit;
    private javax.swing.JMenuItem allocchqmnit;
    private javax.swing.JMenuItem allocsummnit;
    private javax.swing.JMenuItem allocsummperdebtmnit;
    private javax.swing.JMenuItem allocsumnit;
    private javax.swing.JMenuItem allreceiptsmnit;
    private javax.swing.JMenuItem allreceiptsnomnit;
    private javax.swing.JMenuItem alteredreceiptsmnit;
    private javax.swing.JMenuItem analyseMaternityBillsmnit;
    private javax.swing.JMenuItem annualageingmnit;
    private javax.swing.JMenuItem annualpayersummnit;
    private javax.swing.JMenuItem anteNataRoutineExamsmnit;
    private javax.swing.JMenuItem anteNatalCaremnit;
    private javax.swing.JMenuItem anteNatalTestsmnit;
    private javax.swing.JMenuItem anualPayeragmnit;
    private javax.swing.JMenuItem anualplmnit;
    public javax.swing.JMenuItem appdocinvmnit;
    private javax.swing.JMenuItem approvedImprestmnit;
    public static javax.swing.JMenuItem approvedVouchersmnit;
    private javax.swing.JMenuItem approvedagentsmnit;
    private javax.swing.JMenu approvedinvmn;
    private javax.swing.JMenuItem approveincidenceMenuItemnit;
    private javax.swing.JMenuItem approveinvmnit;
    private javax.swing.JMenuItem approvinvmnit;
    private javax.swing.JRadioButtonMenuItem aquamnit1;
    private javax.swing.JMenuItem aslocmnit;
    private javax.swing.JMenuItem asrepmnit;
    private javax.swing.JMenuItem assetmgtmnit1;
    private javax.swing.JMenuItem astregmnit;
    private javax.swing.JMenuItem attdencebydptmnit;
    private javax.swing.JMenuItem attdperscmdetmnit;
    private javax.swing.JMenuItem attendancepaidupmnit;
    private javax.swing.JMenuItem attsheetmnit;
    private javax.swing.JMenuItem auditAccountsmnit;
    private javax.swing.JMenuItem auditTrailmnit;
    private javax.swing.JMenu auditingmn;
    private javax.swing.JMenuItem autolimitsmnit;
    private javax.swing.JMenuItem automatedChargesmnit;
    private javax.swing.JMenuItem automatedwoffsmnit;
    private javax.swing.JButton backupDB;
    private javax.swing.JMenu balancestmn;
    public javax.swing.JMenuItem bankingmnit;
    private javax.swing.JMenuItem bankingsmnit;
    private javax.swing.JMenuItem bankreccmnit;
    private javax.swing.JMenuItem bankrecdiscrpmnit;
    public javax.swing.JMenuItem bankreconcmnit;
    private javax.swing.JMenuItem banksetmnit;
    private javax.swing.JMenuItem banksmnit;
    private javax.swing.JMenuItem banksummnit;
    private javax.swing.JRadioButton barChart;
    private javax.swing.JRadioButton barChart1;
    private javax.swing.JRadioButtonMenuItem bbjmnit11;
    private javax.swing.JMenuItem bedbrekgsmnit;
    private javax.swing.JMenu bedmagmentmn;
    private javax.swing.JMenuItem bedmangtmnit;
    private javax.swing.JMenuItem bedoccupancymnit;
    private javax.swing.JMenuItem bedsetupmnit;
    private javax.swing.JMenuItem bedsoremn;
    private javax.swing.JRadioButtonMenuItem beosmnit1;
    public static javax.swing.JMenuItem billadjustmentmnit;
    private javax.swing.JMenuItem billingAuditmnit;
    private javax.swing.JMenuItem billingStationAllocationmnit;
    private javax.swing.JMenu billingmn;
    private javax.swing.JMenuItem billsummnit;
    private javax.swing.JMenuItem bkupmnit;
    private javax.swing.JMenuItem bloodGrpmnit;
    private javax.swing.JMenuItem bloodRhesusmnit;
    private javax.swing.JMenuItem bloodpackmnit;
    public javax.swing.JMenuItem bnkchargesmnit;
    private javax.swing.JMenuItem boardMembersmnit;
    private javax.swing.JMenuItem bodycollectionmnit;
    private javax.swing.JMenuItem bookingschsmnit;
    private javax.swing.JMenuItem bookingsconfchmnit;
    private javax.swing.JMenuItem brancmnit;
    private javax.swing.JButton brwsrBttn;
    private javax.swing.JMenuItem bsmvmnit;
    private javax.swing.JMenuItem bthregistermnit;
    private javax.swing.JMenuItem budgetamendmnit;
    private javax.swing.JMenuItem budgetdeptmnit;
    private javax.swing.JMenu budgetingmn;
    private javax.swing.JMenu budgetmn;
    private javax.swing.JMenuItem budgetsectmint;
    private javax.swing.JMenuItem budgettotalmnit;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JMenuItem cafeteriaDebtorsStatementmnit;
    private javax.swing.JMenuItem cafeteriaSalesmnit;
    private javax.swing.JButton calcBttn;
    private javax.swing.JButton cancelQuery;
    private javax.swing.JButton cancelQuery1;
    private javax.swing.JMenuItem cancelledchqmnit;
    private javax.swing.JMenuItem cashBkmnit;
    private javax.swing.JMenuItem cashBokmnit;
    private javax.swing.JMenuItem cashBookAuditmnit;
    private javax.swing.JMenuItem cashBookmnit;
    private javax.swing.JMenuItem cashSalesReportmnit;
    private javax.swing.JMenuItem cashUnbalancedOpmnit;
    private javax.swing.JMenu cashbkmn;
    private javax.swing.JMenuItem cashbookReportsmnit;
    private javax.swing.JMenuItem cashflowoptmnit;
    private javax.swing.JMenuItem cashpointmnit;
    private javax.swing.JMenuItem casualtymnit;
    private javax.swing.JMenuItem cbookbalancesmnit;
    private javax.swing.JMenuItem certficatemnit;
    private javax.swing.JMenuItem changeBackgoundImagemnit1;
    private javax.swing.JMenuItem changeInvPayermnit;
    private javax.swing.JMenuItem changeUserPasswordmnit;
    private javax.swing.JMenuItem changeiplimitmnit;
    private javax.swing.JMenuItem changepayermnit;
    private javax.swing.JMenuItem changepaymodesmnit;
    private javax.swing.ButtonGroup chartButtonGroup;
    private javax.swing.JComboBox chartCategoryCmbx;
    public javax.swing.JDialog chartDdefinitionDialog;
    private javax.swing.JMenuItem chartDefinitionMnit;
    private javax.swing.JComboBox chartEditCmbx;
    private javax.swing.JLabel chartNameLbl;
    private javax.swing.JTextField chartNameTxt;
    private javax.swing.JLabel chartTitleLbl;
    private javax.swing.JTextField chartTitleTxt;
    private javax.swing.JComboBox chartTypeCmbx;
    private javax.swing.JLabel chartTypeLbl;
    private javax.swing.JMenuItem chartaccountsmnit;
    private javax.swing.JMenuItem chekinmnit;
    private javax.swing.JMenuItem cheqrequmnit;
    private javax.swing.JMenuItem chgintrmnit;
    private javax.swing.JMenuItem chgpasswdmnit1;
    private javax.swing.JMenuItem childDeliveryMethodsmnit;
    private javax.swing.JMenuItem childDeliveryStatusmnit;
    private javax.swing.JMenuItem childDiseasesmnit;
    private javax.swing.JMenu claimsmn;
    private javax.swing.JButton clearQuery;
    private javax.swing.JMenuItem clerkingServicesmnit;
    private javax.swing.JMenuItem clinicBookingsmnit;
    private javax.swing.JMenuItem clinicalhistmnit;
    private javax.swing.JMenuItem clinicsSpecialtiesmnit;
    private javax.swing.JMenu clinicsapp;
    private javax.swing.JMenu clinicsbookings;
    private javax.swing.JMenuItem clinicsmnit;
    private javax.swing.JButton closeDialog;
    private javax.swing.JButton closeDialog1;
    private javax.swing.JButton closeDialog2;
    private javax.swing.JButton closeShift;
    private javax.swing.JMenuItem closedocaccmnit;
    private javax.swing.JMenuItem closedschemesmnit;
    private javax.swing.JMenuItem closeshiftmnit;
    private javax.swing.JMenuItem closesupplaccmnit;
    private javax.swing.JScrollPane columnSelectorScrollPane;
    private javax.swing.JScrollPane columnSelectorScrollPane1;
    private javax.swing.JTable columnSelectorTable;
    private javax.swing.JTable columnSelectorTable1;
    private javax.swing.JMenuItem comfbankingmnit;
    private javax.swing.JPanel commBroadcastPanel;
    private javax.swing.JPanel commPanel;
    private javax.swing.JMenuItem commitmentmnit;
    private javax.swing.JMenuItem communityHealthRegistermnit;
    private javax.swing.JMenu communityHealthmn;
    private javax.swing.JButton compactDB;
    private javax.swing.JMenuItem compdebtorsbynamemnit;
    private javax.swing.JMenuItem compdebtorsmnit;
    private javax.swing.JMenuItem compdebtorstxtmnit;
    private javax.swing.JMenuItem compdebtortxtsmnit;
    private javax.swing.JMenuItem conditionfoundmnit;
    private javax.swing.JMenuItem confdispperscmnit;
    private javax.swing.JMenuItem confdispsummnit;
    private javax.swing.JLabel connectionLabel;
    public javax.swing.JMenuItem consultantspmnit;
    private javax.swing.JMenuItem consultationmnit;
    private javax.swing.JMenuItem consumablesmnit;
    private javax.swing.JMenuItem contraceptmnit;
    private javax.swing.JMenu countryditrmn;
    private javax.swing.JMenuItem countrymnit;
    private javax.swing.JMenuItem cpactdatamnit;
    private javax.swing.JMenuItem crdstmtmnit;
    private javax.swing.JMenuItem crdtstmtmnit;
    private javax.swing.JMenuItem creditSalesDepartmentDetailedReportsmnit;
    private javax.swing.JMenuItem creditSalesDepartmentReportsmnit;
    private javax.swing.JMenuItem creditSalesDetailedmnit;
    private javax.swing.JMenuItem creditSalesReportmnit;
    public javax.swing.JMenuItem creditallocmnit;
    private javax.swing.JMenuItem creditcardsmnit;
    private javax.swing.JMenuItem creditnotesmnit;
    public javax.swing.JMenuItem creditorOperationsmnit;
    private javax.swing.JMenuItem creditorsLedgermnit;
    private javax.swing.JMenuItem creditorsView;
    private javax.swing.JMenuItem creditorsageingbycatmnit;
    private javax.swing.JMenuItem creditorsinvSummnit;
    private javax.swing.JMenuItem creditorsinvmnit;
    private javax.swing.JMenu creditorsmn;
    private javax.swing.JMenuItem creditorssummarybtn;
    private javax.swing.JMenuItem creditsSummnit;
    private javax.swing.JMenuItem creditsbypayermnit;
    private javax.swing.JMenuItem credittransfmnit;
    private javax.swing.JMenuItem cwcIndicatormnit;
    private javax.swing.JMenuItem cwcRegistermnit;
    private javax.swing.JMenuItem dailyCashReturnsmnit;
    private javax.swing.JMenuItem dailyWorkloadsmnit;
    private javax.swing.JMenuItem dailybedreturnDetailedmnit;
    private javax.swing.JMenuItem dailybedreturnSummarymnit;
    private javax.swing.JMenuItem dailybedreturnmnit;
    private javax.swing.JMenuItem dailybltmnit;
    private javax.swing.JMenuItem dailyrevmnit;
    private javax.swing.JMenuItem dailywardsdischmnit;
    private javax.swing.JMenuItem dailywardstmtmnit;
    private javax.swing.JMenuItem dconsultationmnit;
    private javax.swing.JMenuItem deathnotficationmnit;
    private javax.swing.JMenuItem deathregistermnit;
    private javax.swing.JMenuItem deathsmnit;
    public javax.swing.JMenuItem debitNotemnit;
    private javax.swing.JMenuItem debreceiptsmnit;
    private javax.swing.JMenuItem debtallocsumnit;
    private javax.swing.JMenuItem debtcollsummnit;
    private javax.swing.JMenuItem debtinvoicingmnit;
    private javax.swing.JMenuItem debtorSchemeStatementmnit;
    private javax.swing.JMenuItem debtorTypemnit;
    private javax.swing.JMenuItem debtorinvmnit;
    private javax.swing.JMenuItem debtormnit;
    private javax.swing.JMenuItem debtorsStmtmnit;
    private javax.swing.JMenu debtorsTransactionsmn;
    private javax.swing.JMenuItem debtorsyearlybalmnit;
    private javax.swing.JMenuItem debtosbalmnit;
    private javax.swing.JMenuItem debtrectallocmnit;
    private javax.swing.JMenuItem debtshiftmnit;
    private javax.swing.JMenuItem deductionsmnit;
    private javax.swing.JButton deleteChartBtn;
    private javax.swing.JMenuItem deliveryStatemnit;
    private javax.swing.JMenu dental;
    private javax.swing.JMenuItem dentalReqmnit;
    private javax.swing.JMenuItem dentalresultsmnit;
    private javax.swing.JMenuItem dentregistermnit;
    private javax.swing.JMenuItem departmentalProcurementPlanmnit;
    private javax.swing.JMenuItem departmentalVoteBookmnit;
    private javax.swing.JMenuItem departmentalVoteBookmnit1;
    private javax.swing.JMenuItem departmentalVoteBookmnit2;
    private javax.swing.JMenu departmentalmn;
    private javax.swing.JMenuItem departmentalreportMenuItemnit;
    private javax.swing.JMenuItem departmentmnit;
    private javax.swing.JMenuItem depatmnit;
    private javax.swing.JCheckBoxMenuItem depositsviewmnit;
    private javax.swing.JMenuItem deptincexpmnit;
    private javax.swing.JPanel desktopPane;
    private javax.swing.JMenuItem detailedfinalinvmnit;
    private javax.swing.JMenuItem detailedpatstmtmnit;
    private javax.swing.JMenuItem detailedstmtmnit;
    private javax.swing.JMenuItem detailedstmtsmnit;
    private javax.swing.JMenuItem detdebtorsStmtmnit;
    private javax.swing.JMenuItem detoprevmnit;
    private javax.swing.JMenu detstmtmn;
    private javax.swing.JMenuItem detvouchmnit;
    private javax.swing.JMenuItem diagbydocsmnit;
    private javax.swing.JMenuItem diagnosisperdiesesemnit;
    private javax.swing.JMenu diagnosist;
    private javax.swing.JMenuItem diagsummarymnit;
    private javax.swing.JMenuItem directPaymentsmnit;
    private javax.swing.JMenuItem directbankingmnit;
    private javax.swing.JMenuItem directcashsalesmnit;
    private javax.swing.JMenuItem dischargesmnit;
    private javax.swing.JMenuItem diseasesmnit;
    private javax.swing.JMenuItem dispatchedmn;
    private javax.swing.JMenuItem dispatchmnit;
    private javax.swing.JMenuItem dispatchperpayersummnit;
    private javax.swing.JMenu dispatchschmn;
    private javax.swing.JMenu dispconf;
    private javax.swing.JMenuItem dispconfperpayermnit;
    private javax.swing.JMenuItem dispensingMnit;
    private javax.swing.JMenuItem displistmnit;
    private javax.swing.JMenuItem dispperdebtmnit;
    private javax.swing.JMenuItem dispperscmnit;
    private javax.swing.JMenuItem distinvmnit;
    private javax.swing.JMenuItem districtmnit;
    private javax.swing.JMenuItem divisionalSurrendermnit;
    private javax.swing.JMenuItem divisionalexpendituremnit;
    private javax.swing.JMenu docRequestMn;
    private javax.swing.JMenuItem docVouchermnit;
    private javax.swing.JMenuItem docbalsummnit;
    private javax.swing.JMenuItem docearndeductmnit;
    private javax.swing.JMenuItem docnursmnit;
    private javax.swing.JMenuItem docprovsummnit;
    private javax.swing.JMenuItem docregistermnit;
    private javax.swing.JMenuItem docsdir;
    private javax.swing.JMenuItem docsmnit1;
    private javax.swing.JMenuItem doctorledgermnit;
    private javax.swing.JMenu doctorsStamntmn;
    private javax.swing.JMenuItem doctorsallocstmtmnit;
    private javax.swing.JMenuItem doctorsledgermnit;
    private javax.swing.JMenuItem doctorslistmnit;
    private javax.swing.JMenu doctorslistsrmtmn;
    private javax.swing.JMenuItem doctorspaymentsmnit;
    private javax.swing.JMenuItem doctorsstatementmnit;
    private javax.swing.JMenuItem doctorsstmtmnit;
    private javax.swing.JMenuItem doctorstmtmnit;
    private javax.swing.JMenuItem doctstmtpaidinvmnit;
    private javax.swing.JMenuItem docunpaidinvmnit;
    private javax.swing.JMenuItem donormnit;
    private javax.swing.JMenuItem dormaccmnit;
    private javax.swing.JButton editButtn;
    private javax.swing.JMenuItem editPatientNamesmnit;
    private javax.swing.JMenuItem educationmnit;
    private javax.swing.JMenuItem emrDashBoardmnit;
    private javax.swing.JMenu emrmn;
    private javax.swing.JCheckBoxMenuItem enableExemptionsmnit;
    private javax.swing.JMenuItem entireProcurementPlanmnit;
    private javax.swing.JMenuItem entireVoteBookmnit;
    private javax.swing.JMenuItem examineImprestmnit;
    private javax.swing.JMenu examineimpresmnit;
    private javax.swing.JMenuItem exceedlimitsmnit;
    private javax.swing.JMenuItem exemptionmnit;
    public static javax.swing.JMenuItem exitmnITb;
    private javax.swing.JMenuItem exmptionsWaiversRefundsmnit;
    private javax.swing.JMenuItem expensesmnit;
    private javax.swing.JMenuItem expiredaccmnit;
    private javax.swing.JMenuItem extactscmmnit;
    private javax.swing.JMenuItem extendedNursingmnit;
    private javax.swing.JMenuItem eyeClinicRegistermnit;
    private javax.swing.JMenuItem eyeServicesSummarymnit;
    private javax.swing.JMenuItem eyeUnitDetailedReportmnit;
    private javax.swing.JMenuItem eyeUnitmnit;
    private javax.swing.JMenu eyemn;
    private javax.swing.JMenuItem fahrmnit;
    private javax.swing.JMenuItem feedingMethodsmnit;
    private javax.swing.JMenuItem finalInPatientInvmnit;
    private javax.swing.JMenu finalinvmn;
    private javax.swing.JMenuItem finalisedinvmnit;
    public static javax.swing.JMenuItem finaliseipmnit;
    public static javax.swing.JMenuItem finaliseipnhifmnit;
    private javax.swing.JMenu financeopermn;
    private javax.swing.JMenu financialsmn;
    private javax.swing.JMenuItem financistmtmnit;
    private javax.swing.JMenuItem fitnessLevelmnit;
    private javax.swing.JMenuItem fluidchartmnit;
    private javax.swing.JButton fmgrBttn;
    private javax.swing.JMenuItem fpIndicatorsSetupmnit;
    public static javax.swing.JMenuItem fpPosmnit;
    private javax.swing.JMenuItem fpRHServicesmnit;
    private javax.swing.JMenuItem fpclientpermnit;
    private javax.swing.JMenuItem fpclientpertypemnit;
    private javax.swing.JMenuItem fpclientsmnit;
    private javax.swing.JMenuItem fpcontraceptivesmnit;
    private javax.swing.JMenuItem fpcontrapercategorymnit;
    private javax.swing.JMenuItem fpercategorymnit;
    private javax.swing.JMenu fpmn;
    private javax.swing.JMenuItem fpoperationmnit;
    public static javax.swing.JMenuItem fprecordsmnit;
    public static javax.swing.JMenuItem fpregistermnit;
    private javax.swing.JMenu fprepmn;
    private javax.swing.JMenuItem fpservicesmnit;
    private javax.swing.JMenuItem fpsummarymnit;
    private javax.swing.JMenuItem frontEndOperationsmnit;
    private javax.swing.JCheckBoxMenuItem gbvmnit;
    private javax.swing.JMenuItem gbvmonthmnit;
    private javax.swing.JMenu gbvreportmnit;
    private javax.swing.JMenuItem genderParamsmnit;
    public static javax.swing.JMenuItem generalmnit;
    public static final javax.swing.JMenuItem generatedVouchersitemmnit = new javax.swing.JMenuItem();
    private javax.swing.JMenuItem gisReportermnit;
    private javax.swing.JMenuItem glaccountsmnit;
    private javax.swing.JMenuItem glaccountsmnit1;
    private javax.swing.JMenuItem glaccountsupdatemnit;
    private javax.swing.JMenu gledgermn;
    private javax.swing.JMenu glreportsmn;
    public javax.swing.JMenuItem govPosmnit;
    public javax.swing.JDialog graphViewDialog;
    private java.awt.GridBagLayout gridBagLayout1;
    private javax.swing.JMenuItem groupedSurrendermnit;
    private javax.swing.JMenuItem groupedTBmnit;
    private javax.swing.JMenuItem grtsuppliermnit;
    private javax.swing.JMenuItem hcBranchesmnit;
    private javax.swing.JMenuItem hcmACL1mnit;
    private javax.swing.JMenuItem hcmACLmnit;
    private javax.swing.JMenuItem headermnit;
    private javax.swing.JPanel helPanel;
    private javax.swing.JButton help;
    private javax.swing.JButton help1;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton helpButton1;
    private javax.swing.JMenuItem helpDesk;
    private javax.swing.JMenuItem helpdeskOperationsmnit;
    private javax.swing.JMenu helpmn;
    private javax.swing.JMenuItem hlpcontmnit;
    private javax.swing.JMenuItem hosptalmnit;
    private javax.swing.JMenuItem houseHoldRegistermnit;
    private javax.swing.JMenuBar hrMenuBar;
    private javax.swing.ButtonGroup hrPopupButtonGroup;
    private javax.swing.JPopupMenu hrmPopupMenu;
    private javax.swing.JMenuItem icuProceduresmnit;
    private javax.swing.JMenuItem immunisationProceduresmnit;
    private javax.swing.JMenuItem immunisationmnit;
    private javax.swing.JMenuItem impdocregmnit;
    private javax.swing.JMenuItem imprestAuditmnit;
    private javax.swing.JMenuItem imprestPettyCashPaymentsmnit;
    public javax.swing.JMenuItem inReceiptsmnit;
    private javax.swing.JMenu incidenceMenumn;
    private javax.swing.JMenuItem incomestmdtlmnit;
    private javax.swing.JMenuItem incomestmtsummnit;
    public javax.swing.JMenuItem inpatcashinvmnit;
    private javax.swing.JMenu inpatientmn;
    private javax.swing.JMenuItem inpatientstmtmnit;
    private javax.swing.JMenu inpatmn;
    private javax.swing.JMenuItem inpprvvstmnit;
    private javax.swing.JMenuItem insertNotrackmnit;
    private javax.swing.JMenuItem insuncemnit;
    private javax.swing.JMenuItem interimInvoicePlainmnit;
    private javax.swing.JMenuItem interimdescinvmnit;
    private javax.swing.JMenuItem interimnoticemnit;
    private javax.swing.JMenuItem intinvmnit;
    private javax.swing.JMenuItem invammendmnit;
    private javax.swing.JMenuItem invbyinvmnit;
    private javax.swing.JMenuItem inventoryACLmnit;
    private javax.swing.JMenuItem inventoryAuditmnit;
    private javax.swing.JMenuBar inventoryMenuBar;
    private javax.swing.ButtonGroup inventoryMenuBarButtonGroup;
    private javax.swing.ButtonGroup inventoryPopupButtonGroup;
    private javax.swing.JPopupMenu inventoryPopupMenu;
    private javax.swing.JMenuItem invoicemnit;
    private javax.swing.JMenu invoicesmn;
    private javax.swing.JMenuItem invoicingAuditmnit;
    private javax.swing.JMenu invoicingmn;
    private javax.swing.JMenuItem invpercrdmnit;
    private javax.swing.JMenuItem invpersuppliermnit;
    private javax.swing.JMenuItem invwithbalmnit;
    private javax.swing.JMenuItem ipBillStatusmnit;
    private javax.swing.JMenuItem ipMobidityMotaritymnit;
    private javax.swing.JMenuItem ipOperationsmnit;
    private javax.swing.JMenuItem ipanalysisformmnit;
    private javax.swing.JMenuItem ipbillmnit;
    private javax.swing.JMenuItem ipdaysmnit;
    private javax.swing.JMenuItem iplimitmnit;
    private javax.swing.JMenuItem ipmorbmotaritymnit;
    private javax.swing.JMenuItem iprevbyaccmnit;
    private javax.swing.JMenuItem iprevrptmnit;
    private javax.swing.JMenuItem ipservicesmnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    public static javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator100;
    private javax.swing.JPopupMenu.Separator jSeparator101;
    private javax.swing.JPopupMenu.Separator jSeparator102;
    private javax.swing.JPopupMenu.Separator jSeparator103;
    private javax.swing.JPopupMenu.Separator jSeparator104;
    private javax.swing.JPopupMenu.Separator jSeparator105;
    private javax.swing.JPopupMenu.Separator jSeparator106;
    private javax.swing.JPopupMenu.Separator jSeparator107;
    private javax.swing.JPopupMenu.Separator jSeparator108;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator23;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator26;
    private javax.swing.JSeparator jSeparator27;
    private javax.swing.JSeparator jSeparator28;
    private javax.swing.JSeparator jSeparator29;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator30;
    private javax.swing.JSeparator jSeparator31;
    private javax.swing.JSeparator jSeparator32;
    private javax.swing.JSeparator jSeparator33;
    private javax.swing.JSeparator jSeparator34;
    private javax.swing.JSeparator jSeparator35;
    private javax.swing.JSeparator jSeparator36;
    private javax.swing.JSeparator jSeparator37;
    private javax.swing.JSeparator jSeparator38;
    private javax.swing.JSeparator jSeparator39;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator40;
    private javax.swing.JSeparator jSeparator41;
    private javax.swing.JSeparator jSeparator42;
    private javax.swing.JSeparator jSeparator43;
    private javax.swing.JSeparator jSeparator44;
    private javax.swing.JSeparator jSeparator45;
    private javax.swing.JSeparator jSeparator46;
    private javax.swing.JSeparator jSeparator47;
    private javax.swing.JSeparator jSeparator48;
    private javax.swing.JSeparator jSeparator481;
    private javax.swing.JSeparator jSeparator49;
    private javax.swing.JSeparator jSeparator491;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator50;
    private javax.swing.JSeparator jSeparator501;
    private javax.swing.JSeparator jSeparator51;
    private javax.swing.JSeparator jSeparator511;
    private javax.swing.JSeparator jSeparator52;
    private javax.swing.JSeparator jSeparator53;
    private javax.swing.JSeparator jSeparator54;
    private javax.swing.JSeparator jSeparator55;
    private javax.swing.JSeparator jSeparator56;
    private javax.swing.JSeparator jSeparator57;
    private javax.swing.JSeparator jSeparator58;
    private javax.swing.JSeparator jSeparator59;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator60;
    private javax.swing.JSeparator jSeparator61;
    private javax.swing.JSeparator jSeparator62;
    private javax.swing.JSeparator jSeparator63;
    private javax.swing.JSeparator jSeparator64;
    private javax.swing.JSeparator jSeparator65;
    private javax.swing.JSeparator jSeparator66;
    private javax.swing.JSeparator jSeparator67;
    private javax.swing.JSeparator jSeparator68;
    private javax.swing.JSeparator jSeparator69;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator70;
    private javax.swing.JSeparator jSeparator71;
    private javax.swing.JSeparator jSeparator72;
    private javax.swing.JPopupMenu.Separator jSeparator73;
    private javax.swing.JSeparator jSeparator74;
    private javax.swing.JSeparator jSeparator75;
    private javax.swing.JSeparator jSeparator76;
    private javax.swing.JPopupMenu.Separator jSeparator77;
    private javax.swing.JSeparator jSeparator78;
    private javax.swing.JSeparator jSeparator79;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator80;
    private javax.swing.JPopupMenu.Separator jSeparator81;
    private javax.swing.JSeparator jSeparator82;
    private javax.swing.JSeparator jSeparator83;
    private javax.swing.JSeparator jSeparator831;
    private javax.swing.JSeparator jSeparator84;
    private javax.swing.JSeparator jSeparator841;
    private javax.swing.JSeparator jSeparator85;
    private javax.swing.JSeparator jSeparator86;
    private javax.swing.JSeparator jSeparator87;
    private javax.swing.JSeparator jSeparator88;
    private javax.swing.JSeparator jSeparator881;
    private javax.swing.JSeparator jSeparator89;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JSeparator jSeparator90;
    private javax.swing.JSeparator jSeparator91;
    private javax.swing.JSeparator jSeparator92;
    private javax.swing.JSeparator jSeparator93;
    private javax.swing.JSeparator jSeparator94;
    private javax.swing.JPopupMenu.Separator jSeparator95;
    private javax.swing.JPopupMenu.Separator jSeparator96;
    private javax.swing.JPopupMenu.Separator jSeparator97;
    private javax.swing.JPopupMenu.Separator jSeparator98;
    private javax.swing.JPopupMenu.Separator jSeparator99;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar31;
    private javax.swing.JToolBar jToolBar311;
    private javax.swing.JMenuItem journalmnit;
    private javax.swing.JMenuItem journalsmnit;
    private javax.swing.JMenuItem journalsviewmnit;
    public javax.swing.JMenuItem jrnloansmnit;
    private javax.swing.JMenuItem labResultsListingmnit;
    private javax.swing.JMenuItem labSpecimenSourcemnit;
    private javax.swing.JMenu labmn;
    private javax.swing.JMenuItem labmonthlyanalysismnit;
    private javax.swing.JMenu laboratorymn;
    private javax.swing.JMenu laboratorymn1;
    private javax.swing.JMenuItem laboratoryresultsmnit;
    private javax.swing.JMenuItem laboresultsmnit;
    private javax.swing.JMenuItem laborresultsummnit;
    private javax.swing.JMenuItem laboworktimemnit;
    private javax.swing.JMenuItem labpendingmnit;
    private javax.swing.JMenuItem labprocmnit;
    private javax.swing.JMenuItem labregmnit;
    private javax.swing.JMenuItem labresultsindmnit;
    private javax.swing.JMenuItem labresultsmnit;
    private javax.swing.JMenuItem labspecimensmnit;
    private javax.swing.JMenuItem labsspecimensmnit;
    private javax.swing.JMenuItem labtestsmnit;
    private javax.swing.JMenuItem labtestsresultmnit;
    private javax.swing.JMenuItem launchDashBoardmnit;
    private javax.swing.JMenuItem lbalancesheetdtlmnit;
    private javax.swing.JMenuItem lbalancesheetmnit;
    private javax.swing.JMenuItem lgalstatussetupmnit;
    private javax.swing.JMenuItem limitconsmnit;
    private javax.swing.JMenu listsmn;
    private javax.swing.JMenu lnfmn;
    private javax.swing.JButton loadQuery;
    private javax.swing.JMenuItem localeSettingsMnit;
    private javax.swing.JMenuItem logonwatermarkmnit;
    private javax.swing.JCheckBoxMenuItem macmnit1;
    private javax.swing.JRadioButtonMenuItem macos1mnit1;
    private javax.swing.JButton mailBttn;
    private javax.swing.JPanel mainLabel;
    private javax.swing.JPanel mainPanel;
    public static javax.swing.JSplitPane mainSplitPane;
    private javax.swing.JMenuItem maindeptmnit;
    private javax.swing.JMenu managementmnit;
    private javax.swing.JMenu managmn;
    private javax.swing.JMenuItem maritalStatusmnit;
    private javax.swing.JMenuItem marketertnovermnit;
    private javax.swing.JMenu maternitymn;
    private javax.swing.JMenuItem mbVerifymnit;
    private javax.swing.JMenu medicalRecordsmn;
    private javax.swing.JMenu medicalrecordsmn;
    private javax.swing.JMenuItem medicineRequisitionsmnit;
    private javax.swing.JMenuItem mergdispmnit;
    private javax.swing.JMenuItem mergeLPOmnit;
    private javax.swing.JMenuItem mergeacmnit;
    private javax.swing.JMenuItem mergedepmnit;
    private javax.swing.JMenuItem mergesuppliermnit;
    private javax.swing.JMenuItem merginvmnit;
    private javax.swing.JMenuItem mergschaccmnit;
    private javax.swing.JMenuItem mesageRecyclePeriodmnit;
    private javax.swing.JMenuItem messageCountDelaymnit;
    private javax.swing.JComboBox messageRecipientCmbx;
    private javax.swing.JMenuItem messageSnoozePeriodmnit;
    private javax.swing.JMenuItem midwivesmnit;
    private javax.swing.JMenuItem milknutritionmnit;
    private javax.swing.JMenuItem miscdebtorsmnit;
    private javax.swing.JMenuItem miscsCreditorsmnit;
    private javax.swing.JMenuItem mobileTxReportsmnit;
    private javax.swing.JButton mobilepayBtn;
    private javax.swing.JRadioButtonMenuItem modernmnit1;
    private javax.swing.JMenuItem mohovermnit;
    private javax.swing.JMenuItem monthlydeliveryretmnit;
    private javax.swing.JMenuItem monthlyroutinemnit;
    private javax.swing.JMenuItem mortOccupancymnit;
    private javax.swing.JMenuItem mortTransferMnit;
    private javax.swing.JMenuItem mortdischmnit;
    private javax.swing.JMenu morturymn;
    private javax.swing.JCheckBoxMenuItem motiflnfmnit1;
    private javax.swing.JLabel msgRecipientLbl;
    private javax.swing.JButton mtmediaBttn;
    private javax.swing.JButton mtmediaBttn1;
    private javax.swing.JLabel nameOfViewLbl;
    private javax.swing.JMenuItem namesearchmnit;
    private javax.swing.JMenuItem namesearchmnit1;
    private javax.swing.JMenuItem newbedmnit;
    private javax.swing.JMenuItem newbornsmnit;
    private javax.swing.JMenuItem nhif18mnit;
    private javax.swing.JMenuItem nhifStatementmnit;
    private javax.swing.JMenuItem nhifcreditscompmnit;
    private javax.swing.JMenuItem nhifcreditsmnit;
    private javax.swing.JMenuItem nhifdispmnit;
    private javax.swing.JMenuItem nhifinvoicemnit;
    private javax.swing.JMenuItem nhiflistcreditsmnit;
    private javax.swing.JMenuItem nhifrebatesmnit;
    private javax.swing.JMenuItem nimbuzlnfMnits;
    private javax.swing.JMenuItem nokrelationsmnit;
    private javax.swing.JMenuItem nonstockitemmnit;
    private javax.swing.JMenuItem nurseDutyRotamnit;
    private javax.swing.JMenuItem nurseprofmnit;
    private javax.swing.JMenuItem nurseraisebillmnit;
    private javax.swing.JMenuItem nursesmnit;
    private javax.swing.JMenuItem nursessetupmnit;
    private javax.swing.JMenuItem nursestationmnit;
    private javax.swing.JMenu nursing;
    private javax.swing.JMenu nursingBillingmn;
    private javax.swing.JMenuItem nursingGeneralBillingmnit;
    private javax.swing.JMenu nursingIndicatorsmn;
    private javax.swing.JMenuItem nursingOperationsmnit;
    private javax.swing.JMenu nursingReportermn;
    private javax.swing.JMenu nursingReportingmn;
    private javax.swing.JMenu nursingStatisticsmn;
    private javax.swing.JMenu nursingStoresmn;
    private javax.swing.JMenuItem occupationmnit;
    private javax.swing.JMenuItem office2003mn;
    private javax.swing.JMenuItem officexpmn;
    private javax.swing.JMenuItem opattendbydocmnit;
    private javax.swing.JButton openShift;
    private javax.swing.JMenuItem openperiodmnit2;
    private javax.swing.ButtonGroup operationsMenuBarButtonGroup;
    private javax.swing.ButtonGroup operationsPopupButtonGroup;
    private javax.swing.JPopupMenu operationsPopupMenu;
    private javax.swing.JButton operationsToolBar;
    private javax.swing.JMenuItem opmobidityundermnit;
    private javax.swing.JMenuItem oprevbrkdwnmnit;
    private javax.swing.JMenuItem oprevbyaccmnit;
    private javax.swing.JMenuItem oprevrptmnit;
    private javax.swing.JMenuItem optimdbmnit;
    private javax.swing.JButton optimizeDB;
    private javax.swing.JMenuItem opworkloadmnit;
    private javax.swing.JMenuItem orderPaymentCommitmentsmnit;
    private javax.swing.JMenuItem otherReceiptsmnit;
    private javax.swing.JMenuItem otherVouchermnit;
    public javax.swing.JMenuItem otherprmnit;
    public javax.swing.JMenuItem otherrecptmnit;
    private javax.swing.JMenu outpatmn;
    private javax.swing.JMenuItem outstandingcomitmnit;
    private javax.swing.JMenuItem outstandingordersmnit;
    private javax.swing.JMenuItem packagepricelistmnit;
    private javax.swing.JMenuItem packageslistmnit;
    private javax.swing.JMenuItem packagesmnit;
    private javax.swing.JMenuItem paidupbyscmnit;
    private javax.swing.JMenuItem paidupperdebtmnit;
    private javax.swing.JMenuItem paidupsummmnit;
    private javax.swing.JMenuItem partlyallocinvmnit;
    private javax.swing.JMenu patDepositsmn;
    private javax.swing.JMenu patacctmn;
    private javax.swing.JMenuItem patbedoccupancymnit;
    private javax.swing.JMenuItem patbillmergemnit;
    private javax.swing.JMenuItem patcategmnit;
    private javax.swing.JMenuItem patdischmnit;
    private javax.swing.JMenuItem patdocstmtmnit;
    private javax.swing.JMenu patientCategorymn;
    private javax.swing.JMenuItem patientRegistrationPointsmnit;
    private javax.swing.JMenuItem patientRegistrationmnit;
    private javax.swing.JMenuItem patientReleasemnit;
    private javax.swing.JMenuItem patientaccmnit;
    private javax.swing.JMenuItem patientcollateralmnit;
    private javax.swing.JMenuItem patientctlaccmnit;
    private javax.swing.JMenuItem patientctlsumnit;
    private javax.swing.JMenuItem patientdepositsmnit;
    private javax.swing.JMenuItem patientdiagmnit;
    private javax.swing.JMenuItem patientdiagnosismnit;
    private javax.swing.JMenuItem patientdiagnosisreportmnit;
    private javax.swing.JMenu patientmanagemn;
    private javax.swing.JMenuItem patientrefundmnit;
    private javax.swing.JMenuItem patientregnummnit;
    public static javax.swing.JMenuItem patientregstmnit;
    private javax.swing.JMenuItem patientrepotsmn;
    private javax.swing.JMenuItem patientstatementmnit;
    private javax.swing.JMenu patienttransfrmn;
    private javax.swing.JMenuItem pativoicesmnit;
    private javax.swing.JMenuItem patlabresultsmnit;
    private javax.swing.JMenuItem patlabresusmnit;
    private javax.swing.JMenuItem patmergemnit;
    private javax.swing.JMenuItem patperdeptmnit;
    private javax.swing.JMenuItem patreceiptsmnit;
    private javax.swing.JMenuItem patstmtmnit;
    private javax.swing.JMenuItem patstmtsmnit;
    private javax.swing.JMenuItem patstmtsummnit;
    private javax.swing.JMenuItem payablesAuditmnit;
    private javax.swing.JMenuItem paybillPaymentsmnit;
    private javax.swing.JMenuItem payeepymtmnit;
    private javax.swing.JMenuItem payeractaccmnit;
    private javax.swing.JMenuItem payerageingmnit;
    private javax.swing.JMenuItem payerageingsummnit;
    private javax.swing.JMenuItem payerdetStmtmnit;
    private javax.swing.JMenuItem payerperfmmnit;
    private javax.swing.JMenuItem payerstaffamdmnit;
    private javax.swing.JMenuItem payertnovermnit;
    private javax.swing.JMenu paymenmn;
    private javax.swing.JMenuItem paymentSchedulemnit;
    private javax.swing.JMenuItem paymentVouchermnit;
    private javax.swing.JMenuItem paymentmodesmnit;
    private javax.swing.JMenuItem paymentperdocSummnit;
    private javax.swing.JMenuItem paymentspercreditormnit;
    private javax.swing.JMenuItem paymentsperdocmnit;
    private javax.swing.JMenuItem paymentssummnit;
    public javax.swing.JMenuItem paymntadjmnit;
    private javax.swing.JMenuItem payrollACL1mnit;
    private javax.swing.JMenuItem payrollACLmnit;
    private javax.swing.JMenuBar payrollMenuBar;
    private javax.swing.ButtonGroup payrollMenuBarButtonGroup;
    private javax.swing.ButtonGroup payrollPopupButtonGroup;
    private javax.swing.JPopupMenu payrollPopupMenu;
    private javax.swing.JButton payrollToolBar;
    private javax.swing.JMenuItem payrollledgermnit;
    public static javax.swing.JMenu payrollmn;
    public javax.swing.JMenuItem payvouchermnit;
    private javax.swing.JMenuItem pendinginjmnit;
    private javax.swing.JMenuItem pepetratormnit;
    private javax.swing.JMenuItem permitcollectormnit;
    private javax.swing.JMenuItem pettycapaymnit;
    private javax.swing.JMenu pettycashRepmn;
    private javax.swing.JMenuItem pettycashVouchmnit;
    private javax.swing.JMenu pettycashmn;
    public javax.swing.JMenuItem pettycashpaydirmnit;
    public javax.swing.JMenuItem pettycashpaymnit;
    public javax.swing.JMenuItem pettycashpaywhmnit;
    private javax.swing.JMenuItem pettycashpmtmnit;
    private javax.swing.JMenuItem pettycashreqmnit;
    private javax.swing.JMenuItem pettycashshiftsclaimnit;
    private javax.swing.JMenuItem pettycashshiftsmnit;
    private javax.swing.JMenuItem pettycashshiftssummmnit;
    private javax.swing.JMenuItem pettycmentmnit;
    private javax.swing.JMenuItem pharmacyBillingmnit;
    private javax.swing.JButton pharmacyToolBar;
    private javax.swing.JMenuItem pharmacymnit;
    private javax.swing.JMenuItem pharmperformmnit;
    private javax.swing.JMenuItem physioReqmnit;
    private javax.swing.JMenuItem physioresultsmnit;
    private javax.swing.JMenu physiotherapy;
    private javax.swing.JRadioButton pieChart;
    private javax.swing.JRadioButton pieChart1;
    private javax.swing.JMenuItem placeofDeliverymnit;
    private javax.swing.JMenuItem pnlmnit;
    private javax.swing.JMenuItem pnltxtmnit;
    private javax.swing.JMenuItem pnltxttrdmnit;
    private javax.swing.JMenuItem poprequestmnit;
    private javax.swing.JMenuItem postInvoicesmnit;
    private javax.swing.JMenuItem postNatalCaremnit;
    private javax.swing.JMenuItem postOpeningBalancesPatientsmnit;
    private javax.swing.JMenuItem postdatedchqmnit;
    private javax.swing.JMenuItem printreceiptmnit;
    private javax.swing.JMenuItem printvouchermnit;
    private javax.swing.JMenuItem prntreceiptmnit;
    public javax.swing.JMenuItem procurementPlanmnit;
    private javax.swing.JMenu profilemn;
    private javax.swing.JMenu profitlossmn;
    private javax.swing.JMenuItem progressmnit;
    private javax.swing.JMenu projecmn;
    public javax.swing.JMenuItem projectjrnloansmnit;
    private javax.swing.JMenuItem projmnit;
    private javax.swing.JMenuItem provdocscmnit;
    private javax.swing.JMenuItem provincesmnit;
    private javax.swing.JMenu provisionsmn;
    private javax.swing.JMenuItem provisionsmnit;
    private javax.swing.JMenuItem provisionsperdebtormnit;
    private javax.swing.JMenuItem provperdebtmnit;
    private javax.swing.JMenuItem provperdocmnit;
    private javax.swing.JMenuItem provperschmnit;
    private javax.swing.JMenuItem qtyLevelsmnit;
    private javax.swing.JPanel queryDefinerPanel;
    private javax.swing.JPanel queryPane;
    private com.afrisoftech.lib.KiwiTextPanel querykiwiTextPanel;
    private javax.swing.JMenuItem quotationmnit;
    private javax.swing.JMenuItem radreqmnit;
    public javax.swing.JMenuItem raisecashVouchmnit;
    public javax.swing.JMenuItem raisevouchmnit;
    private javax.swing.JMenuItem rctdocfeesmnit;
    private javax.swing.JMenuItem rcttrfmnit;
    private javax.swing.JMenuItem readSmartCardMnit;
    private javax.swing.JMenuItem reasonforFPlanningmnit;
    private javax.swing.JMenuItem rebatesCreditSalesReportmnit;
    private javax.swing.JMenuItem receiptPrefsmnit;
    private javax.swing.JMenuItem receiptPrinterMnit;
    private javax.swing.JMenuItem receiptperpayermnit;
    private javax.swing.JMenuItem receiptscopymnit;
    private javax.swing.JMenu receiptsmn;
    public javax.swing.JMenuItem receiptsmnit;
    private javax.swing.JMenuItem receivablesAuditmnit;
    private javax.swing.JMenuItem receivablesDashboardmnit;
    private javax.swing.JLabel receivedMessageLbl;
    public javax.swing.JTextField receivedMessageTxt;
    private javax.swing.JMenuItem reconcilationreportermnit;
    private javax.swing.JMenuItem refferalsmnit;
    private javax.swing.JMenuItem refundsmnit;
    private javax.swing.JMenuItem registersmnit;
    private javax.swing.JMenuItem rehabilitationServicesmnit;
    private javax.swing.JMenuItem rehabmnitmnit;
    private javax.swing.JMenuItem releasepapermnit;
    private javax.swing.JMenuItem religionmnit;
    private javax.swing.JMenuItem reportDesignerMnit;
    private javax.swing.JMenuItem reportincidenceMenuItemnit;
    private javax.swing.JMenuItem reportingdepartmentalMenuItemnit;
    private javax.swing.JMenuBar reportsMenuBar;
    private javax.swing.ButtonGroup reportsMenuBarButtonGroup;
    private javax.swing.ButtonGroup reportsPopupButtonGroup;
    private javax.swing.JPopupMenu reportsPopupMenu;
    private javax.swing.JButton reportsToolBar;
    private javax.swing.JMenu reportsmn;
    private javax.swing.JMenuItem reportsmnit1;
    private javax.swing.JMenuItem reqbydocmnit;
    private javax.swing.JMenuItem restoredatamnit;
    private javax.swing.JMenuItem resubmissionbyschmnit;
    private javax.swing.JMenuItem resubmitclaimsmnit;
    private javax.swing.JMenu retuenedclaims;
    private javax.swing.JMenu returnedclms;
    private javax.swing.JMenuItem reveagainstmnit;
    private javax.swing.JMenuItem revenuecountallmnit;
    private javax.swing.JMenuItem revenuecountlmnit;
    private javax.swing.JMenuItem revenuemnit;
    private javax.swing.JMenuItem revperdepmnit;
    private javax.swing.JMenuItem revpricelistmnit;
    private javax.swing.JMenuItem revrepmnit;
    private javax.swing.JMenuItem rhCentreMnit;
    private javax.swing.JMenuItem riskLevelsmnit;
    private javax.swing.JMenuItem rpatientmnit;
    private javax.swing.JMenuItem rptbrdwnmnit;
    private javax.swing.JMenuItem rptperpointmnit;
    private javax.swing.JMenuItem rptsummaryperpointmnit;
    private javax.swing.JMenuItem rtclaimsbyscmnit;
    private javax.swing.JMenuItem rtclaimsmnit;
    private javax.swing.JMenuItem rtclaimssummnit;
    public static javax.swing.JDesktopPane saccopn;
    private javax.swing.JMenuItem safedeliveriesmnit;
    private javax.swing.JMenuItem salesPrefsmnit;
    private javax.swing.JButton saveQuery;
    private javax.swing.JMenuItem schemeExclusionsmnit;
    private javax.swing.JMenuItem schemeallmnit;
    private javax.swing.JMenuItem schemememberjmnit;
    private javax.swing.JMenu schememn;
    public javax.swing.JMenuItem schememnit;
    private javax.swing.JMenuItem schemeprovmnit;
    private javax.swing.JMenuItem schemeregmnit;
    private javax.swing.JMenuItem schemesalesmnit;
    private javax.swing.JMenuItem schemesmnit;
    private javax.swing.JMenuItem schemestaffmnit;
    private javax.swing.JMenuItem schmdetmnit;
    private javax.swing.JMenuItem schmsdebtCollmnit;
    private javax.swing.JMenuItem scmabtlimitmnit;
    private javax.swing.JMenuItem scmallocsummnit;
    private javax.swing.JMenuItem scmattendsummnit;
    private javax.swing.JMenuItem scmepfmmnit;
    private javax.swing.JMenuItem scmperfrmnit;
    private javax.swing.JMenuItem scmstatusmnit;
    private javax.swing.JMenuItem securityReleasemnit;
    private javax.swing.JButton sendMessageBtn;
    private javax.swing.JTextField sendMessageTxt;
    private javax.swing.JTextField sendMessageTxt1;
    private javax.swing.JButton sendSMSBtn;
    private javax.swing.JMenuItem serviceAccptslipmnit;
    private javax.swing.JMenuItem serviceCharterAdjustmentmnit;
    private javax.swing.JMenuItem servicesstmntmnit;
    private javax.swing.JMenuItem setAccPeriodsmnit;
    private javax.swing.JMenuItem setaccperiodmnit;
    private javax.swing.JMenuItem setaccperiodmnit1;
    private javax.swing.JMenu setupmn;
    private javax.swing.JMenuItem shiftTotalsmnit;
    private javax.swing.JMenu shiftmn;
    private javax.swing.JMenuItem shiftrepDetmnit;
    private javax.swing.JMenuItem shiftrepmnit;
    private javax.swing.JMenuItem shiftreprecmnit;
    private javax.swing.JMenuItem shiftreptotalmnit;
    private javax.swing.JMenuItem shiftrptbrdwnmnit;
    private javax.swing.JMenuItem shiftstotalmnit;
    private javax.swing.JMenuItem shiftstotalsummnit;
    private javax.swing.JMenuItem shiftsurrendermnit;
    private javax.swing.JMenuItem shifttotalpercashpointmnit;
    private javax.swing.JMenuItem sickleavemnit;
    private javax.swing.JMenuItem sickoffsmnit;
    private javax.swing.JMenu skinmn;
    private javax.swing.JButton smsBroadcastBtn;
    private javax.swing.JComboBox smsBroadcastTargetCmbx;
    private javax.swing.JMenuItem smsFetchSnoozePeriodmnit;
    private javax.swing.JMenuItem smsGroupsmnit;
    private javax.swing.JMenuItem socialWorkServicesmnit;
    private javax.swing.JLabel spacerLbls;
    private javax.swing.JPanel spacerPanel;
    private javax.swing.JMenuItem specimensmnit;
    private javax.swing.JMenuItem staffStatementsmnit;
    private javax.swing.JMenu staffmn;
    private javax.swing.JMenuItem statementofaccmnit;
    private javax.swing.JMenuItem stmtmnit;
    private javax.swing.JMenuItem stmtperdebtmnit;
    private javax.swing.JMenuItem stmtscmmnit;
    private javax.swing.JMenuItem stmtsummperdebtmnit;
    private javax.swing.JMenuItem stockCountmnit;
    private javax.swing.JMenuItem stockbalancesmnit;
    private javax.swing.JMenuItem stockmnit1;
    private javax.swing.JMenuItem storeAllocationsmnit;
    private javax.swing.JMenuItem storesSecuritymnit;
    private javax.swing.JMenuItem storesrevmnit;
    private javax.swing.JMenuItem studio2k5mn;
    private javax.swing.JMenuItem submStmtmnit;
    private javax.swing.JPanel subminQueryPane;
    private javax.swing.JButton submitQuery;
    private javax.swing.JButton submitQuery1;
    private javax.swing.JButton submitQuery2;
    private javax.swing.JMenuItem sumfinalinvmnit;
    private javax.swing.JMenu supmn;
    private javax.swing.JMenuItem supplierinvmnit;
    private javax.swing.JMenuItem suppliersmnit;
    private javax.swing.JMenuItem suppliesDressingmnit;
    private javax.swing.JMenuItem suppliesDressingsrequistmnit;
    private javax.swing.JMenuItem supplrmnit;
    private javax.swing.JMenuItem survivorprofmnit;
    private javax.swing.JButton suspendShift;
    private javax.swing.JMenuItem suspendmnit;
    private javax.swing.JMenuItem suspschememnit;
    private javax.swing.JMenuItem suspschemepovmnit;
    private javax.swing.JCheckBoxMenuItem swinglnfmnit1;
    private javax.swing.JMenuItem sysAdminAuditmnit;
    private javax.swing.JMenu systemn;
    private javax.swing.JPanel taskBar;
    public javax.swing.JSeparator tasksSeparator;
    private javax.swing.JMenuItem taxreturnmnit;
    private javax.swing.JMenuItem taxsetupmnit;
    private javax.swing.JMenuItem tbScreeningProceduresmnit;
    private javax.swing.JMenuItem tbScreeningReportmnit;
    private javax.swing.JMenuItem tbmovmentmnit;
    private javax.swing.JMenuItem textPrintermnit;
    private javax.swing.JMenuItem theaterManagementmnit;
    private javax.swing.JMenuItem theatermnit;
    private javax.swing.JMenuItem theatreSetup;
    private javax.swing.JMenuItem theatrebillingNursingmnit;
    private javax.swing.JMenuItem theatrecasesmnit;
    private javax.swing.JMenuItem theatrediagmnit;
    private javax.swing.JMenu theatremn;
    private javax.swing.JMenuItem theatreprocmnit;
    private javax.swing.JMenuItem theatrescorecard;
    private javax.swing.JMenuItem timelogmnit;
    private javax.swing.JMenuItem totalinpatrecmnit;
    private javax.swing.JMenuItem totalschemeinvlistmnit;
    private javax.swing.JMenuItem transactionslsmnitmnit;
    private javax.swing.JMenuItem transauditingmnit;
    private javax.swing.JMenuItem transauditmnit;
    private javax.swing.JMenuItem transditmnit;
    private javax.swing.JMenuItem transferItemsmnit;
    private javax.swing.JMenuItem transperaccmnit;
    private javax.swing.JPanel treePane;
    private javax.swing.JMenuItem triagemnit;
    private javax.swing.JMenuItem trialbalancemnit;
    private javax.swing.JMenuItem turnchartmnit;
    private javax.swing.JMenuItem typesOfHospitalsmnit;
    private javax.swing.JMenuItem typesOfUIDsmnit;
    private javax.swing.JMenuItem typesofMilkmnit;
    private javax.swing.JMenuItem unallocpymmnit;
    private javax.swing.JMenu unapprovedinvmn;
    private javax.swing.JMenuItem uncollectedshiftsmnit;
    private javax.swing.JMenuItem unfinalinvmnit;
    private javax.swing.JMenuItem unfinalisedOpmnit;
    private javax.swing.JMenuItem unfinalisedinvmnit;
    private javax.swing.JMenuItem unfinalizeInvoicemnit;
    private javax.swing.JMenuItem unhNHIFClaimmnit;
    private javax.swing.JMenu universalHealthcareReportsmn;
    private javax.swing.JMenuItem universalHealthcareSalesAnalysismnit;
    private javax.swing.JMenuItem unlinkedgrnsmnit;
    private javax.swing.JMenuItem unpaidDispInvmnit;
    private javax.swing.JMenuItem unrecitemsmnit;
    private javax.swing.JMenuItem unrecordedRecItemsmnit;
    private javax.swing.JMenuItem unutilisedepositmnit;
    private javax.swing.JButton updateChartBtn;
    private javax.swing.JMenuItem updatedomainsmnit;
    private javax.swing.JMenuItem urlRegistrationmnit;
    private javax.swing.JMenuItem userAccessAuditmnit;
    private javax.swing.JLabel userLabel;
    private javax.swing.JMenuItem useraccountsmn;
    private javax.swing.JMenuItem useractivities;
    private javax.swing.JMenuItem userprofmnit;
    private javax.swing.JMenu utilitymn;
    private javax.swing.JMenuItem validatamnit;
    private javax.swing.JMenuItem vallocationmnit;
    private javax.swing.JPanel valuesAxisSelector;
    private javax.swing.JPanel valuesAxisSelector1;
    private javax.swing.JMenu vbookmn;
    private javax.swing.JMenuItem vcommitmentmnit;
    private javax.swing.JTextField viewNameTxt;
    private javax.swing.JMenuItem viewincidenceMenuItemnit;
    private javax.swing.JMenu viewsmn;
    private javax.swing.JMenuItem vitalsignmnit;
    private javax.swing.JMenuItem voteBookBalancesmnit;
    private javax.swing.JMenuItem voteDepartmentmnit;
    public javax.swing.JMenuItem votepaymentmnit;
    private javax.swing.JMenuItem vpaymentsmnit;
    private javax.swing.JMenuItem waiverexemnit;
    private javax.swing.JMenuItem ward2wardtransfermnit;
    private javax.swing.JMenuItem wardOccupancyReportsmnit;
    private javax.swing.JMenuItem wardProceduresmnit;
    private javax.swing.JMenuItem wardoccstatisticsmnit;
    private javax.swing.JMenuItem wardoccupancymnit;
    private javax.swing.JMenuItem wardproceduresmnit;
    private javax.swing.JMenuItem wardprocmnit;
    private javax.swing.JMenu wardsetupmn;
    private javax.swing.JMenuItem wardtfrmnit;
    private javax.swing.JMenuItem weeklyrevCompmnit;
    private javax.swing.JMenuItem weeklyrevmnit;
    private javax.swing.JRadioButtonMenuItem whiltmnit1;
    private javax.swing.JMenuItem whtmnit;
    private javax.swing.JMenuItem whtperdocmnit;
    private javax.swing.JMenu whtstamentsmn;
    private javax.swing.JMenuItem whtsummnit;
    private javax.swing.JCheckBoxMenuItem winlnfmnit1;
    private javax.swing.JMenuItem winlnfnewmnits;
    private javax.swing.JButton writeMailBtn;
    private javax.swing.JMenuItem writeofflimitsmnit;
    private javax.swing.JMenu writeoffs;
    private javax.swing.JMenu wrt;
    private javax.swing.JMenuItem wrtperscmnit;
    private javax.swing.JMenuItem wrtsummnit;
    private javax.swing.JLabel xAxisLbl;
    private javax.swing.JPanel xaxisColumnPanel;
    private javax.swing.JPanel xaxisColumnPanel1;
    public javax.swing.JComboBox xaxisComboBox;
    public javax.swing.JComboBox xaxisComboBox1;
    private javax.swing.JLabel xaxisLabel;
    private javax.swing.JLabel xaxisLabel1;
    private javax.swing.JRadioButtonMenuItem xpmnit1;
    private javax.swing.JMenu xpskinmn;
    private javax.swing.JMenu xray;
    private javax.swing.JMenuItem xrayFilmTypesmnit;
    private javax.swing.JMenuItem xraylistmnit;
    private javax.swing.JMenuItem xraymnit;
    private javax.swing.JMenuItem xraymonthlyanalysismnit;
    private javax.swing.JMenuItem xraypendingReq;
    private javax.swing.JMenuItem xrayperfmnit;
    private javax.swing.JMenu xrayrep;
    private javax.swing.JMenuItem xrayresults;
    private javax.swing.JMenuItem xraysmnit;
    private javax.swing.JRadioButton xyChart;
    private javax.swing.JRadioButton xyChart1;
    private javax.swing.JLabel yAxisLbl;
    private javax.swing.JTextField yAxisTxt;
    private javax.swing.JMenuItem yearlyrotinemnit;
    // End of variables declaration//GEN-END:variables
}
