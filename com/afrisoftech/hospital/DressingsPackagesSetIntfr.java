/*
 * offintfr.java
 *
 * Created on August 13, 2002, 1:55 AM
 */
package com.afrisoftech.hospital;

/**
 *
 * @author root
 */
public class DressingsPackagesSetIntfr extends javax.swing.JInternalFrame {

    /**
     * Creates new form offintfr
     */
    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;

    public DressingsPackagesSetIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {

        connectDB = connDb;

        pConnDB = pconnDB;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        itemSearchDialog = new javax.swing.JDialog();
        itemSearchPanel = new javax.swing.JPanel();
        itemSearchTxt = new javax.swing.JTextField();
        itemSearchScrollPane = new javax.swing.JScrollPane();
        itemSearchTable = new com.afrisoftech.dbadmin.JTable();
        itemSearchCloseBtn = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemCombiTable = new com.afrisoftech.dbadmin.JTable();

        jLabel1 = new javax.swing.JLabel();
        departmentCmbx = new javax.swing.JComboBox();
        departmentGlCodeLbl = new javax.swing.JLabel();
        departmentGLCodeTxt = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        try{
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }
        saveBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        removeRowBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        closeFormBtn = new javax.swing.JButton();
        spacerLbl = new javax.swing.JLabel();
        masterItemNameLbl = new javax.swing.JLabel();
        packageMasterItemCmbx = new javax.swing.JComboBox();
        masterItemCodeLbl = new javax.swing.JLabel();
        masterItemCodeTxt = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        itemSearchDialog.setUndecorated(true);
        itemSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        itemSearchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        itemSearchPanel.setLayout(new java.awt.GridBagLayout());

        itemSearchTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                itemSearchTxtCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        itemSearchPanel.add(itemSearchTxt, gridBagConstraints);

        itemSearchScrollPane.setDoubleBuffered(true);

        itemSearchTable.setDoubleBuffered(true);
        itemSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            itemSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // itemSearchScrollPane.setViewportView(itemSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        itemSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemSearchTableMouseClicked(evt);
            }
        });
        itemSearchScrollPane.setViewportView(itemSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        itemSearchPanel.add(itemSearchScrollPane, gridBagConstraints);

        itemSearchCloseBtn.setText("Dispose");
        itemSearchCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSearchCloseBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        itemSearchPanel.add(itemSearchCloseBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        itemSearchDialog.getContentPane().add(itemSearchPanel, gridBagConstraints);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Dressings and Sutures Packages Combination ");
        setVisible(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        com.afrisoftech.hospital.PackagesStockIntfr packSetup = new com.afrisoftech.hospital.PackagesStockIntfr(connectDB,pConnDB);
        java.awt.GridBagConstraints gridBagConstraintbilling = new java.awt.GridBagConstraints();
        gridBagConstraintbilling.gridx = 0;
        gridBagConstraintbilling.gridy = 0;
        gridBagConstraintbilling.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraintbilling.weightx = 1.0;
        gridBagConstraintbilling.weighty = 1.0;
        jPanel3.add(packSetup.getContentPane(), gridBagConstraintbilling);

        jTabbedPane1.addTab("Set Packages", jPanel3);

        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jSeparator1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Utopia", 3, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel4, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        itemCombiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Service / Item", "Qty", "Rate", "Total", "GL Code", "Item Code", "Dependancy Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemCombiTable.setShowHorizontalLines(false);

        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = itemCombiTable.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(400); //sport column is bigger
            } else {

                //if (i == 2) {
                    column.setPreferredWidth(100);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }

        itemCombiTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemCombiTableMouseClicked(evt);
            }
        });
        itemCombiTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemCombiTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(itemCombiTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 500.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel1, gridBagConstraints);

        jLabel1.setText("Main Item Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        departmentCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select '-' as store_name UNION SELECT DISTINCT store_name as store_name FROM st_main_stores ORDER BY 1"));
        departmentCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(departmentCmbx, gridBagConstraints);

        departmentGlCodeLbl.setText("Sales GL Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(departmentGlCodeLbl, gridBagConstraints);

        departmentGLCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(departmentGLCodeTxt, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        saveBtn.setMnemonic('S');
        saveBtn.setText("Save");
        saveBtn.setToolTipText("Click here to enter data");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(saveBtn, gridBagConstraints);

        editBtn.setMnemonic('E');
        editBtn.setText("Edit");
        editBtn.setToolTipText("click to edit&update");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(editBtn, gridBagConstraints);

        removeRowBtn.setMnemonic('R');
        removeRowBtn.setText("Remove row");
        removeRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        buttonPanel.add(removeRowBtn, gridBagConstraints);

        clearBtn.setMnemonic('l');
        clearBtn.setText("Clear form");
        clearBtn.setToolTipText("Click to clear fields");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(clearBtn, gridBagConstraints);

        deleteBtn.setMnemonic('d');
        deleteBtn.setText("Delete package");
        deleteBtn.setToolTipText("Click to clear fields");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(deleteBtn, gridBagConstraints);

        closeFormBtn.setMnemonic('C');
        closeFormBtn.setText("Close");
        closeFormBtn.setToolTipText("click to close");
        closeFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFormBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(closeFormBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 500.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(spacerLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(buttonPanel, gridBagConstraints);

        masterItemNameLbl.setText("Package");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(masterItemNameLbl, gridBagConstraints);

        packageMasterItemCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select package FROM pb_packages_setup ORDER BY package"));
        packageMasterItemCmbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packageMasterItemCmbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(packageMasterItemCmbx, gridBagConstraints);

        masterItemCodeLbl.setText("Package Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(masterItemCodeLbl, gridBagConstraints);

        masterItemCodeTxt.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(masterItemCodeTxt, gridBagConstraints);

        jLabel53.setText("Package Total ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel53, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jTextField3, gridBagConstraints);

        jTabbedPane1.addTab("Package Items", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 851, 448);
    }// </editor-fold>//GEN-END:initComponents

    private void itemCombiTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCombiTableKeyReleased
        float qty = java.lang.Float.parseFloat(itemCombiTable.getValueAt(itemCombiTable.getSelectedRow(), 1).toString());
        float price = java.lang.Float.parseFloat(itemCombiTable.getValueAt(itemCombiTable.getSelectedRow(), 2).toString());

        float total = (qty * price);
        itemCombiTable.setValueAt(total, itemCombiTable.getSelectedRow(), 3);
        double totalSum = com.afrisoftech.lib.TableColumnTotal.getTableColumnTotal(itemCombiTable, 3);
        jTextField3.setText(com.afrisoftech.lib.CurrencyFormatter.getFormattedDouble(totalSum));
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCombiTableKeyReleased

    private void itemCombiTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemCombiTableMouseClicked

        if (itemCombiTable.getSelectedColumn() == 0) {

            this.cmboxMouseClicked();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_itemCombiTableMouseClicked
    private void cmboxMouseClicked() {

        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        itemSearchDialog.setSize(600, 200);
        itemSearchDialog.setLocation(point);
        itemSearchDialog.setVisible(true);
    }
    private void itemSearchCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSearchCloseBtnActionPerformed
        itemSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_itemSearchCloseBtnActionPerformed

    private void itemSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemSearchTableMouseClicked
        float billNo = 0;
        itemCombiTable.setValueAt(itemSearchTable.getValueAt(itemSearchTable.getSelectedRow(), 0), itemCombiTable.getSelectedRow(), 0);
        itemCombiTable.setValueAt(1, itemCombiTable.getSelectedRow(), 1);
        itemCombiTable.setValueAt(itemSearchTable.getValueAt(itemSearchTable.getSelectedRow(), 1), itemCombiTable.getSelectedRow(), 2);
        itemCombiTable.setValueAt(itemSearchTable.getValueAt(itemSearchTable.getSelectedRow(), 1), itemCombiTable.getSelectedRow(), 3);
        itemCombiTable.setValueAt(itemSearchTable.getValueAt(itemSearchTable.getSelectedRow(), 2), itemCombiTable.getSelectedRow(), 4);
        itemCombiTable.setValueAt(itemSearchTable.getValueAt(itemSearchTable.getSelectedRow(), 3), itemCombiTable.getSelectedRow(), 5);
        itemCombiTable.setValueAt("DEPENDANT", itemCombiTable.getSelectedRow(), 6);
        itemSearchDialog.dispose();
        double floatCol2 = java.lang.Double.parseDouble(itemCombiTable.getValueAt(itemCombiTable.getSelectedRow(), 1).toString());

        double floatCol3 = java.lang.Double.parseDouble(itemCombiTable.getValueAt(itemCombiTable.getSelectedRow(), 2).toString());

        if (billNo > 0) {
            double resVal = (floatCol2 * floatCol3) - ((floatCol2 * floatCol3) * billNo / 100);
            itemCombiTable.setValueAt(new java.lang.Float(resVal), itemCombiTable.getSelectedRow(), 3);
        } else {
            double resVal = floatCol2 * floatCol3;
            itemCombiTable.setValueAt(new java.lang.Float(resVal), itemCombiTable.getSelectedRow(), 3);
        }

        itemSearchDialog.dispose();

        // Add your handling code here:
    }//GEN-LAST:event_itemSearchTableMouseClicked

    private void itemSearchTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_itemSearchTxtCaretUpdate

        if (itemSearchTxt.getCaretPosition() < 1) {

            System.out.println("Nothing");
        } else {
            // if(jRadioButton1.isSelected()){
            itemSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select description, (buying_price/packaging)::numeric(15,0), '" + departmentGLCodeTxt.getText() + "', item_code FROM st_stock_item WHERE (description ILIKE '%" + itemSearchTxt.getText() + "%' OR item_code ilike '%" + itemSearchTxt.getText() + "%') AND department ilike '" + departmentCmbx.getSelectedItem().toString() + "' order by 1"));

            System.out.println("Cannot sort out");

        }

// Add your handling code here:
    }//GEN-LAST:event_itemSearchTxtCaretUpdate

    private void packageMasterItemCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packageMasterItemCmbxActionPerformed
        try {
            double rate = 0.00;
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("SELECT package_code FROM pb_packages_stockable_setup WHERE package ILIKE '" + packageMasterItemCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                masterItemCodeTxt.setText(rset.getObject(1).toString());
                //rate = rset.getDouble(2);
            }
//            itemCombiTable.setValueAt(packageMasterItemCmbx.getSelectedItem(), 0, 0);
//            itemCombiTable.setValueAt("1", 0, 1);
//            itemCombiTable.setValueAt(rate, 0, 2);
//            itemCombiTable.setValueAt(rate, 0, 3);
//            itemCombiTable.setValueAt(departmentGLCodeTxt.getText(), 0, 4);
//            itemCombiTable.setValueAt(masterItemCodeTxt.getText(), 0, 5);
//            itemCombiTable.setValueAt("MAIN", 0, 6);
        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }// TODO add your handling code here:
    }//GEN-LAST:event_packageMasterItemCmbxActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {

            java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("DELETE from packages WHERE package_code = ?");
            pstmt31.setObject(1, masterItemCodeTxt.getText());
            pstmt31.execute();

        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        editBtn.doClick();

        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void departmentCmbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentCmbxActionPerformed

        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select income_account from pb_departments where department_name ilike '" + departmentCmbx.getSelectedItem() + "'");
//            java.sql.ResultSet rset = stmt.executeQuery("select code from pb_activity where activity ilike '" + departmentCmbx.getSelectedItem() + "'");
            while (rset.next()) {
                departmentGLCodeTxt.setText(rset.getObject(1).toString());

            }

            packageMasterItemCmbx.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT DISTINCT package FROM pb_packages_stockable_setup  WHERE department ilike '" + departmentCmbx.getSelectedItem().toString() + "' ORDER BY 1"));

        } catch (java.sql.SQLException sqlex) {
            sqlex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        // Add your handling code here:
    }//GEN-LAST:event_departmentCmbxActionPerformed

    private void removeRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowBtnActionPerformed
        for (int i = 0; i < itemCombiTable.getColumnCount(); i++) {
            itemCombiTable.setValueAt(null, itemCombiTable.getSelectedRow(), i);
        }

        // Add your handling code here:
    }//GEN-LAST:event_removeRowBtnActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt) {
        int i = itemCombiTable.getSelectedRow();

    }
    private void closeFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFormBtnActionPerformed
        setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_closeFormBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        this.getContentPane().removeAll();

        this.initComponents();

        this.setSize(this.getParent().getSize());
// Add your handling code here:
    }//GEN-LAST:event_clearBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        for (int k = 0; k < itemCombiTable.getRowCount(); k++) {
            for (int r = 0; r < itemCombiTable.getColumnCount(); r++) {
                itemCombiTable.getModel().setValueAt(null, k, r);
            }
        }
        int i = 0;
        itemCombiTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB, "select item_service,qty,price,total, glcode, master_item_code, dependancy_type, package_id from packages WHERE package_code ilike '" + masterItemCodeTxt.getText() + "' ORDER BY item_service"));
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            java.sql.ResultSet rset = stmt.executeQuery("select package_amt from pb_packages_setup WHERE package_code = '" + masterItemCodeTxt.getText() + "'");
            while (rset.next()) {
                jTextField3.setText(rset.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqlex) {
            javax.swing.JOptionPane.showMessageDialog(this, sqlex.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());

        }

        saveBtn.setText("Update");  // Add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();

        long dateNow = calendar.getTimeInMillis();

        java.sql.Date datenowSql = new java.sql.Date(dateNow);

        System.out.println(datenowSql.toString());
        int j = 0;
        String dept = null;
        try {
            java.sql.Statement stmtTable11x = connectDB.createStatement();
            java.sql.ResultSet rsetTable11x = stmtTable11x.executeQuery("SELECT department  FROM pb_packages_setup WHERE package ilike  '" + packageMasterItemCmbx.getSelectedItem() + "'");

            while (rsetTable11x.next()) {
                dept = rsetTable11x.getString(1);
            }
            String transNo = null;
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next()) {
                rst.getObject(1).toString();

                transNo = rst.getObject(1).toString();
            }
            for (int i = 0; i < itemCombiTable.getRowCount(); i++) {
                if (itemCombiTable.getModel().getValueAt(i, 1) != null) {

                    if (saveBtn.getText().equalsIgnoreCase("Update")) {
                        java.sql.PreparedStatement pstmt311 = connectDB.prepareStatement("UPDATE packages SET price = ?, qty = ?, total = ?, master_item_code = ?, dependancy_type = ?, service_item = ? WHERE package_id = ? AND master_item_code = ?");
                        pstmt311.setObject(1, itemCombiTable.getValueAt(i, 2).toString());
                        pstmt311.setObject(2, itemCombiTable.getValueAt(i, 1).toString());
                        pstmt311.setObject(3, itemCombiTable.getValueAt(i, 3).toString());
                        pstmt311.setObject(4, itemCombiTable.getValueAt(i, 5).toString());
                        pstmt311.setObject(5, itemCombiTable.getValueAt(i, 6).toString());
                        pstmt311.setObject(6, itemCombiTable.getValueAt(i, 0).toString());
                        pstmt311.setObject(7, itemCombiTable.getValueAt(i, 7).toString());
                        pstmt311.setObject(8, itemCombiTable.getValueAt(i, 5).toString());
                        pstmt311.executeUpdate();

                    } else {
                        java.sql.Statement stmtTable11 = connectDB.createStatement();
                        java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(item_service)  FROM packages WHERE item_service ilike  '" + itemCombiTable.getValueAt(i, 0).toString() + "%' and price = '" + itemCombiTable.getValueAt(i, 2).toString() + "' AND qty = '" + itemCombiTable.getValueAt(i, 1).toString() + "'");

                        while (rsetTable11.next()) {
                            j = rsetTable11.getInt(1);
                        }
                        if (j <= 0) {
                            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into packages values(initcap(?),?,UPPER(?),?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt.setObject(1, departmentCmbx.getSelectedItem());
                            pstmt.setObject(2, itemCombiTable.getValueAt(i, 4).toString());
                            pstmt.setObject(4, packageMasterItemCmbx.getSelectedItem());
                            pstmt.setObject(3, masterItemCodeTxt.getText());
                            pstmt.setObject(5, itemCombiTable.getValueAt(i, 0).toString());
                            pstmt.setDouble(6, Double.parseDouble(itemCombiTable.getValueAt(i, 2).toString()));
                            pstmt.setDouble(7, Double.parseDouble(itemCombiTable.getValueAt(i, 1).toString()));
                            pstmt.setDouble(8, Double.parseDouble(itemCombiTable.getValueAt(i, 3).toString()));
                            pstmt.setObject(9, true);
                            pstmt.setObject(10, "");
                            pstmt.setDate(11, com.afrisoftech.lib.ServerTime.getSQLDate(connectDB));
                            pstmt.setObject(12, itemCombiTable.getValueAt(i, 5).toString());
                            if (itemCombiTable.getValueAt(i, 5).toString().equalsIgnoreCase(masterItemCodeTxt.getText())) {
                                pstmt.setObject(13, "MAIN");
                            } else {
                                pstmt.setObject(13, "DEPENDANT");
                            }
                            pstmt.setObject(14, transNo);
                            pstmt.executeUpdate();
                        }
                    }
                }
            }
            saveBtn.setText("Save");

            jLabel4.setForeground(java.awt.Color.blue);
            jLabel4.setText("Insert successful");
        } catch (java.sql.SQLException sq) {
            sq.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

            jLabel4.setForeground(java.awt.Color.red);
            jLabel4.setText("Sorry.insert not successful");
        } // Add your handling code here:
    }//GEN-LAST:event_saveBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton closeFormBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox departmentCmbx;
    private javax.swing.JTextField departmentGLCodeTxt;
    private javax.swing.JLabel departmentGlCodeLbl;
    private javax.swing.JButton editBtn;
    private javax.swing.JTable itemCombiTable;
    private javax.swing.JButton itemSearchCloseBtn;
    private javax.swing.JDialog itemSearchDialog;
    private javax.swing.JPanel itemSearchPanel;
    private javax.swing.JScrollPane itemSearchScrollPane;
    private javax.swing.JTable itemSearchTable;
    private javax.swing.JTextField itemSearchTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel masterItemCodeLbl;
    private javax.swing.JTextField masterItemCodeTxt;
    private javax.swing.JLabel masterItemNameLbl;
    private javax.swing.JComboBox packageMasterItemCmbx;
    private javax.swing.JButton removeRowBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel spacerLbl;
    // End of variables declaration//GEN-END:variables
}
