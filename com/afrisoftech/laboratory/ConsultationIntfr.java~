/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class ConsultationIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
     com.afrisoftech.lib.DBObject dbObject;
    /** Creates new form loanpymntintfr */
    javax.swing.table.TableModel tableModel = null;
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    java.lang.Thread getListThread;
    int PatLabResults = 90;
    boolean getList;
    boolean getList1;
    java.lang.Thread getListThread1;
    
    
    public ConsultationIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        java.util.Date beginDate = null;
        
        java.util.Date endDate = null;
        
          dbObject = new com.afrisoftech.lib.DBObject();
        getListThread = new java.lang.Thread(this, "Update_Lab_Tests");
        getListThread1 = new java.lang.Thread(this, "Update_Lab_Tests1");
        initComponents();
        
        getList = true;
        
        getListThread.start();
        getList1 = true;
        
        getListThread1.start();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton521 = new javax.swing.JButton();
        jSearchDialog211 = new javax.swing.JDialog();
        jSearchPanel211 = new javax.swing.JPanel();
        jTextField11311 = new javax.swing.JTextField();
        jSearchScrollPane211 = new javax.swing.JScrollPane();
        jSearchTable211 = new com.afrisoftech.dbadmin.JTable();
        jButton5211 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton522 = new javax.swing.JButton();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        jSearchDialog212 = new javax.swing.JDialog();
        jSearchPanel212 = new javax.swing.JPanel();
        jTextField11312 = new javax.swing.JTextField();
        jSearchScrollPane213 = new javax.swing.JScrollPane();
        jSearchTable213 = new javax.swing.JTable();
        jButton5213 = new javax.swing.JButton();
        buttonGroup10 = new javax.swing.ButtonGroup();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        jSearchDialog213 = new javax.swing.JDialog();
        jSearchPanel213 = new javax.swing.JPanel();
        jTextField11313 = new javax.swing.JTextField();
        jSearchScrollPane212 = new javax.swing.JScrollPane();
        jSearchTable212 = new com.afrisoftech.dbadmin.JTable();
        jButton5212 = new javax.swing.JButton();
        jSearchDialog214 = new javax.swing.JDialog();
        jSearchPanel214 = new javax.swing.JPanel();
        jTextField11314 = new javax.swing.JTextField();
        jSearchScrollPane214 = new javax.swing.JScrollPane();
        jSearchTable214 = new com.afrisoftech.dbadmin.JTable();
        jButton5214 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class,  java.lang.Object.class,  java.lang.Object.class,java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false,  false, false, false,false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jPanel1 = new javax.swing.JPanel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel812 = new javax.swing.JLabel();
        jPanel422 = new javax.swing.JPanel();
        searchButton22 = new javax.swing.JButton();
        jTextField82 = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        jTextField922 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField6 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel71 = new javax.swing.JLabel();
        jTextField62 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();
        jLabel51 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jPanel4111 = new javax.swing.JPanel();
        jTextField9111 = new javax.swing.JTextField();
        searchButton111 = new javax.swing.JButton();
        jButton72 = new javax.swing.JButton();
        jButton82 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        jEditorPane11 = new javax.swing.JEditorPane();
        jLabel61 = new javax.swing.JLabel();
        jScrollPane121 = new javax.swing.JScrollPane();
        jEditorPane111 = new javax.swing.JEditorPane();
        jLabel611 = new javax.swing.JLabel();
        jScrollPane131 = new javax.swing.JScrollPane();
        jEditorPane112 = new javax.swing.JEditorPane();
        jScrollPane132 = new javax.swing.JScrollPane();
        jEditorPane113 = new javax.swing.JEditorPane();
        jLabel30 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jPanel41111 = new javax.swing.JPanel();
        jTextField91111 = new javax.swing.JTextField();
        searchButton1111 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        jPanel81 = new javax.swing.JPanel();
        jButton52 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton13 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField61 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jPanel91 = new javax.swing.JPanel();
        jCheckBox121 = new javax.swing.JCheckBox();
        jCheckBox131 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel911 = new javax.swing.JPanel();
        jCheckBox1211 = new javax.swing.JCheckBox();
        jCheckBox1311 = new javax.swing.JCheckBox();
        jLabel81 = new javax.swing.JLabel();
        jComboBox111 = new javax.swing.JComboBox();
        jPanel9111 = new javax.swing.JPanel();
        jCheckBox12111 = new javax.swing.JCheckBox();
        jCheckBox13111 = new javax.swing.JCheckBox();
        jLabel811 = new javax.swing.JLabel();
        jComboBox1111 = new javax.swing.JComboBox();
        jPanel92 = new javax.swing.JPanel();
        jCheckBox122 = new javax.swing.JCheckBox();
        jCheckBox132 = new javax.swing.JCheckBox();
        jCheckBox141 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel921 = new javax.swing.JPanel();
        jCheckBox1221 = new javax.swing.JCheckBox();
        jCheckBox1321 = new javax.swing.JCheckBox();
        jCheckBox1411 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();
        jPanel411 = new javax.swing.JPanel();
        jTextField911 = new javax.swing.JTextField();
        searchButton11 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel412 = new javax.swing.JPanel();
        jTextField91 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel111 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jLabel111 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel6 = new javax.swing.JLabel();
        jButton71 = new javax.swing.JButton();
        jButton81 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton61 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel92 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel43 = new javax.swing.JPanel();
        jTextField93 = new javax.swing.JTextField();
        searchButton3 = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        this.jTextField7.setVisible(true);
        jPanel421 = new javax.swing.JPanel();
        searchButton21 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField921 = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel82 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        jCheckBox71 = new javax.swing.JCheckBox();
        jCheckBox81 = new javax.swing.JCheckBox();
        jTextField121 = new javax.swing.JTextField();
        jLabel121 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jCheckBox52 = new javax.swing.JCheckBox();
        jCheckBox63 = new javax.swing.JCheckBox();
        jPanel413 = new javax.swing.JPanel();
        jTextField912 = new javax.swing.JTextField();
        searchButton12 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox61 = new javax.swing.JCheckBox();
        jCheckBox212 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jSeparator13 = new javax.swing.JSeparator();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox51 = new javax.swing.JCheckBox();
        jPanel93 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        datePicker12 = new com.afrisoftech.lib.DatePicker();
        jPanel34 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable13 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel72 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable111 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true,true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel52 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton14 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton121 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jCheckBox511 = new javax.swing.JCheckBox();
        jPanel25 = new javax.swing.JPanel();
        jPanel211 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable14 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,  java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class,java.lang.Object.class,java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false,false, false, true,false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jButton34 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jPanel212 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable15 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.Object.class, java.lang.Object.class,java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jLabel24 = new javax.swing.JLabel();
        datePicker13 = new com.afrisoftech.lib.DatePicker();
        jButton35 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JSeparator();
        jTextField63 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel83 = new javax.swing.JPanel();
        jCheckBox53 = new javax.swing.JCheckBox();
        jCheckBox62 = new javax.swing.JCheckBox();
        jCheckBox72 = new javax.swing.JCheckBox();
        jCheckBox82 = new javax.swing.JCheckBox();
        jCheckBox91 = new javax.swing.JCheckBox();
        jPanel73 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel83 = new javax.swing.JLabel();
        jTextField94 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jTextField71 = new javax.swing.JTextField();
        this.jTextField7.setVisible(false);
        jPanel61 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton4 = new javax.swing.JButton();
        jTextField51 = new javax.swing.JTextField();
        jLabel114 = new javax.swing.JLabel();
        jTextField114 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jPanel35 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        datePicker14 = new com.afrisoftech.lib.DatePicker();
        jLabel101 = new javax.swing.JLabel();
        jTextField101 = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        datePicker111 = new com.afrisoftech.lib.DatePicker();
        jLabel612 = new javax.swing.JLabel();
        jLabel621 = new javax.swing.JLabel();
        datePicker121 = new com.afrisoftech.lib.DatePicker();
        jLabel54 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jTextField81 = new javax.swing.JTextField();

        jButton15 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jSeparator15 = new javax.swing.JSeparator();
        jPanel19 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel231 = new javax.swing.JPanel();
        jPanel811 = new javax.swing.JPanel();
        jLabel1133 = new javax.swing.JLabel();
        jTextField1213 = new javax.swing.JTextField();
        jLabel342 = new javax.swing.JLabel();
        jTextField241 = new javax.swing.JTextField();
        jLabel241 = new javax.swing.JLabel();
        jTextField181 = new javax.swing.JTextField();
        jScrollPane161 = new javax.swing.JScrollPane();
        jTextPane14 = new javax.swing.JTextPane();
        jLabel122 = new javax.swing.JLabel();

        jButton122 = new javax.swing.JButton();
        jTextField1711 = new javax.swing.JTextField();
        jLabel9211 = new javax.swing.JLabel();
        jLabel2311 = new javax.swing.JLabel();
        jTextField811 = new javax.swing.JTextField();
        jLabel11311 = new javax.swing.JLabel();
        jTextField12111 = new javax.swing.JTextField();
        jButton541 = new javax.swing.JButton();
        jPanel423 = new javax.swing.JPanel();
        jTextField923 = new javax.swing.JTextField();
        searchButton23 = new javax.swing.JButton();
        jTextField115 = new javax.swing.JTextField();
        jTextField211 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jLabel911 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel311 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jPanel32 = new javax.swing.JPanel();
        jCheckBox32 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchScrollPane1.setDoubleBuffered(true);
        jSearchTable1.setDoubleBuffered(true);
        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton911.setText("Dispose");
        jButton911.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton911ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton911, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField112, gridBagConstraints);

        jSearchScrollPane.setDoubleBuffered(true);
        jSearchTable.setDoubleBuffered(true);
        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton92.setText("Dispose");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Dispose");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog211.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog211.setModal(true);
        jSearchDialog211.setUndecorated(true);
        jSearchPanel211.setLayout(new java.awt.GridBagLayout());

        jSearchPanel211.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11311.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11311CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel211.add(jTextField11311, gridBagConstraints);

        jSearchTable211.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable211.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable211.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable211MouseClicked(evt);
            }
        });

        jSearchScrollPane211.setViewportView(jSearchTable211);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel211.add(jSearchScrollPane211, gridBagConstraints);

        jButton5211.setText("Dispose");
        jButton5211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton5211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog211.getContentPane().add(jSearchPanel211, gridBagConstraints);

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton522.setText("Dispose");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog212.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog212.setModal(true);
        jSearchDialog212.setUndecorated(true);
        jSearchPanel212.setLayout(new java.awt.GridBagLayout());

        jSearchPanel212.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11312.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11312CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel212.add(jTextField11312, gridBagConstraints);

        jSearchTable213.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable213.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable213.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable213MouseClicked(evt);
            }
        });

        jSearchScrollPane213.setViewportView(jSearchTable213);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel212.add(jSearchScrollPane213, gridBagConstraints);

        jButton5213.setText("Dispose");
        jButton5213.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5213ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel212.add(jButton5213, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog212.getContentPane().add(jSearchPanel212, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog213.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog213.setModal(true);
        jSearchDialog213.setUndecorated(true);
        jSearchPanel213.setLayout(new java.awt.GridBagLayout());

        jSearchPanel213.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11313.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11313CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel213.add(jTextField11313, gridBagConstraints);

        jSearchScrollPane212.setDoubleBuffered(true);
        jSearchTable212.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jSearchTable212.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable212.setDoubleBuffered(true);
        jSearchTable212.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable212.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable212MouseClicked(evt);
            }
        });

        jSearchScrollPane212.setViewportView(jSearchTable212);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel213.add(jSearchScrollPane212, gridBagConstraints);

        jButton5212.setText("Dispose");
        jButton5212.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5212ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel213.add(jButton5212, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog213.getContentPane().add(jSearchPanel213, gridBagConstraints);

        jSearchDialog214.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog214.setModal(true);
        jSearchDialog214.setUndecorated(true);
        jSearchPanel214.setLayout(new java.awt.GridBagLayout());

        jSearchPanel214.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11314.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11314CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel214.add(jTextField11314, gridBagConstraints);

        jSearchScrollPane214.setDoubleBuffered(true);
        jSearchTable214.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable214.setDoubleBuffered(true);
        jSearchTable214.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable214.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable214MouseClicked(evt);
            }
        });

        jSearchScrollPane214.setViewportView(jSearchTable214);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel214.add(jSearchScrollPane214, gridBagConstraints);

        jButton5214.setText("Dispose");
        jButton5214.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5214ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel214.add(jButton5214, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog214.getContentPane().add(jSearchPanel214, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consultation");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setAutoscrolls(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Trans Date", "Time", "Patient No", "Name", "Payment Mode", "Seen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel21.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jPanel2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 255), 2, true), "Click The Relevant Button", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 255)));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT Clinics FROM pb_clinics ORDER BY code asc"));

        jComboBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jComboBox11, gridBagConstraints);

        jLabel2.setText("Choose Clinic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel812.setForeground(new java.awt.Color(255, 0, 51));
        jLabel812.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel812, gridBagConstraints);

        jPanel422.setLayout(new java.awt.GridBagLayout());

        jPanel422.setBorder(new javax.swing.border.EtchedBorder());
        searchButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton22.setToolTipText("Search");
        searchButton22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton22.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton22.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton22.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton22ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel422.add(searchButton22, gridBagConstraints);

        jTextField82.setEditable(false);
        try {

            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select first_name||' '||middle_name as name,staff_no from pb_doctors_list where status ilike  'active' order by name");
            while (rset1.next()){
                jTextField82.setText(rset1.getObject(1).toString());

            }

        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel422.add(jTextField82, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jPanel422, gridBagConstraints);

        jLabel102.setText("Doctor No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel102, gridBagConstraints);

        jTextField922.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField922, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jSeparator1, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTextField6, gridBagConstraints);

        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton6, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel1, gridBagConstraints);

        jTabbedPane2.addTab("Waiting List", jPanel3);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jSeparator12, gridBagConstraints);

        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jLabel71, gridBagConstraints);

        jTextField62.setEditable(false);
        jTextField62.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField62.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jPanel7.add(jTextField62, gridBagConstraints);

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel12.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel23.setLayout(new java.awt.GridBagLayout());

        jPanel23.setBorder(new javax.swing.border.MatteBorder(null));
        jLabel91.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jLabel91, gridBagConstraints);

        jLabel12.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jLabel12, gridBagConstraints);

        jTextField11.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jTextField11, gridBagConstraints);

        jLabel22.setText("Doctor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel23.add(jLabel22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(datePicker11, gridBagConstraints);

        jLabel51.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jLabel51, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(new javax.swing.border.EtchedBorder());
        jTextField92.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jPanel42, gridBagConstraints);

        jLabel31.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel23.add(jLabel31, gridBagConstraints);

        jTextField21.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel23.add(jTextField21, gridBagConstraints);

        jPanel4111.setLayout(new java.awt.GridBagLayout());

        jPanel4111.setBorder(new javax.swing.border.EtchedBorder());
        jTextField9111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4111.add(jTextField9111, gridBagConstraints);

        searchButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton111.setToolTipText("Search");
        searchButton111.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton111.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton111.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton111.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4111.add(searchButton111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel23.add(jPanel4111, gridBagConstraints);

        jButton72.setText("Click For History");
        jButton72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton72ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel23.add(jButton72, gridBagConstraints);

        jButton82.setText("Click For Clinical Examination");
        jButton82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton82ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        jPanel23.add(jButton82, gridBagConstraints);

        jLabel3.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel23.add(jTextField2, gridBagConstraints);

        jButton1.setText("Patient Card/Notes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel23.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel12.add(jPanel23, gridBagConstraints);

        jScrollPane13.setViewportView(jEditorPane11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel12.add(jScrollPane13, gridBagConstraints);

        jLabel61.setText("Treatment Plan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        jPanel12.add(jLabel61, gridBagConstraints);

        jScrollPane121.setViewportView(jEditorPane111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel12.add(jScrollPane121, gridBagConstraints);

        jLabel611.setText("Patient Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel12.add(jLabel611, gridBagConstraints);

        jScrollPane131.setViewportView(jEditorPane112);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 8.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel12.add(jScrollPane131, gridBagConstraints);

        jScrollPane132.setViewportView(jEditorPane113);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel12.add(jScrollPane132, gridBagConstraints);

        jLabel30.setText("Clinical Examination");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        jPanel12.add(jLabel30, gridBagConstraints);

        jLabel35.setText("Diagnosis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel12.add(jLabel35, gridBagConstraints);

        jPanel41111.setLayout(new java.awt.GridBagLayout());

        jPanel41111.setBorder(new javax.swing.border.EtchedBorder());
        jTextField91111.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41111.add(jTextField91111, gridBagConstraints);

        searchButton1111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1111.setToolTipText("Search");
        searchButton1111.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1111.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1111.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1111.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41111.add(searchButton1111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel12.add(jPanel41111, gridBagConstraints);

        jLabel27.setText("Vital Signs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jLabel27, gridBagConstraints);

        jEditorPane2.setEditable(false);
        jScrollPane4.setViewportView(jEditorPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel7.add(jPanel12, gridBagConstraints);

        jPanel81.setLayout(new java.awt.GridBagLayout());

        jButton52.setMnemonic('A');
        jButton52.setText("Admit");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel81.add(jButton52, gridBagConstraints);

        jButton42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton42.setMnemonic('C');
        jButton42.setText("Close");
        jButton42.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel81.add(jButton42, gridBagConstraints);

        jButton32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton32.setMnemonic('l');
        jButton32.setText("Clear");
        jButton32.setToolTipText("Click here to clear textfields");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel81.add(jButton32, gridBagConstraints);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton13.setMnemonic('O');
        jButton13.setText("Ok");
        jButton13.setToolTipText("Click here enter data");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel81.add(jButton13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jPanel81, gridBagConstraints);

        jTabbedPane2.addTab("Patient File", jPanel7);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jSeparator11, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel7, gridBagConstraints);

        jTextField61.setEditable(false);
        jTextField61.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField61.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jPanel4.add(jTextField61, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jPanel22.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.TitledBorder("Marital Status"));
        jCheckBox1.setText("Under Age");
        buttonGroup4.add(jCheckBox1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Married");
        buttonGroup4.add(jCheckBox2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jCheckBox2, gridBagConstraints);

        jCheckBox5.setText("Widowed");
        buttonGroup4.add(jCheckBox5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jCheckBox5, gridBagConstraints);

        jCheckBox6.setText("Separated");
        buttonGroup4.add(jCheckBox6);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jCheckBox6, gridBagConstraints);

        jCheckBox7.setText("Never Married");
        buttonGroup4.add(jCheckBox7);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jCheckBox7, gridBagConstraints);

        jCheckBox8.setText("Engaged");
        buttonGroup4.add(jCheckBox8);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel6.add(jCheckBox8, gridBagConstraints);

        jCheckBox9.setText("Co-habiting");
        buttonGroup4.add(jCheckBox9);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(jCheckBox9, gridBagConstraints);

        jCheckBox10.setText("Divorced");
        buttonGroup4.add(jCheckBox10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jCheckBox10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel22.add(jPanel6, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel9.setBorder(new javax.swing.border.TitledBorder("Sexual History"));
        jCheckBox12.setText("N/A");
        buttonGroup2.add(jCheckBox12);
        jPanel9.add(jCheckBox12, new java.awt.GridBagConstraints());

        jCheckBox13.setText("Active");
        buttonGroup2.add(jCheckBox13);
        jPanel9.add(jCheckBox13, new java.awt.GridBagConstraints());

        jCheckBox14.setText("Not Active");
        buttonGroup2.add(jCheckBox14);
        jPanel9.add(jCheckBox14, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel9, gridBagConstraints);

        jPanel91.setLayout(new java.awt.GridBagLayout());

        jPanel91.setBorder(new javax.swing.border.TitledBorder("Current Contraceptive Use"));
        jCheckBox121.setText("Yes");
        buttonGroup5.add(jCheckBox121);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel91.add(jCheckBox121, gridBagConstraints);

        jCheckBox131.setText("No");
        buttonGroup5.add(jCheckBox131);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel91.add(jCheckBox131, gridBagConstraints);

        jLabel8.setText("Method");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel91.add(jLabel8, gridBagConstraints);

        jComboBox1.setEditable(true);
        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT description FROM pb_contraceptives where category  ilike 'contr%' order by description"));
        java.lang.Object[] strCmb = {"Payable","Receivable","Both"};

        javax.swing.JComboBox cmBox = new javax.swing.JComboBox(strCmb);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel91.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel91, gridBagConstraints);

        jPanel911.setLayout(new java.awt.GridBagLayout());

        jPanel911.setBorder(new javax.swing.border.TitledBorder("Chronic Illness"));
        jCheckBox1211.setText("Yes");
        buttonGroup7.add(jCheckBox1211);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel911.add(jCheckBox1211, gridBagConstraints);

        jCheckBox1311.setText("No");
        buttonGroup7.add(jCheckBox1311);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel911.add(jCheckBox1311, gridBagConstraints);

        jLabel81.setText("Illness");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel911.add(jLabel81, gridBagConstraints);

        jComboBox111.setEditable(true);
        jComboBox111.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT disease_name FROM HP_DISEASES where diseases_category  ilike 'Life%' order by disease_name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel911.add(jComboBox111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel911, gridBagConstraints);

        jPanel9111.setLayout(new java.awt.GridBagLayout());

        jPanel9111.setBorder(new javax.swing.border.TitledBorder("Drug Allergy"));
        jCheckBox12111.setText("Yes");
        buttonGroup6.add(jCheckBox12111);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel9111.add(jCheckBox12111, gridBagConstraints);

        jCheckBox13111.setText("No");
        buttonGroup6.add(jCheckBox13111);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel9111.add(jCheckBox13111, gridBagConstraints);

        jLabel811.setText("Medicine");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel9111.add(jLabel811, gridBagConstraints);

        jComboBox1111.setEditable(true);
        jComboBox1111.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "SELECT description FROM pb_contraceptives where category  ilike 'drug%' order by description"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9111.add(jComboBox1111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel9111, gridBagConstraints);

        jPanel92.setLayout(new java.awt.GridBagLayout());

        jPanel92.setBorder(new javax.swing.border.TitledBorder("Alcohol Use"));
        jCheckBox122.setText("None");
        buttonGroup9.add(jCheckBox122);
        jPanel92.add(jCheckBox122, new java.awt.GridBagConstraints());

        jCheckBox132.setText("Occational");
        buttonGroup9.add(jCheckBox132);
        jPanel92.add(jCheckBox132, new java.awt.GridBagConstraints());

        jCheckBox141.setText("Moderate");
        buttonGroup9.add(jCheckBox141);
        jPanel92.add(jCheckBox141, new java.awt.GridBagConstraints());

        jCheckBox3.setText("Heavy");
        buttonGroup9.add(jCheckBox3);
        jPanel92.add(jCheckBox3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel92, gridBagConstraints);

        jPanel921.setLayout(new java.awt.GridBagLayout());

        jPanel921.setBorder(new javax.swing.border.TitledBorder("Smoking"));
        jCheckBox1221.setText("None");
        buttonGroup11.add(jCheckBox1221);
        jPanel921.add(jCheckBox1221, new java.awt.GridBagConstraints());

        jCheckBox1321.setText("Occational");
        buttonGroup11.add(jCheckBox1321);
        jPanel921.add(jCheckBox1321, new java.awt.GridBagConstraints());

        jCheckBox1411.setText("Moderate");
        buttonGroup11.add(jCheckBox1411);
        jPanel921.add(jCheckBox1411, new java.awt.GridBagConstraints());

        jCheckBox31.setText("Heavy");
        buttonGroup11.add(jCheckBox31);
        jPanel921.add(jCheckBox31, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel921, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jPanel41.setLayout(new java.awt.GridBagLayout());

        jPanel41.setBorder(new javax.swing.border.EtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel41.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jPanel41, gridBagConstraints);

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel9, gridBagConstraints);

        jLabel11.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel11, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField1, gridBagConstraints);

        jLabel5.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(datePicker1, gridBagConstraints);

        jPanel411.setLayout(new java.awt.GridBagLayout());

        jPanel411.setBorder(new javax.swing.border.EtchedBorder());
        jTextField911.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel411.add(jTextField911, gridBagConstraints);

        searchButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton11.setToolTipText("Search");
        searchButton11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton11.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton11.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel411.add(searchButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel13.add(jPanel411, gridBagConstraints);

        jLabel21.setText("Doctor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel13.add(jLabel21, gridBagConstraints);

        jLabel4.setText("History Heading");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(jLabel4, gridBagConstraints);

        jPanel412.setLayout(new java.awt.GridBagLayout());

        jPanel412.setBorder(new javax.swing.border.EtchedBorder());
        jTextField91.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel412.add(jTextField91, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel412.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel13.add(jPanel412, gridBagConstraints);

        jLabel17.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel13.add(jLabel17, gridBagConstraints);

        jTextField16.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel13.add(jTextField16, gridBagConstraints);

        jLabel18.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jLabel18, gridBagConstraints);

        jTextField17.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jTextField17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(jPanel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 5);
        jPanel11.add(jPanel22, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel111.setLayout(new java.awt.GridBagLayout());

        jPanel111.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Symptom", "Severity", "Duration(days)", "Description"
            }
        ));
        javax.swing.table.TableColumn column3 = null;
        for (int i = 0; i < 3; i++) {
            column3 = jTable11.getColumnModel().getColumn(i);
            if (i == 0) {

                column3.setPreferredWidth(100); //sport column is bigger
            } else {
                if(i == 1){
                    column3.setPreferredWidth(50);
                }else{
                    if(i == 3){
                        column3.setPreferredWidth(250);
                    }else{
                        //if (i == 2) {
                            column3.setPreferredWidth(250);
                            // }  else
                        //column.setPreferredWidth(50);
                    }
                }
            }
        }

        java.lang.Object[] strCmb11 = {"Absent","Low","Moderate","Marked"};

        javax.swing.JComboBox cmBox11 = new javax.swing.JComboBox(strCmb11);

        javax.swing.table.TableColumn teditor11 = this.jTable11.getColumn("Severity");

        teditor11.setCellEditor(new javax.swing.DefaultCellEditor(cmBox11));
        jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable11MouseClicked(evt);
            }
        });

        jScrollPane11.setViewportView(jTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel111.add(jScrollPane11, gridBagConstraints);

        jLabel111.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel111.setText("Degree of Severity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 70);
        jPanel111.add(jLabel111, gridBagConstraints);

        jScrollPane12.setViewportView(jEditorPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel111.add(jScrollPane12, gridBagConstraints);

        jLabel6.setText("Remarks");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel111.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 70.0;
        jPanel5.add(jPanel111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 50.0;
        jPanel11.add(jPanel5, gridBagConstraints);

        jButton71.setText("Click For History");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel11.add(jButton71, gridBagConstraints);

        jButton81.setText("Click For Clinical Examination");
        jButton81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton81ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel11.add(jButton81, gridBagConstraints);

        jButton11.setText("Patient Card/Notes");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel11.add(jButton11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(jPanel11, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButton61.setMnemonic('r');
        jButton61.setText("Remove Row");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton61, gridBagConstraints);

        jButton51.setMnemonic('h');
        jButton51.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton51, gridBagConstraints);

        jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton41.setMnemonic('C');
        jButton41.setText("Close");
        jButton41.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton41, gridBagConstraints);

        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton31.setMnemonic('l');
        jButton31.setText("Clear");
        jButton31.setToolTipText("Click here to clear textfields");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton31, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton12.setMnemonic('O');
        jButton12.setText("Ok");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel8, gridBagConstraints);

        jTabbedPane2.addTab("Bio Data", jPanel4);

        jPanel14.setLayout(new java.awt.GridBagLayout());

        jPanel14.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel24.setLayout(new java.awt.GridBagLayout());

        jPanel24.setBorder(new javax.swing.border.TitledBorder("Select Patient Here"));
        jLabel92.setText("Service No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jLabel92, gridBagConstraints);

        jLabel13.setForeground(new java.awt.Color(255, 0, 51));
        jLabel13.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jLabel13, gridBagConstraints);

        jTextField12.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel24.add(jTextField12, gridBagConstraints);

        jLabel23.setForeground(new java.awt.Color(255, 0, 51));
        jLabel23.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel24.add(jLabel23, gridBagConstraints);

        jLabel32.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel24.add(jLabel32, gridBagConstraints);

        jTextField22.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel24.add(jTextField22, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jTextField4, gridBagConstraints);

        jComboBox12.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct UPPER(main_service) from pb_operating_parameters  EXCEPT select main_service from pb_operating_parameters WHERE category = 'CA'"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jComboBox12, gridBagConstraints);

        jPanel43.setLayout(new java.awt.GridBagLayout());

        jPanel43.setBorder(new javax.swing.border.EtchedBorder());
        jTextField93.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel43.add(jTextField93, gridBagConstraints);

        searchButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton3.setToolTipText("Search");
        searchButton3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton3.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton3.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel43.add(searchButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jPanel43, gridBagConstraints);

        jLabel42.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel24.add(jLabel42, gridBagConstraints);

        this.jTextField7.setVisible(true);
        jTextField7.setEditable(false);
        this.jTextField7.setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jTextField7, gridBagConstraints);

        jPanel421.setLayout(new java.awt.GridBagLayout());

        jPanel421.setBorder(new javax.swing.border.EtchedBorder());
        searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton21.setToolTipText("Search");
        searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton21ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel421.add(searchButton21, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel421.add(jTextField8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel24.add(jPanel421, gridBagConstraints);

        jLabel82.setForeground(new java.awt.Color(255, 0, 51));
        jLabel82.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel24.add(jLabel82, gridBagConstraints);

        jLabel10.setText("Doctor No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 1.0;
        jPanel24.add(jLabel10, gridBagConstraints);

        jTextField921.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jTextField921, gridBagConstraints);

        jLabel62.setText("Req No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel24.add(jLabel62, gridBagConstraints);

        jTextField10.setEditable(false);
        jTextField10.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField10.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel24.add(jTextField10, gridBagConstraints);

        jPanel82.setLayout(new java.awt.GridBagLayout());

        jPanel82.setBorder(new javax.swing.border.TitledBorder("Radiological Section"));
        jLabel113.setText("Provisional Diagnosis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel82.add(jLabel113, gridBagConstraints);

        jCheckBox71.setText("Yes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel82.add(jCheckBox71, gridBagConstraints);

        jCheckBox81.setText("No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel82.add(jCheckBox81, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel82.add(jTextField121, gridBagConstraints);

        jLabel121.setText("Has the patient Been Previously X-rayed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel82.add(jLabel121, gridBagConstraints);

        jLabel131.setText("LMP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel82.add(jLabel131, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel82.add(jTextField13, gridBagConstraints);

        jScrollPane3.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel82.add(jScrollPane3, gridBagConstraints);

        jLabel16.setText("Clinical Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel82.add(jLabel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jPanel82, gridBagConstraints);

        jLabel14.setText("Sex");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel24.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        jPanel24.add(jLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel24.add(jTextField15, gridBagConstraints);

        jCheckBox52.setText("MALE");
        buttonGroup12.add(jCheckBox52);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        jPanel24.add(jCheckBox52, gridBagConstraints);

        jCheckBox63.setText("FEMALE");
        buttonGroup12.add(jCheckBox63);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel24.add(jCheckBox63, gridBagConstraints);

        jPanel413.setLayout(new java.awt.GridBagLayout());

        jPanel413.setBorder(new javax.swing.border.EtchedBorder());
        jTextField912.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel413.add(jTextField912, gridBagConstraints);

        searchButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton12.setToolTipText("Search");
        searchButton12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton12.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton12.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel413.add(searchButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel24.add(jPanel413, gridBagConstraints);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jCheckBox16.setForeground(new java.awt.Color(51, 0, 255));
        jCheckBox16.setText("Other Procedures");
        buttonGroup3.add(jCheckBox16);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(jCheckBox16, gridBagConstraints);

        jCheckBox61.setForeground(new java.awt.Color(51, 0, 255));
        jCheckBox61.setText("Radiological");
        buttonGroup3.add(jCheckBox61);
        jCheckBox61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox61ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(jCheckBox61, gridBagConstraints);

        jCheckBox212.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBox212.setText("Laboratory");
        buttonGroup3.add(jCheckBox212);
        jCheckBox212.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox212ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(jCheckBox212, gridBagConstraints);

        jCheckBox15.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBox15.setSelected(true);
        jCheckBox15.setText("General");
        buttonGroup3.add(jCheckBox15);
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(jCheckBox15, gridBagConstraints);

        jCheckBox22.setForeground(new java.awt.Color(0, 0, 255));
        jCheckBox22.setText("Pharmacy");
        buttonGroup3.add(jCheckBox22);
        jCheckBox22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox22ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(jCheckBox22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel24.add(jPanel18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel24, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel14.add(jSeparator13, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jCheckBox42.setText("Search By Code");
        buttonGroup10.add(jCheckBox42);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox42, gridBagConstraints);

        jCheckBox51.setSelected(true);
        jCheckBox51.setText("Search By Name");
        buttonGroup10.add(jCheckBox51);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel14.add(jPanel10, gridBagConstraints);

        jPanel93.setLayout(new java.awt.GridBagLayout());

        jLabel52.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel93.add(jLabel52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel93.add(datePicker12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel93, gridBagConstraints);

        jPanel34.setLayout(new java.awt.GridBagLayout());

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Service", "Quantity", "Price", "Amount", "GL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable13.setDragEnabled(true);
        jTable13.setGridColor(new java.awt.Color(204, 204, 255));
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable13.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(500); //sport column is bigger
            } else {
                if(i == 1){
                    column.setPreferredWidth(50);
                }else{
                    if(i == 5){
                        column.setPreferredWidth(250);
                    }else{
                        //if (i == 2) {
                            column.setPreferredWidth(100);
                            // }  else
                        //column.setPreferredWidth(50);
                    }
                }
            }
        }
        jTable13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable13MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable13);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel34.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel34, gridBagConstraints);

        jPanel72.setLayout(new java.awt.GridBagLayout());

        jTable111.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Drug", "Cost", "Route", "Freqcy", "No.of Days", "Dosage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable111.setGridColor(new java.awt.Color(204, 204, 255));
        javax.swing.table.TableColumn column1 = null;
        for (int i = 0; i < 5; i++) {
            column1 = jTable111.getColumnModel().getColumn(i);
            if (i == 0) {

                column1.setPreferredWidth(200); //sport column is bigger
            } else {
                if(i == 1){
                    column1.setPreferredWidth(100);
                }else{
                    if(i == 6){
                        column1.setPreferredWidth(100);
                    }else{
                        //if (i == 2) {
                            column1.setPreferredWidth(100);
                            // }  else
                        //column.setPreferredWidth(50);
                    }
                }
            }
        }

        java.lang.Object[] strCmb2 = {"Oral","I.M","I.V","Intramuscular","Topical","Vaginal","Rectal","Sublingual","Subcutaneuos","Intrathical","Intradermal"};

        javax.swing.JComboBox cmBox2 = new javax.swing.JComboBox(strCmb2);

        javax.swing.table.TableColumn teditor2 = this.jTable111.getColumn("Route");

        teditor2.setCellEditor(new javax.swing.DefaultCellEditor(cmBox2));

        java.lang.Object[] strCmb1 = {"OD","BD","TID","QID","Stat","Mane","Nocte","Prn"};

        javax.swing.JComboBox cmBox1 = new javax.swing.JComboBox(strCmb1);

        javax.swing.table.TableColumn teditor1 = this.jTable111.getColumn("Freqcy");

        teditor1.setCellEditor(new javax.swing.DefaultCellEditor(cmBox1));

        java.lang.Object[] strCmb3 = {"Once","1","3","5","7","14","30","90"};

        javax.swing.JComboBox cmBox3 = new javax.swing.JComboBox(strCmb3);
        cmBox3.setEditable(true);
        javax.swing.table.TableColumn teditor3 = this.jTable111.getColumn("No.of Days");

        teditor3.setCellEditor(new javax.swing.DefaultCellEditor(cmBox3));

        jTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable111MouseClicked(evt);
            }
        });

        jScrollPane14.setViewportView(jTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel72.add(jScrollPane14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel72, gridBagConstraints);

        jPanel52.setLayout(new java.awt.GridBagLayout());

        jPanel52.setBorder(new javax.swing.border.TitledBorder(""));
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton14.setMnemonic('s');
        jButton14.setText("Request");
        jButton14.setToolTipText("Click here enter data");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton14, gridBagConstraints);

        jButton121.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton121.setMnemonic('R');
        jButton121.setText("Req & Print");
        jButton121.setToolTipText("Click here enter data");
        jButton121.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton121ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton121, gridBagConstraints);

        jButton22.setText("Reprint");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel52.add(jButton22, gridBagConstraints);

        jButton63.setMnemonic('r');
        jButton63.setText("Remove Row");
        jButton63.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton63ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel52.add(jButton63, gridBagConstraints);

        jButton33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton33.setMnemonic('l');
        jButton33.setText("Clear");
        jButton33.setToolTipText("Click here to clear textfields");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton33, gridBagConstraints);

        jButton43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton43.setMnemonic('C');
        jButton43.setText("Close");
        jButton43.setToolTipText("Click here to close window");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton43, gridBagConstraints);

        jButton5.setMnemonic('R');
        jButton5.setText("Replace");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel52.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel52, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel14.add(jTextField3, gridBagConstraints);

        jLabel53.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel53, gridBagConstraints);

        jCheckBox511.setText("Search By Brand Name");
        buttonGroup10.add(jCheckBox511);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel14.add(jCheckBox511, gridBagConstraints);

        jTabbedPane2.addTab("Request", jPanel14);

        jPanel25.setLayout(new java.awt.GridBagLayout());

        jPanel25.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel211.setLayout(new java.awt.GridBagLayout());

        jScrollPane15.setAutoscrolls(true);
        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Time", "Pat No.", "Pat Name", "Unit", "Service", "Qty", "Amount", "No", "Doctor", "Bill", "Bed No", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jTable14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable14MouseClicked(evt);
            }
        });

        jScrollPane15.setViewportView(jTable14);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel211.add(jScrollPane15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel25.add(jPanel211, gridBagConstraints);

        jButton34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton34.setMnemonic('l');
        jButton34.setText("Refresh");
        jButton34.setToolTipText("Click here to clear textfields");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel25.add(jButton34, gridBagConstraints);

        jButton44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton44.setMnemonic('C');
        jButton44.setText("Close");
        jButton44.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel25.add(jButton44, gridBagConstraints);

        jTabbedPane2.addTab("Lab Pending Requests", jPanel25);

        jPanel26.setLayout(new java.awt.GridBagLayout());

        jPanel26.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel212.setLayout(new java.awt.GridBagLayout());

        jScrollPane16.setAutoscrolls(true);
        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Pat No", "Name", "No", "Read"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jTable15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable15MouseClicked(evt);
            }
        });

        jScrollPane16.setViewportView(jTable15);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel212.add(jScrollPane16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel26.add(jPanel212, gridBagConstraints);

        jLabel24.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel26.add(jLabel24, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel26.add(datePicker13, gridBagConstraints);

        jButton35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton35.setMnemonic('l');
        jButton35.setText("Refresh");
        jButton35.setToolTipText("Click here to clear textfields");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(jButton35, gridBagConstraints);

        jButton45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton45.setMnemonic('C');
        jButton45.setText("Close");
        jButton45.setToolTipText("Click here to close window");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(jButton45, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel26.add(jSeparator14, gridBagConstraints);

        jTextField63.setEditable(false);
        jTextField63.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField63.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel26.add(jTextField63, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel26.add(jLabel19, gridBagConstraints);

        jTabbedPane2.addTab("Lab Pending Results", jPanel26);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jPanel83.setLayout(new java.awt.GridBagLayout());

        jPanel83.setBorder(new javax.swing.border.TitledBorder("Excemptions"));
        jCheckBox53.setText("Attend Work");
        buttonGroup6.add(jCheckBox53);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel83.add(jCheckBox53, gridBagConstraints);

        jCheckBox62.setText("School");
        buttonGroup6.add(jCheckBox62);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel83.add(jCheckBox62, gridBagConstraints);

        jCheckBox72.setText("Do Heavy Manual Work");
        buttonGroup6.add(jCheckBox72);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel83.add(jCheckBox72, gridBagConstraints);

        jCheckBox82.setText("Drive/Handle Heavy machinery");
        buttonGroup6.add(jCheckBox82);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel83.add(jCheckBox82, gridBagConstraints);

        jCheckBox91.setText("Others");
        buttonGroup6.add(jCheckBox91);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel83.add(jCheckBox91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel83, gridBagConstraints);

        jPanel73.setLayout(new java.awt.GridBagLayout());

        jPanel73.setBorder(new javax.swing.border.TitledBorder("Recommedations"));
        jRadioButton1.setText("Strict Bed Rest");
        buttonGroup7.add(jRadioButton1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel73.add(jRadioButton1, gridBagConstraints);

        jRadioButton2.setText("Convalesce at home");
        buttonGroup7.add(jRadioButton2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel73.add(jRadioButton2, gridBagConstraints);

        jRadioButton3.setText("Light duties at work");
        buttonGroup7.add(jRadioButton3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel73.add(jRadioButton3, gridBagConstraints);

        jRadioButton4.setText("Others");
        buttonGroup7.add(jRadioButton4);
        jPanel73.add(jRadioButton4, new java.awt.GridBagConstraints());

        jLabel83.setText("Explanation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel73.add(jLabel83, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel73.add(jTextField94, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel73, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel16.setBorder(new javax.swing.border.TitledBorder("Select patient here"));
        jPanel27.setLayout(new java.awt.GridBagLayout());

        jLabel93.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jLabel93, gridBagConstraints);

        jLabel110.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jLabel110, gridBagConstraints);

        jTextField18.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel27.add(jTextField18, gridBagConstraints);

        jLabel33.setText("Company");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        jPanel27.add(jLabel33, gridBagConstraints);

        jTextField23.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel27.add(jTextField23, gridBagConstraints);

        jLabel43.setText("Member No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel27.add(jLabel43, gridBagConstraints);

        jTextField41.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel27.add(jTextField41, gridBagConstraints);

        jTextField71.setEditable(false);
        jTextField71.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField71.setPreferredSize(new java.awt.Dimension(0, 0));
        jTextField71.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel27.add(jTextField71, gridBagConstraints);

        jPanel61.setLayout(new java.awt.GridBagLayout());

        jPanel61.setBorder(new javax.swing.border.EtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 37));
        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField36, gridBagConstraints);

        searchButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton4.setToolTipText("Search");
        searchButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton4.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton4.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel61.add(searchButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel27.add(jPanel61, gridBagConstraints);

        jTextField51.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField51.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel27.add(jTextField51, gridBagConstraints);

        jLabel114.setText("Account No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jPanel27.add(jLabel114, gridBagConstraints);

        jTextField114.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jPanel27.add(jTextField114, gridBagConstraints);

        jLabel20.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel27.add(jLabel20, gridBagConstraints);

        jTextField19.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel27.add(jTextField19, gridBagConstraints);

        jLabel26.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        jPanel27.add(jLabel26, gridBagConstraints);

        jTextField20.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel27.add(jTextField20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(jPanel27, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(jPanel16, gridBagConstraints);

        jPanel35.setLayout(new java.awt.GridBagLayout());

        jPanel35.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel63.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel35.add(jLabel63, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel35.add(datePicker14, gridBagConstraints);

        jLabel101.setText("Sheet No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel35.add(jLabel101, gridBagConstraints);

        jTextField101.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel35.add(jTextField101, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel35, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(datePicker111, gridBagConstraints);

        jLabel612.setText("Start Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(jLabel612, gridBagConstraints);

        jLabel621.setText("Resumption Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(jLabel621, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel17.add(datePicker121, gridBagConstraints);

        jLabel54.setText("No. of sick Days");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        jPanel17.add(jLabel54, gridBagConstraints);

        jLabel25.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        jPanel17.add(jLabel25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jTextField31, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel17.add(jTextField81, gridBagConstraints);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton15.setMnemonic('O');
        jButton15.setText("Ok");
        jButton15.setToolTipText("Click here enter data");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jButton15, gridBagConstraints);

        jButton36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton36.setMnemonic('l');
        jButton36.setText("Clear");
        jButton36.setToolTipText("Click here to clear textfields");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jButton36, gridBagConstraints);

        jButton46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton46.setMnemonic('C');
        jButton46.setText("Close");
        jButton46.setToolTipText("Click here to close window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jButton46, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(jSeparator15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jPanel17, gridBagConstraints);

        jTabbedPane2.addTab("Sick Leave", jPanel15);

        jPanel19.setLayout(new java.awt.GridBagLayout());

        jButton2.setText("Booking");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel19.add(jButton2, gridBagConstraints);

        jButton8.setText("BID");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel19.add(jButton8, gridBagConstraints);

        jPanel231.setLayout(new java.awt.GridBagLayout());

        jPanel231.setBorder(new javax.swing.border.TitledBorder(null, "External Transfer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(51, 0, 255)));
        jPanel811.setLayout(new java.awt.GridBagLayout());

        jPanel811.setBorder(new javax.swing.border.TitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(153, 0, 153)));
        jLabel1133.setText("Consultants I/C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel811.add(jLabel1133, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel811.add(jTextField1213, gridBagConstraints);

        jLabel342.setText("Es. Nurse");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel811.add(jLabel342, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel811.add(jTextField241, gridBagConstraints);

        jLabel241.setText("Transferring  Clinician");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel811.add(jLabel241, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel811.add(jTextField181, gridBagConstraints);

        jScrollPane161.setViewportView(jTextPane14);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel811.add(jScrollPane161, gridBagConstraints);

        jLabel122.setText("Clinical Summ.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel811.add(jLabel122, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        jPanel231.add(jPanel811, gridBagConstraints);

        jButton122.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton122.setMnemonic('O');
        jButton122.setText("Ok");
        jButton122.setToolTipText("Click here enter data");
        jButton122.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton122ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jButton122, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jTextField1711, gridBagConstraints);

        jLabel9211.setText("Institution Transferred to");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel231.add(jLabel9211, gridBagConstraints);

        jLabel2311.setText("Reason for Transfer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jLabel2311, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jTextField811, gridBagConstraints);

        jLabel11311.setText("Provisional Diagnosis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jLabel11311, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel231.add(jTextField12111, gridBagConstraints);

        jButton541.setText("Report");
        jButton541.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton541ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel231.add(jButton541, gridBagConstraints);

        jPanel423.setLayout(new java.awt.GridBagLayout());

        jPanel423.setBorder(new javax.swing.border.EtchedBorder());
        jTextField923.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel423.add(jTextField923, gridBagConstraints);

        searchButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton23.setToolTipText("Search");
        searchButton23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton23.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton23.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton23.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton23ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel423.add(searchButton23, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jPanel423, gridBagConstraints);

        jTextField115.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jTextField115, gridBagConstraints);

        jTextField211.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel231.add(jTextField211, gridBagConstraints);

        jTextField24.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel231.add(jTextField24, gridBagConstraints);

        jLabel911.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jLabel911, gridBagConstraints);

        jLabel123.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jLabel123, gridBagConstraints);

        jLabel311.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel231.add(jLabel311, gridBagConstraints);

        jLabel34.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel231.add(jLabel34, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel19.add(jPanel231, gridBagConstraints);

        jTabbedPane2.addTab("Others", jPanel19);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane2, gridBagConstraints);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jCheckBox11.setForeground(new java.awt.Color(51, 51, 255));
        jCheckBox11.setMnemonic('o');
        jCheckBox11.setSelected(true);
        jCheckBox11.setText("Out Patients");
        buttonGroup8.add(jCheckBox11);
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jCheckBox11, gridBagConstraints);

        jCheckBox21.setForeground(new java.awt.Color(255, 0, 51));
        jCheckBox21.setMnemonic('i');
        jCheckBox21.setText("InPatients");
        buttonGroup8.add(jCheckBox21);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jCheckBox21, gridBagConstraints);

        jPanel32.setLayout(new java.awt.GridBagLayout());

        jPanel32.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCheckBox32.setSelected(true);
        jCheckBox32.setText("Search By  No.");
        buttonGroup9.add(jCheckBox32);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel32.add(jCheckBox32, gridBagConstraints);

        jCheckBox4.setText("Search By Name");
        buttonGroup9.add(jCheckBox4);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel32.add(jCheckBox4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel31.add(jPanel32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel31, gridBagConstraints);

        setBounds(0, 0, 794, 647);
    }//GEN-END:initComponents

    private void jButton541ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton541ActionPerformed
      com.afrisoftech.laboratory.RefferalExtPdf pol = new com.afrisoftech.laboratory.RefferalExtPdf();
        pol.RefferalExtPdf(connectDB, jTextField9.getText(),jTextField9.getText());   // Add your handling code here:
    }//GEN-LAST:event_jButton541ActionPerformed

    private void searchButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton23ActionPerformed
        searchButtonClicked2e();   // Add your handling code here:
    
     // Add your handling code here:
    }//GEN-LAST:event_searchButton23ActionPerformed
 private void searchButtonClicked2e() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField923.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    } 
    private void jButton122ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton122ActionPerformed
        if(this.jTextField115.getText().equals("") ||jTextField115.getText().equals(null)){
            javax.swing.JOptionPane.showMessageDialog(this,"Name Missing","Error Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            String user = null;
            try {
                connectDB.setAutoCommit(false);
                
                
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select current_user");
                while (rst11.next()){
                    user = rst11.getObject(1).toString();
                }
                
                java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_refferal_ext values(?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?,?,?)");
                
                pstmt2.setString(1,jTextField115.getText());
                pstmt2.setString(2,jTextField923.getText());
                pstmt2.setString(3,jTextField24.getText());
                pstmt2.setString(4,jTextField211.getText());
                
                pstmt2.setObject(6,jTextField181.getText());
                
                pstmt2.setObject(5,jTextField9111.getText());
                
                
                //pstmt2.setString(7,jTextField2.getText());
                pstmt2.setString(8,jTextField12111.getText());
                pstmt2.setString(7,jTextField811.getText());
                pstmt2.setString(9,jTextField1711.getText());
                pstmt2.setString(10,jTextPane14.getText());
                
                pstmt2.setObject(11,jTextField241.getText());
                
                pstmt2.setObject(12,jTextField1213.getText());
                
                pstmt2.setString(13,user);
                pstmt2.setString(14,datePicker11.getDate().toString());
                pstmt2.setObject(15,"");
                pstmt2.setObject(16,jTextField181.getText());
                pstmt2.setObject(17,"");
                
                
                pstmt2.executeUpdate();
                
                
                
                
                connectDB.commit();
                connectDB.setAutoCommit(true);
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                com.afrisoftech.laboratory.RefferalExtPdf pol = new com.afrisoftech.laboratory.RefferalExtPdf();
                pol.RefferalExtPdf(connectDB, jTextField9.getText(),jTextField9.getText());
                
                // }
                jTextField1.setText("");
                // jTextField2.setText("");
                //            jTextField4.setText("");
                //            jTextField36.setText("");
                // }else{
                //   javax.swing.JOptionPane.showMessageDialog(this,"Insert NOT Successful","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                // }
            }catch(java.sql.SQLException sq){
                
                try {
                    connectDB.rollback();
                }catch (java.sql.SQLException sql){
                    javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                System.out.println(sq.getMessage());
                javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton122ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
      javax.swing.JInternalFrame other = new com.afrisoftech.accounting.DeathNotificationIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   javax.swing.JInternalFrame other = new com.afrisoftech.hospital.TheatreBookingIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);       // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jButton5214ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5214ActionPerformed
        jSearchDialog214.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5214ActionPerformed
    
    private void jTextField11314CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11314CaretUpdate
        if(this.jCheckBox22.isSelected()){
            
            if(jTextField11314.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                jSearchTable214.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct inv_no,patient_no,patient_name FROM pb_doctors_request WHERE inv_no ILIKE '%"+jTextField11314.getText()+"%' and revenue_code ilike '%pharm%' and patient_no='"+jTextField93.getText()+"'  order by inv_no"));
                //  select product as service_type,selling_price as price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike '"+jComboBox1.getSelectedItem()+"%' order by service_type
                
                
                jSearchScrollPane214.setViewportView(jSearchTable214);
                
                
            }
        }else{
        }// Add your handling code here:
    }//GEN-LAST:event_jTextField11314CaretUpdate
    
    private void jSearchTable214MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable214MouseClicked
        jTextField912.setText(jSearchTable214.getValueAt(jSearchTable214.getSelectedRow(), 0).toString());
        jSearchDialog214.dispose();
        int i = 0;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select service,amount,requisition_no,bed_no,time_due,dosage from pb_doctors_request where inv_no = '"+jTextField912.getText()+"'");
            while (rset1.next()){
                jTable111.setValueAt(rset1.getObject(1),i,0);
                jTable111.setValueAt(rset1.getObject(2),i,1);
                jTable111.setValueAt(rset1.getObject(3),i,2);
                jTable111.setValueAt(rset1.getObject(4),i,3);
                jTable111.setValueAt(rset1.getObject(5),i,4);
                jTable111.setValueAt(rset1.getObject(6),i,5);
                i++;
            }
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable214MouseClicked
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String Xray = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String item = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
        String Sex = null;
        if (jCheckBox71.isSelected()){
            Xray = "Yes";
        }else{
            Xray = "No";
        }
        
        
        if (jCheckBox63.isSelected()){
            Sex=this.jCheckBox63.getText();
        }else{
            Sex=this.jCheckBox52.getText();
        }
        
        try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt1x = connectDB.prepareStatement("delete from pb_doctors_request where inv_no = '"+jTextField912.getText()+"' and patient_no = '"+jTextField93.getText()+"'");
            
            pstmt1x.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        //        this.jTable11.getModel().setValueAt("",10,5);
        
        try {
            connectDB.setAutoCommit(false);
            //this.jTextField9.setSelectionColor(java.awt.Color.blue);
            //   this.jTextField9.setOpaque(true);
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            
            
            
            
            
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            billNo =jTextField912.getText().toString();
            
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select current_user");
            while (rst11.next()){
                
                user = rst11.getObject(1).toString();
                
                
            }
            
            
            java.sql.Statement stm121q = connectDB.createStatement();
            for (int i = 0; i < jTable13.getRowCount(); i++){
                if (jTable13.getValueAt(i,0) != null){
                    java.sql.ResultSet rse121 = stm121q.executeQuery("select activity from pb_activity where code ='"+jTable13.getValueAt(i,4).toString()+"'");
                    
                    while (rse121.next()){
                        
                        glAcc = rse121.getObject(1).toString();
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into pb_doctors_request values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?), ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        
                        pstmt2.setString(1,jTextField93.getText());
                        
                        if (jTextField12.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Patient Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(2,jTextField12.getText());
                        }
                        // pstmt2.setString(2,jTextField1.getText());
                        pstmt2.setString(3,jTextField7.getText());
                        if (jTextField8.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Doctor's Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(4,jTextField8.getText());
                        }
                        //  pstmt2.setString(4,jTextField8.getText());
                        pstmt2.setString(5,jTable13.getValueAt(i,0).toString());
                        pstmt2.setString(6,jTable13.getValueAt(i,1).toString());
                        pstmt2.setString(7,jTable13.getValueAt(i,3).toString());
                        pstmt2.setObject(8,jTable13.getValueAt(i,4).toString());
                        pstmt2.setString(9,datePicker12.getDate().toString());
                        pstmt2.setString(10,billNo);
                        pstmt2.setString(12,"false");
                        pstmt2.setString(11,user);
                        pstmt2.setString(13,glAcc);
                        pstmt2.setString(14,billNo);
                        pstmt2.setString(15,Sex);
                        pstmt2.setBoolean(16,false);
                        pstmt2.setBoolean(17,false);
                        pstmt2.setString(18,Xray);
                        pstmt2.setString(19,jTextField13.getText().toString());
                        pstmt2.setString(20,"'now'");
                        pstmt2.setString(21,jComboBox11.getSelectedItem().toString());
                        pstmt2.setString(22,jTextField2.getText().toString());
                        pstmt2.setString(23,jTextField15.getText().toString());
                        pstmt2.setString(24,jTextPane1.getText().toString());
                        
                        pstmt2.setString(25,jComboBox11.getSelectedItem().toString());
                        pstmt2.setString(26,jTextField121.getText().toString());
                        
                        
                        
                        pstmt2.executeUpdate();
                    }
                    
                }
            }
            
            for (int i = 0; i < jTable111.getRowCount(); i++){
                if (jTable111.getValueAt(i,0) != null){
                    this.jTable111.setCellSelectionEnabled(false);
                    
                    //this.jTextField9.setHighlighter().;
                    //this.jTextField9.setOpaque(true);
                    
                    java.sql.ResultSet rse121 = stm121q.executeQuery("select activity from pb_activity where code ='"+jTextField10.getText().toString()+"'");
                    
                    while (rse121.next()){
                        
                        glAcc = rse121.getObject(1).toString();
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into pb_doctors_request values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?),?, ?, ?, ?,?,?)");
                        if (jTextField12.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Patient Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(2,jTextField12.getText());
                        }
                        // pstmt2.setString(2,jTextField1.getText());
                        pstmt2.setString(3,jTextField7.getText());
                        if (jTextField8.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Doctor's Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(4,jTextField8.getText());
                        }
                        
                        
                        pstmt2.setString(1,jTextField93.getText());
                        //  pstmt2.setString(2,jTextField1.getText());
                        //  pstmt2.setString(3,jTextField7.getText());
                        // pstmt2.setString(4,jTextField8.getText());
                        pstmt2.setString(5,jTable111.getValueAt(i,0).toString());
                        pstmt2.setString(6,"1");
                        pstmt2.setString(7,jTable111.getValueAt(i,1).toString());
                        pstmt2.setString(8,jTextField10.getText());
                        pstmt2.setString(9,datePicker12.getDate().toString());
                        pstmt2.setString(10,billNo);
                        
                        pstmt2.setString(12,"false");
                        pstmt2.setString(11,user);
                        pstmt2.setString(13,glAcc);
                        pstmt2.setString(14,billNo);
                        pstmt2.setString(15,jTable111.getValueAt(i,2).toString());
                        
                        pstmt2.setString(17,"false");
                        pstmt2.setObject(18,jTable111.getValueAt(i,3).toString());
                        pstmt2.setString(19,jTable111.getValueAt(i,4).toString());
                        pstmt2.setString(16,"false");
                        pstmt2.setString(20,"'now'");
                        
                        pstmt2.setObject(21,jTable111.getValueAt(i,5).toString());
                        
                        pstmt2.executeUpdate();
                        
                        
                    }
                }
                
                
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+billNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            
            
            
            for (int k = 0; k < jTable13.getRowCount(); k++ ) {
                for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                    jTable13.setValueAt(null,k,r);
                }
            }
            for (int k = 0; k < jTable111.getRowCount(); k++ ) {
                for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                    jTable111.setValueAt(null,k,r);
                }
            }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jSearchTable212MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable212MouseClicked
        jTextField912.setText(jSearchTable213.getValueAt(jSearchTable213.getSelectedRow(), 0).toString());
        jSearchDialog213.dispose();
        int i = 0;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select service,amount,requisition_no,bed_no,time_due,dosage from pb_doctors_request where inv_no = '"+jTextField912.getText()+"'");
            while (rset1.next()){
                jTable13.setValueAt(rset1.getObject(1),i,0);
                jTable13.setValueAt(rset1.getObject(2),i,1);
                jTable13.setValueAt(rset1.getObject(3),i,2);
                jTable13.setValueAt(rset1.getObject(4),i,3);
                jTable13.setValueAt(rset1.getObject(5),i,4);
                jTable13.setValueAt(rset1.getObject(6),i,5);
                i++;
            }
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        } // Add your handling code here:
    }//GEN-LAST:event_jSearchTable212MouseClicked
    
    private void jButton5212ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5212ActionPerformed
        jSearchDialog213.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton5212ActionPerformed
    
    private void jTextField11313CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11313CaretUpdate
        if(this.jCheckBox22.isSelected()){
            
            if(jTextField11313.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                jSearchTable213.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct inv_no,patient_no,patient_name FROM pb_doctors_request WHERE inv_no ILIKE '%"+jTextField11313.getText()+"%' and revenue_code ilike '%pharm%' and patient_no='"+jTextField93.getText()+"'  order by inv_no"));
                //  select product as service_type,selling_price as price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike '"+jComboBox1.getSelectedItem()+"%' order by service_type
                
                
                jSearchScrollPane212.setViewportView(jSearchTable213);
                
                
            }
        }else{
        } // Add your handling code here:
    }//GEN-LAST:event_jTextField11313CaretUpdate
    
    private void searchButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton12ActionPerformed
        searchButtonClicked213();
        jButton121.setEnabled(false);
        jButton14.setEnabled(false);
        jButton22.setEnabled(true);
        jButton5.setEnabled(true);  // Add your handling code here:
    }//GEN-LAST:event_searchButton12ActionPerformed
    private void searchButtonClicked213() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField912.getLocationOnScreen();
        
        jSearchDialog214.setSize(400,200);
        
        jSearchDialog214.setLocation(point);
        
        jSearchDialog214.show();
        
        
        
    }
    private void searchButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton22ActionPerformed
        searchButtonClicked211s(); // Add your handling code here:
    }//GEN-LAST:event_searchButton22ActionPerformed
    private void searchButtonClicked211s() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField82.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        com.afrisoftech.laboratory.PatientcardPdf policy = new com.afrisoftech.laboratory.PatientcardPdf();
        
        policy.PatientcardPdf(connectDB,datePicker1.getDate(),datePicker1.getDate(),jTextField9.getText());// Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        com.afrisoftech.laboratory.PatientcardPdf policy = new com.afrisoftech.laboratory.PatientcardPdf();
        
        policy.PatientcardPdf(connectDB,datePicker11.getDate(),datePicker11.getDate(),jTextField9.getText());
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void searchButton1111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1111ActionPerformed
        cmbox1MouseClickedhh();  // Add your handling code here:
    }//GEN-LAST:event_searchButton1111ActionPerformed
    private void cmbox1MouseClickedhh() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField91111.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.show();
    }
    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        this.setVisible(false);    // Add your handling code here:
    }//GEN-LAST:event_jButton45ActionPerformed
    
    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        for (int k = 0; k < jTable15.getRowCount(); k++ ) {
            for (int r = 0; r < jTable15.getColumnCount(); r++ ) {
                jTable15.getModel().setValueAt(null,k,r);
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton35ActionPerformed
    
    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        for (int k = 0; k < jTable14.getRowCount(); k++ ) {
            for (int r = 0; r < jTable14.getColumnCount(); r++ ) {
                jTable14.getModel().setValueAt(null,k,r);
            }
        } // Add your handling code here:
    }//GEN-LAST:event_jButton34ActionPerformed
    
    private void jTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MouseClicked
        if (jTable11.getSelectedColumn() == 1) {
            
            
            jTable11.setValueAt(0,jTable11.getSelectedRow(), 2);
            jTable11.setValueAt("N/A",jTable11.getSelectedRow(), 3);
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable11MouseClicked
    
    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        this.jEditorPane1.setText("");
        // Add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed
    
    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        this.jEditorPane11.setText("");
        this.jEditorPane111.setText("");
        jEditorPane2.setText("");
        
        jEditorPane111.setText("");
        jEditorPane11.setText("");
        jEditorPane112.setText("");
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton32ActionPerformed
    
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
        jTextField91111.setText(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(), 0).toString());
        jSearchDialog11.dispose();
        //jTable16.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0),jTable16.getSelectedRow(),0);
        jSearchDialog11.dispose();
        
        int CountNo = 1;
        for (int k = 0; k < jSearchTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jSearchTable11.getColumnCount(); r++ ) {
                jSearchTable11.setValueAt(null,k,r);
            }
        }
        jTextField1111.setText("");
        //  jTable16.setValueAt(""+CountNo,jTable16.getSelectedRow(), 1);
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog11.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT (upper(disease_name)) as name,code from hp_diseases where disease_name ILIKE '"+jTextField1111.getText()+"%' order by disease_name"));
       /*  searchRowSet2.execute("SELECT (upper(disease_name)) as name,code from hp_diseases where disease_name ILIKE '"+jTextField1111.getText()+"%' order by disease_name");
        
            //searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 5 order by second_name");
        
            jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                // new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                new org.netbeans.lib.sql.models.TableModel.Column("code", "Code", false)
                //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
            }));
        */
        jSearchTable11.setShowHorizontalLines(false);
        jSearchScrollPane11.setViewportView(jSearchTable11);  // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void jTable14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable14MouseClicked
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String request = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
        java.util.Date adDate=null;
        String opvisitid = "-";
        
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stm12t = connectDB.createStatement();
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            
            while (rse12.next()){
                
                patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
            }
            java.sql.Statement stm121q = connectDB.createStatement();
            
            
            java.sql.ResultSet rse121 = stm121q.executeQuery("select distinct gl_account,main_service from pb_operating_parameters where main_service ilike 'lab%'");
            
            while (rse121.next()){
                
                actCode = rse121.getObject(1).toString();
                glAcc = rse121.getObject(2).toString();
            }
            
            int i = jTable1.getSelectedRow();
            // for (int i = 0; i < jTable1.getRowCount(); i++){
            if (jTable1.getValueAt(i,9) != null){
                if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 9).toString()) == java.lang.Boolean.TRUE) {
                    
                    System.out.println("Count"+i);
                    java.sql.Statement ps11 = connectDB.createStatement();
                    java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('lab_request'),current_user");
                    while (rst11.next()){
                        rst11.getObject(1).toString();
                        
                        billNo = rst11.getObject(1).toString();
                        user = rst11.getObject(2).toString();
                        
                    }
                    
                    request =jTable1.getValueAt(i, 7).toString();
                    if(request.startsWith("I")){
                        java.sql.ResultSet rse12t = stm12t.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
                        
                        java.sql.Statement pst = connectDB.createStatement();
                        java.sql.ResultSet rstt = pst.executeQuery("select nextval('transaction_no_seq')");
                        
                        while (rse12t.next()){
                            
                            patientAcc = rse12t.getObject(1).toString();
                            AccDesc = rse12t.getObject(2).toString();
                        }
                        while (rstt.next()){
                            rstt.getObject(1).toString();
                            
                            transNo = rstt.getObject(1).toString();
                        }
                        
                        java.sql.Statement stm121t = connectDB.createStatement();
                        
                        java.sql.Statement stm12n = connectDB.createStatement();
                        java.sql.ResultSet rse12n = stm12n.executeQuery("select adm_date from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                        while (rse12n.next()){
                            admDate = rse12n.getDate(1);
                        }
                        java.sql.Statement ps11w1 = connectDB.createStatement();
                        java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTable1.getValueAt(i,1).toString()+"' and check_out = false");
                        while (rst11w1.next()){
                            
                            
                            visitid = rst11w1.getObject(1).toString();
                        }
                        
                        
                        System.out.println(admDate);
                        // if (exp.before(date)){
                        //  if (adDate.before(admDate)){
                        //    javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        // }else{
                        
                       /* if (!(jTable1.getValueAt(i,3).toString().equals("Cash"))){
                            java.sql.ResultSet rse1 = stm1.executeQuery("select department,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                            while (rse1.next()){
                                payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                                cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                                scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                                cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                                isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                                expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                                staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                            }
                        }
                        */
                        java.sql.ResultSet rse121t = stm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121t.getObject(1).toString();
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                        pstmt.setString(3,"General");
                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,expDate);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                        pstmt.setString(13,"0.00");
                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,visitid);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"IP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,visitid);
                        pstmt.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2.setObject(1,actCode);
                        pstmt2.setString(2,glAcc);
                        pstmt2.setString(3,jTable1.getValueAt(i,1).toString());
                        pstmt2.setString(4,jTable1.getValueAt(i,2).toString());
                        pstmt2.setString(5,"");
                        pstmt2.setString(6,cardNo);
                        pstmt2.setString(7,cardName);
                        pstmt2.setString(8,"IP");
                        pstmt2.setString(9,jTable1.getValueAt(i,8).toString());
                        pstmt2.setString(10,jTable1.getValueAt(i,3).toString());
                        pstmt2.setString(11,"");
                        pstmt2.setString(12,"");
                        pstmt2.setString(13,"");
                        pstmt2.setString(14,jTable1.getValueAt(i,4).toString());
                        pstmt2.setString(15,"Revenue");
                        pstmt2.setString(16,"0.00");
                        pstmt2.setObject(17,jTable1.getValueAt(i,6).toString());
                        pstmt2.setString(18,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(19,transNo);
                        pstmt2.setString(20,"false");
                        pstmt2.setString(21,"false");
                        pstmt2.setString(22,"false");
                        pstmt2.setString(23,user);
                        pstmt2.executeUpdate();
                        
                        
                        //}
                        //}
                        // }
                        
                        
                        java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                        pstmt46.executeUpdate();
                        
                        
                        
                        
                    }else{
                        java.sql.Statement ps11w1 = connectDB.createStatement();
                        java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTable1.getValueAt(i,1).toString()+"' and check_out = false");
                        while (rst11w1.next()){
                            
                            
                            visitid = rst11w1.getObject(1).toString();
                        }
                        
                        java.sql.Statement ps11w11 = connectDB.createStatement();
                        java.sql.ResultSet rst11w11 = ps11w11.executeQuery("select distinct slip_no,date from credit_acc_slip where patient_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),1).toString()+"' order by date desc limit 1");
                        while (rst11w11.next()){
                            
                            
                            opvisitid = rst11w11.getObject(1).toString();
                        }
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                        
                        pstmt2.setString(1,jTable1.getValueAt(i,1).toString());
                        
                        pstmt2.setString(2,jTable1.getValueAt(i,2).toString());
                        pstmt2.setString(3,jTable1.getValueAt(i,3).toString());
                        pstmt2.setString(4,"General");
                        pstmt2.setString(5,jTable1.getValueAt(i,4).toString());
                        pstmt2.setString(6,jTable1.getValueAt(i,5).toString());
                        pstmt2.setString(7,jTable1.getValueAt(i,6).toString());
                        pstmt2.setObject(8,actCode);
                        pstmt2.setString(9,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(10,opvisitid);
                        
                        pstmt2.setString(11,user);
                        pstmt2.setString(12,"false");
                        pstmt2.setString(13,glAcc);
                        pstmt2.setString(14,billNo);
                        pstmt2.setString(15,jTable1.getValueAt(i,7).toString());
                        pstmt2.executeUpdate();
                        java.sql.Statement pstm121t = connectDB.createStatement();
                        java.sql.ResultSet rse121t = pstm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121t.getObject(1).toString();
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                        pstmt.setString(3,"General");
                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,expDate);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                        pstmt.setString(13,"0.00");
                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,opvisitid);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"OP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,opvisitid);
                        pstmt.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt2v = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2v.setObject(1,actCode);
                        pstmt2v.setString(2,glAcc);
                        pstmt2v.setString(3,jTable1.getValueAt(i,1).toString());
                        pstmt2v.setString(4,jTable1.getValueAt(i,2).toString());
                        pstmt2v.setString(5,"");
                        pstmt2v.setString(6,cardNo);
                        pstmt2v.setString(7,cardName);
                        pstmt2v.setString(8,"OP");
                        pstmt2v.setString(9,jTable1.getValueAt(i,8).toString());
                        pstmt2v.setString(10,jTable1.getValueAt(i,3).toString());
                        pstmt2v.setString(11,"");
                        pstmt2v.setString(12,"");
                        pstmt2v.setString(13,"");
                        pstmt2v.setString(14,jTable1.getValueAt(i,4).toString());
                        pstmt2v.setString(15,"Revenue");
                        pstmt2v.setString(16,"0.00");
                        pstmt2v.setObject(17,jTable1.getValueAt(i,6).toString());
                        pstmt2v.setString(18,jTable1.getValueAt(i,0).toString());
                        pstmt2v.setString(19,transNo);
                        pstmt2v.setString(20,"false");
                        pstmt2v.setString(21,"false");
                        pstmt2v.setString(22,"false");
                        pstmt2v.setString(23,user);
                        pstmt2v.executeUpdate();
                        //}
                        java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                        pstmt46.executeUpdate();
                        // }
                    }
                }
                
            }
            // }
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            //}
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }  // Add your handling code here:
    }//GEN-LAST:event_jTable14MouseClicked
    
    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_jTabbedPane2MouseClicked
    
    private void jTable15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable15MouseClicked
        String receiptNo = null;
        //        if (jTable1.getSelectedColumn() == 2) {
        System.out.print("See receipt No3. : "+receiptNo);
        for (int i = 0; i < jTable15.getRowCount(); i++){
            if (jTable15.getModel().getValueAt(i,0) != null){
                
                
                try {
                    
                    java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE hp_lab_results SET doc_read = true where lab_no = '"+jTable15.getValueAt(jTable15.getSelectedRow(),3).toString()+"'");
                    pstmt46.executeUpdate();
                    
                    
                } catch(java.sql.SQLException sqlExec) {
                    
                    sqlExec.printStackTrace();
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
            }
        }
        if (Boolean.valueOf(jTable15.getModel().getValueAt(jTable15.getSelectedRow(),4).toString()) == java.lang.Boolean.TRUE) {
            receiptNo =  jTable15.getValueAt(jTable15.getSelectedRow(), 3).toString();
            com.afrisoftech.reports.PatientLabResultsPdf policy = new com.afrisoftech.reports.PatientLabResultsPdf();
            
            policy.PatientLabResultsPdf(connectDB, receiptNo, receiptNo);
            
        }
        
        for (int k = 0; k < jTable15.getRowCount(); k++ ) {
            for (int r = 0; r < jTable15.getColumnCount(); r++ ) {
                jTable15.getModel().setValueAt(null,k,r);
            }
        }
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable15MouseClicked
    private void searchButtonClicked211h() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9111.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    
    
    private void searchButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton111ActionPerformed
        searchButtonClicked211h();  // Add your handling code here:
    }//GEN-LAST:event_searchButton111ActionPerformed
    
    private void jSearchTable213MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable213MouseClicked
        //   jTextField912.setText(jSearchTable213.getValueAt(jSearchTable213.getSelectedRow(), 0).toString());
        //        jTextField3.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
       /* for (int k = 0; k < jTable12.getRowCount(); k++ ) {
            for (int r = 0; r < jTable12.getColumnCount(); r++ ) {
                jTable12.getModel().setValueAt(null,k,r);
            }
        }
        
        this.jSearchDialog212.dispose();
        int i = 0;
        
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
        
        
            java.sql.Statement stmtTable1 = connectDB.createStatement();
        
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT parameter FROM pb_clinical where test = '"+this.jTextField912.getText()+"'");
        
            while (rsetTable1.next()) {
        
                System.out.println("Working at table row "+i);
                jTable12.setValueAt(rsetTable1.getObject(1), i, 0);
                // jTable2.setValueAt(rsetTable1.getObject(2), i, 1);
                //  jTable2.setValueAt(rsetTable1.getObject(3), i, 2);
                //jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
        
        
                i++;
        
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
        
        
        } catch(java.sql.SQLException sqlExec) {
        
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
        
        }
        */// Add your handling code here:
    }//GEN-LAST:event_jSearchTable213MouseClicked
    
    private void jButton5213ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5213ActionPerformed
        this.jSearchDialog212.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton5213ActionPerformed
    
    private void jTextField11312CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11312CaretUpdate
        jSearchTable213.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct initcap(test) as test from pb_clinical where test ILIKE '"+jTextField11312.getText()+"%'  order by test"));
        
        
        jSearchTable213.setShowHorizontalLines(false);
        jSearchScrollPane213.setViewportView(jSearchTable213);  // Add your handling code here:
    }//GEN-LAST:event_jTextField11312CaretUpdate
    
    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        int rows2Delete = jTable11.getSelectedRowCount();
        
        int[] selectedRows = jTable11.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable11.getModel();
                
                defTableModel.removeRow(jTable11.getSelectedRow());
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton61ActionPerformed
    
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        String user = null;
        String cat = null;
        
        if(jCheckBox11.isSelected()){
            cat = "OP";
        }else{
            cat = "IP";
        }
        String Rst = null;
        
        
        try {
            
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.ResultSet rse121 = stm121.executeQuery("select current_user");
            while (rse121.next())
                
                // glAcc = rse121.getObject(1).toString();
                user = rse121.getObject(1).toString();
         
            
            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into hp_clinical_results values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?,?,?)");
            
            pstmt21.setString(1,jTextField92.getText());
            //pstmt21.setString(10,"");
            
            pstmt21.setString(2,jTextField11.getText());
            pstmt21.setString(3,jEditorPane112.getText());
            pstmt21.setString(4,"");
            
            pstmt21.setString(5,cat);
            // pstmt21.setString(6,jTable1.getValueAt(i,0).toString());
            pstmt21.setString(6,jTextField9111.getText());
            
            
            pstmt21.setString(7,datePicker11.getDate().toString());
            pstmt21.setString(8,Rst);
            pstmt21.setString(9,jEditorPane11.getText());
            
            pstmt21.setString(10,"'now'");
            pstmt21.setString(11,user);
            
            pstmt21.setString(13,jTextField91111.getText());
            
            
            
            pstmt21.setString(12,jEditorPane111.getText());
            
            pstmt21.setString(14,jEditorPane113.getText());
            
            pstmt21.executeUpdate();
            
            
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true); 
            
            //pstmt21.setString(12,Rst);
            //                        pstmt21.setString(17,jComboBox3.getSelectedItem().toString());
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_diagnosis values(?,?,?,?,?, ?,?,?,?,?,?)");
            
            pstmt.setString(1,jTextField92.getText());
            pstmt.setString(2,jTextField11.getText());
            pstmt.setString(3,"-");
            pstmt.setObject(5,"1");
            pstmt.setObject(4,jTextField91111.getText());
            pstmt.setString(6,jTextField9111.getText());
            pstmt.setString(7,"00");
            
            pstmt.setString(8, jEditorPane113.getText().toString());
            
            
            pstmt.setString(9,datePicker11.getDate().toString());
            // if(jTable1.getValueAt(i,1) == null){
            //    pstmt.setObject(5,"1");
            //  }else{
            /// }
            pstmt.setString(10,"'now'");
            pstmt.setString(11,"Out Patient");
            
            pstmt.executeUpdate();
            
            
             java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE hp_patient_visit SET nature = 'Cons',doctor_name  = current_user ,cons_time =current_timestamp where patient_no = '"+jTextField92.getText()+"' AND transaction_type ilike  'Regis%' and nature = '1' ");
                pstmt46.executeUpdate();
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
          
            this.jTextField91111.setText("");
            this.jEditorPane11.setText("");
            this.jEditorPane111.setText("");
            this.jEditorPane113.setText("");
            this.jEditorPane112.setText("");
            //this.jEditorPane1111.setText("");
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed
    
    private void jButton82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton82ActionPerformed
        String receiptNo = null;
        receiptNo= this.jTextField9.getText().toString();
        
        com.afrisoftech.laboratory.PatientClinicalComprehPdf policy = new com.afrisoftech.laboratory.PatientClinicalComprehPdf();
        
        policy.PatientClinicalComprehPdf(connectDB, receiptNo);     // Add your handling code here:
    }//GEN-LAST:event_jButton82ActionPerformed
    
    private void jButton72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton72ActionPerformed
        String receiptNo = null;
        receiptNo= this.jTextField9.getText().toString();
        
        com.afrisoftech.laboratory.PatientClinicalPdf policy = new com.afrisoftech.laboratory.PatientClinicalPdf();
        
        policy.PatientClinicalPdf(connectDB, receiptNo);  // Add your handling code here:
    }//GEN-LAST:event_jButton72ActionPerformed
    
    private void jButton81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton81ActionPerformed
        String receiptNo = null;
        receiptNo= this.jTextField9.getText().toString();
        
        com.afrisoftech.laboratory.PatientClinicalComprehPdf policy = new com.afrisoftech.laboratory.PatientClinicalComprehPdf();
        
        policy.PatientClinicalComprehPdf(connectDB, receiptNo);  // Add your handling code here:
    }//GEN-LAST:event_jButton81ActionPerformed
    
    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton71ActionPerformed
        String receiptNo = null;
        receiptNo= this.jTextField9.getText().toString();
        
        com.afrisoftech.laboratory.PatientClinicalPdf policy = new com.afrisoftech.laboratory.PatientClinicalPdf();
        
        policy.PatientClinicalPdf(connectDB, receiptNo);   // Add your handling code here:
    }//GEN-LAST:event_jButton71ActionPerformed
    private void searchButtonClicked2d() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        // jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed

        
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed
    
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        
        
        //   String billNo = null;
        
        //  String transNo = null;
        ///   String payMode = null;
        //String patientAcc = null;
        //  String cardNo = null;
        //  String AccDesc = null;
        // String scheme = null;
        //String cardName = null;
        // String isurer = null;
        //   String expDate = null;
        //   String staffNo = null;
        String BillNo = null;
        //   String glAcc = null;
        // String BillNo = null;
        String code = null;
        //        String user = null;
        String prescNo = null;
        String glAcc2 = null;
        
        String Stock = null;
        String actCode = null;
        String accountCode = null;
        String userName = null;
        String transNo1 = null;
        String glType = null;
        String glCode = null;
        String units = null;
        String chbox = null;
        try {
            connectDB.setAutoCommit(false);
            
            
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('attendance_no'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                prescNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
            }
            this.jTextField101.setText(prescNo);
            
            
            //   double presc = java.lang.Double.parseDouble(jTextField8.getText());
            String Excemt = null;
            String IP = null;
            String Recom = null;
            if (jCheckBox1.isSelected()){
                IP =jCheckBox1.getText();
            }else{
                if (jCheckBox2.isSelected()){
                    IP =jCheckBox2.getText();
                }
            }
            if (jCheckBox53.isSelected()){
                Excemt = this.jCheckBox53.getText();
            }else{
                if (jCheckBox62.isSelected()){
                    Excemt = jCheckBox62.getText();
                }else{
                    if (jCheckBox72.isSelected()){
                        Excemt = jCheckBox72.getText();
                    }
                }
                if (jCheckBox82.isSelected()){
                    Excemt = jCheckBox82.getText();
                }else{
                    if (jCheckBox91.isSelected()){
                        Excemt = jCheckBox91.getText();
                    }
                }
            }
            if (this.jRadioButton1.isSelected()){
                Recom = jRadioButton1.getText();
            }else{
                if (jRadioButton2.isSelected()){
                    Recom = jRadioButton2.getText();
                }else{
                    if (jRadioButton4.isSelected()){
                        Recom = jRadioButton4.getText();
                    }
                }
                if (jRadioButton3.isSelected()){
                    Recom = jRadioButton3.getText();
                }
                
            }
            
            
            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_sick_sheet values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?)");
            
            pstmt2.setString(1,jTextField36.getText());
            pstmt2.setString(2,jTextField18.getText());
            
            pstmt2.setString(3,IP);
            pstmt2.setString(4,jTextField23.getText());
            pstmt2.setString(5,jTextField19.getText());
            pstmt2.setString(7,Recom);
            pstmt2.setString(6,Excemt);
            pstmt2.setObject(8,jTextField31.getText());
            pstmt2.setString(9,datePicker111.getDate().toString());
            pstmt2.setString(10,datePicker121.getDate().toString());
            
            pstmt2.setString(11,jTextField101.getText());
            pstmt2.setString(14,user);
            pstmt2.setString(13,datePicker14.getDate().toString());
            
            pstmt2.setString(12,prescNo);
            pstmt2.setObject(15,jTextField94.getText());
            pstmt2.setObject(16,jTextField81.getText());
            
            pstmt2.setObject(17,jTextField114.getText());
            
            pstmt2.executeUpdate();
            
            
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            com.afrisoftech.reports.SickSheetPdf policy = new com.afrisoftech.reports.SickSheetPdf();
            policy.SickSheetPdf(connectDB,jTextField101.getText());
            
            // }
            jTextField18.setText("");
            jTextField23.setText("");
            // jTextField4.setText("");
            jTextField36.setText("");
            // }else{
            //   javax.swing.JOptionPane.showMessageDialog(this,"Insert NOT Successful","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            // }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed
    
    private void searchButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton4ActionPerformed
        searchButtonClicked2s();   // Add your handling code here:
    }//GEN-LAST:event_searchButton4ActionPerformed
    private void searchButtonClicked2s() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField36.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void searchButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton3ActionPerformed
        searchButtonClicked2b();
        jButton121.setEnabled(true);
        jButton14.setEnabled(true);
        jButton22.setEnabled(true);
        jButton5.setEnabled(false);// Add your handling code here:
    }//GEN-LAST:event_searchButton3ActionPerformed
    private void searchButtonClicked2b() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField93.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButtonClicked2a();   // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButtonClicked2a() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
         jEditorPane2.setText("");
        
        jEditorPane111.setText("");
        jEditorPane11.setText("");
        jEditorPane112.setText("");
        
        
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField16.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField17.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jTextField92.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField11.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField21.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField2.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jTextField93.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField12.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField7.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField22.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        
        jTextField36.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField18.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField20.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField19.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
        
        jTextField923.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jTextField115.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField211.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 2).toString());
        jTextField24.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 3).toString());
       
        String Xrayed = null;
        String Sex = null;
        try {
            //  jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, account_no,description,card_no from hp_patient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 20 order by second_name"));
            
            //    java.sql.ResultSet rset1 = stmt1.executeQuery("select sex,year_of_birth from hp_patient_register where patient_no ='"+jTable1.getValueAt(jTable1.getSelectedRow(),1).toString()+"' and revenue_code ilike 'xray' order by trans_date desc limit 1");
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select sex,year_of_birth ,account_no,description,card_no from hp_patient_register where patient_no ='"+jTextField92.getText()+"' ");
            while (rset1.next()){
                 jTextField15.setText(dbObject.getDBObject(rset1.getObject(2), "-"));
                  jTextField41.setText(dbObject.getDBObject(rset1.getObject(3), "-"));
                   jTextField23.setText(dbObject.getDBObject(rset1.getObject(4), "-"));
                    jTextField114.setText(dbObject.getDBObject(rset1.getObject(5), "-"));
               // jTextField15.setText(rset1.getObject(2).toString());
               // jTextField41.setText(rset1.getObject(3).toString());
               // jTextField23.setText(rset1.getObject(4).toString());
                
            //    jTextField114.setText(rset1.getObject(5).toString());
                
                Sex = dbObject.getDBObject(rset1.getObject(1), "-");
                
                if (Sex.equalsIgnoreCase("FeMale")){
                    
                    this.jCheckBox63.setSelected(true);
                    
                }else{
                    this.jCheckBox52.setSelected(true);
                }
            }
              java.sql.Statement st = connectDB.createStatement();
            
            
            java.sql.ResultSet rset = st.executeQuery("select  weight||' HEGHT '||height||' DIASTOLIC '||diastolic||' SYSTOLIC '||systolic||' PULSE '||pulse||' TEMP' ||temp||' RESP' ||resp from hp_signs_record where  input_date::date =current_date and patient_no ='"+jTextField92.getText()+"'");
            
            
            
            while (rset.next()) {
                
                
                
                
                this.jEditorPane2.setText(rset.getObject(1).toString());
                             
                
                
            }
            
            if(this.jCheckBox21.isSelected()){
                java.sql.Statement stmt11 = connectDB.createStatement();
                java.sql.ResultSet rset11 = stmt11.executeQuery("select account_no,description from hp_inpatient_register where patient_no ='"+jTextField92.getText()+"' ");
                while (rset11.next()){
                    
                    jTextField114.setText(rset11.getObject(1).toString());
                    jTextField23.setText(rset11.getObject(2).toString());
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
     
        for (int k = 0; k < jSearchTable2.getRowCount(); k++ ) {
            for (int r = 0; r < jSearchTable2.getColumnCount(); r++ ) {
                jSearchTable2.setValueAt(null,k,r);
            }
        }
        jTextField113.setText("");
        
        this.jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        this.jSearchDialog2.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jCheckBox11.isSelected() && this.jCheckBox32.isSelected()){
            
            if(jTextField113.getCaretPosition() < 2){
                System.out.println("Nothing");
            }else{
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name, pay_mode as Mode, category as categ from hp_patient_register where patient_no ILIKE '%"+jTextField113.getText()+"%' and last_visit > current_date - 2 order by second_name"));
                
                //    searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '%"+jTextField113.getText()+"%' and last_visit > current_date - 5 order by second_name");
                
                
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            }
            
        }else{
            if(this.jCheckBox11.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField113.getCaretPosition() < 2){
                    System.out.println("Nothing");
                }else{
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name, pay_mode as Mode, category as categ from hp_patient_register where second_name||' '||first_name ILIKE '%"+jTextField113.getText()+"%' and last_visit > current_date - 2 order by second_name"));
                    
                    
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                    
                    
                }
            }
        }
        // }else{
        if(this.jCheckBox21.isSelected() && this.jCheckBox32.isSelected()){
            
            // if(this.jCheckBox21.isSelected()){
            //   if( jTextField113.getCaretPosition() > 3){
            
            if(jTextField113.getCaretPosition() < 2){
                System.out.println("Nothing");
            }else{
                
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name,pay_mode,category from hp_inpatient_register where patient_no ILIKE '%"+jTextField113.getText()+"%' order by second_name"));
                
                
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
            }
        }else{
            if(this.jCheckBox21.isSelected() && this.jCheckBox4.isSelected()){
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name,pay_mode, category from hp_inpatient_register where second_name||' '||first_name ILIKE '%"+jTextField113.getText()+"%' order by second_name"));
                
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            }
        }    // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();    // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.show();
        
        
        
    }
    private void searchButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton21ActionPerformed
        searchButtonClicked2111(); // Add your handling code here:
    }//GEN-LAST:event_searchButton21ActionPerformed
    private void searchButtonClicked2111() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField8.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    private void jSearchTable211MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable211MouseClicked
        jTextField911.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        
        jTextField9111.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        jTextField921.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 1).toString());
        jTextField82.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        jTextField922.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 1).toString());
        
        this.jSearchDialog211.dispose();
        
        
        for (int k = 0; k < jSearchTable211.getRowCount(); k++ ) {
            for (int r = 0; r < jSearchTable211.getColumnCount(); r++ ) {
                jSearchTable211.setValueAt(null,k,r);
            }
        }
        jTextField11311.setText("");
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable211MouseClicked
    
    private void jButton5211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5211ActionPerformed
        this.jSearchDialog211.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton5211ActionPerformed
    
    private void jTextField11311CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11311CaretUpdate
        jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select first_name||' '||middle_name as name,staff_no from pb_doctors_list where status ilike  'active' and  first_name||' '||middle_name ILIKE '%"+jTextField11311.getText()+"%'  order by name"));
        
        
        
        jSearchTable211.setShowHorizontalLines(false);
        jSearchScrollPane211.setViewportView(jSearchTable211);
        
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11311CaretUpdate
    private void searchButtonClicked211() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField911.getLocationOnScreen();
        
        jSearchDialog211.setSize(400,200);
        
        jSearchDialog211.setLocation(point);
        
        jSearchDialog211.show();
        
        
        
    }
    private void searchButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton11ActionPerformed
        searchButtonClicked211();  // Add your handling code here:
    }//GEN-LAST:event_searchButton11ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        String user = null;
        String cat = null;
        String sexHist = null;
        String illness = null;
        String alcohol = null;
        String contr = null;
        String smoking = null;
        String drug = null;
        String marital = null;
        //String cat = null;
        
        if(jCheckBox1.isSelected()){
            marital = this.jCheckBox1.getText();
        }else{
            if(jCheckBox2.isSelected()){
                marital = this.jCheckBox2.getText();
            }else{
                if(jCheckBox6.isSelected()){
                    marital = this.jCheckBox6.getText();
                    
                }else{
                    if(jCheckBox7.isSelected()){
                        marital = this.jCheckBox7.getText();
                    }else{
                        if(jCheckBox8.isSelected()){
                            marital = this.jCheckBox8.getText();
                        }else{
                            if(jCheckBox9.isSelected()){
                                marital = this.jCheckBox9.getText();
                            }else{
                                if(jCheckBox10.isSelected()){
                                    marital = this.jCheckBox10.getText();
                                }
                            }
                        }
                    }
                }
            }
            
        }
        
        
        if(jCheckBox11.isSelected()){
            cat = "OP";
        }else{
            cat = "IP";
        }
        
        if(jCheckBox12.isSelected()){
            sexHist = this.jCheckBox12.getText();
        }else{
            if(jCheckBox13.isSelected()){
                sexHist = this.jCheckBox13.getText();
            }else{
                if(jCheckBox14.isSelected()){
                    sexHist = this.jCheckBox14.getText();
                }
            }
        }
        
        if(jCheckBox1221.isSelected()){
            smoking = this.jCheckBox1221.getText();
        }else{
            if(jCheckBox1321.isSelected()){
                smoking = this.jCheckBox1321.getText();
            }else{
                if(jCheckBox1411.isSelected()){
                    smoking = this.jCheckBox1411.getText();
                    
                }else{
                    if(jCheckBox3.isSelected()){
                        smoking = this.jCheckBox31.getText();
                    }
                }
                
            }
        }
        
        if(jCheckBox122.isSelected()){
            alcohol = this.jCheckBox122.getText();
        }else{
            if(jCheckBox132.isSelected()){
                alcohol = this.jCheckBox132.getText();
            }else{
                if(jCheckBox141.isSelected()){
                    alcohol = this.jCheckBox141.getText();
                    
                }else{
                    if(jCheckBox3.isSelected()){
                        alcohol = this.jCheckBox3.getText();
                    }
                }
                
            }
        }
        
        if(jCheckBox1211.isSelected()){
            illness = this.jCheckBox1211.getText();
        }else{
            if(jCheckBox1311.isSelected()){
                illness = this.jCheckBox1311.getText();
            }
        }
        
        if(jCheckBox121.isSelected()){
            contr = this.jCheckBox121.getText();
        }else{
            if(jCheckBox131.isSelected()){
                contr = this.jCheckBox131.getText();
            }
        }
        
        if(jCheckBox12111.isSelected()){
            drug = this.jCheckBox12111.getText();
        }else{
            if(jCheckBox13111.isSelected()){
                drug = this.jCheckBox13111.getText();
            }
        }
        
        
        String Rst = null;
        
        
        try {
            
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.ResultSet rse121 = stm121.executeQuery("select current_user");
            while (rse121.next())
                
                // glAcc = rse121.getObject(1).toString();
                user = rse121.getObject(1).toString();
            for (int i = 0; i < jTable11.getRowCount(); i++){
                if (jTable11.getModel().getValueAt(i,1) != null){
                      /*
                    if (jTable11.getModel().getValueAt(i,1) != null){
                        Rst = "Absent";
                    }else{
                        Rst = "Not Tested";
                    }
                    if (jTable11.getModel().getValueAt(i,3) != null){
                        Rst = "Low";
                    }else{
                        Rst = "Not Tested";
                    }
                    if (jTable11.getModel().getValueAt(i,4) != null){
                        Rst = "Moderate";
                    }else{
                        Rst = "Not Tested";
                    }
                    if (jTable11.getModel().getValueAt(i,5) != null){
                        Rst = "High";
                    }else{
                        Rst = "Not Tested";
                    }
                       
                       */
                    
                    
                    java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into hp_patients_hist values(?,?,?,?,?,?,?, ?, ?, ?, ?, ?,?,?,?,?,?,?, ?, ?, ?,?)");
                    
                    pstmt21.setString(1,jTextField9.getText());
                    //pstmt21.setString(10,"");
                    
                    pstmt21.setString(2,jTextField1.getText());
                    pstmt21.setString(4,jTextField911.getText());
                    
                    
                    pstmt21.setString(3,"'now'");
                    
                    pstmt21.setString(5,marital);
                    pstmt21.setString(6,sexHist);
                    pstmt21.setString(7,contr);
                    pstmt21.setString(8,jComboBox1.getSelectedItem().toString());
                    pstmt21.setString(9,illness);
                    pstmt21.setString(10,jComboBox11.getSelectedItem().toString());
                    pstmt21.setString(11,drug);
                    pstmt21.setString(12,jComboBox111.getSelectedItem().toString());
                    
                    // pstmt21.setString(6,jTable1.getValueAt(i,0).toString());
                    pstmt21.setString(13,alcohol);
                    pstmt21.setString(14,smoking);
                    
                    //                      pstmt21.setString(9,jEditorPane1.getText());
                    pstmt21.setString(15,jTextField91.getText());
                    pstmt21.setString(16,jTable11.getValueAt(i,0).toString());
                    pstmt21.setString(17,Rst);
                    if (jTable11.getModel().getValueAt(i,2) != null){
                        pstmt21.setString(18,jTable11.getValueAt(i,2).toString());
                    }else{
                        pstmt21.setString(18,"00");
                    }
                    if (jTable11.getModel().getValueAt(i,3) != null){
                        pstmt21.setString(19,jTable11.getValueAt(i,3).toString());
                    }else{
                        pstmt21.setString(19,"-");
                    }
                    pstmt21.setString(21,"'now'");
                    pstmt21.setString(20,user);
                    pstmt21.setString(22,jEditorPane1.getText());
                    
                    //pstmt21.setString(12,Rst);
                    //                        pstmt21.setString(17,jComboBox3.getSelectedItem().toString());
                    
                    
                    pstmt21.executeUpdate();
                }
            }
            
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            for (int k = 0; k < jTable11.getRowCount(); k++ ) {
                for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                    jTable11.getModel().setValueAt(null,k,r);
                }
            }
            this.jEditorPane1.setText("");
            
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        this.jSearchDialog21.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        //        jTextField3.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        for (int k = 0; k < jTable11.getRowCount(); k++ ) {
            for (int r = 0; r < jTable11.getColumnCount(); r++ ) {
                jTable11.getModel().setValueAt(null,k,r);
            }
        }
        
        this.jSearchDialog21.dispose();
        int i = 0;
        
        
        try {
            java.sql.Statement stmt = connectDB.createStatement();
            
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT parameter FROM pb_clinical where test = '"+this.jTextField91.getText()+"'");
            
            while (rsetTable1.next()) {
                
                System.out.println("Working at table row "+i);
                jTable11.setValueAt(rsetTable1.getObject(1), i, 0);
                // jTable2.setValueAt(rsetTable1.getObject(2), i, 1);
                //  jTable2.setValueAt(rsetTable1.getObject(3), i, 2);
                //jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                
                
                i++;
                
                //                i = i + i;
                //            jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
            }
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        for (int k = 0; k < jSearchTable21.getRowCount(); k++ ) {
            for (int r = 0; r < jSearchTable21.getColumnCount(); r++ ) {
                jSearchTable21.setValueAt(null,k,r);
            }
        }
        jTextField1131.setText("");
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT distinct initcap(test) as test from pb_clinical where test ILIKE '"+jTextField1131.getText()+"%'  order by test"));
        
        
        jSearchTable21.setShowHorizontalLines(false);
        jSearchScrollPane21.setViewportView(jSearchTable21);
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        searchButtonClicked21(); // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void searchButtonClicked21() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
        
        jSearchDialog21.setSize(400,200);
        
        jSearchDialog21.setLocation(point);
        
        jSearchDialog21.show();
        
        
        
    }    private void searchButtonClicked212() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //        java.awt.Point point = this.jTextField912.getLocationOnScreen();
        
        // jSearchDialog212.setSize(400,200);
        
        // jSearchDialog212.setLocation(point);
        
        // jSearchDialog212.show();
        
        
        
    }
    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton43ActionPerformed
    
    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        for (int k = 0; k < jTable13.getRowCount(); k++ ) {
            for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                jTable13.setValueAt(null,k,r);
            }
        }
        for (int k = 0; k < jTable111.getRowCount(); k++ ) {
            for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                jTable111.setValueAt(null,k,r);
            }
        } // Add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed
    
    private void jButton63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton63ActionPerformed
        if(this.jPanel34.isVisible()){
            int rows2Delete = jTable13.getSelectedRowCount();
            
            int[] selectedRows = jTable13.getSelectedRows();
            
            if (rows2Delete < 1) {
                
                java.awt.Toolkit.getDefaultToolkit().beep();
                
                javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
                
            } else {
                
                if (rows2Delete > 1) {
                    
                    for (int i = 0; i < selectedRows.length; i++) {
                        
                        
                        
                        javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable13.getModel();
                        
                        defTableModel.removeRow(selectedRows[i]);
                        
                    }
                    
                    
                    
                } else {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable13.getModel();
                    
                    defTableModel.removeRow(jTable13.getSelectedRow());
                }
            }
            
            tableModelTableChanged();
        }else{
            
            int rows2Delete = jTable111.getSelectedRowCount();
            
            int[] selectedRows = jTable111.getSelectedRows();
            
            if (rows2Delete < 1) {
                
                java.awt.Toolkit.getDefaultToolkit().beep();
                
                javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
                
            } else {
                
                if (rows2Delete > 1) {
                    
                    for (int i = 0; i < selectedRows.length; i++) {
                        
                        
                        
                        javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                        
                        defTableModel.removeRow(selectedRows[i]);
                        
                    }
                    
                    
                    
                } else {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable111.getModel();
                    
                    defTableModel.removeRow(jTable111.getSelectedRow());
                }
            }
            
            tableModelTableChanged();
            
            
        }  // Add your handling code here:
    }//GEN-LAST:event_jButton63ActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable13.getRowCount(); i++) {
            
            if (jTable13.getValueAt(i, 3) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable13.getRowCount(); i++) {
            
            if (jTable13.getValueAt(i, 3) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        
        if (this.jCheckBox22.isSelected()){
            com.afrisoftech.reports.OutPatPrescPdf pol = new com.afrisoftech.reports.OutPatPrescPdf();
            pol.OutPatPrescPdf(connectDB, jTextField912.getText());
        }else{
            com.afrisoftech.reports.ProcedureSlipPdf pol = new com.afrisoftech.reports.ProcedureSlipPdf();
            pol.ProcedureSlipPdf(connectDB, jTextField912.getText());
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed
    
    private void jButton121ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton121ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String visitid = "-";
        
        try {
            connectDB.setAutoCommit(false);
            jButton14ActionPerformed(evt);
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            
            int i =0;
            //RequestPdf policy = new RequestPdf();
            // policy.RequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),billNo,this.jTextField7.getText());
            if (this.jCheckBox22.isSelected()){
                com.afrisoftech.reports.OutPatPrescPdf pol = new com.afrisoftech.reports.OutPatPrescPdf();
                pol.OutPatPrescPdf(connectDB, jTextField912.getText());
            }else{
                if (this.jCheckBox61.isSelected()){
                    com.afrisoftech.reports.XrayReqSlipPdf pol = new com.afrisoftech.reports.XrayReqSlipPdf();
                    pol.XrayReqSlipPdf(connectDB, jTextField912.getText());
                    
                }else{
                    com.afrisoftech.reports.ProcedureSlipPdf pol = new com.afrisoftech.reports.ProcedureSlipPdf();
                    pol.ProcedureSlipPdf(connectDB, jTextField912.getText());
                }
            }
            //        ps11.close();
            
            // jLabel7.setForeground(java.awt.Color.blue);
            // jLabel7.setText("Insert successful");
            
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }    // Add your handling code here:
    }//GEN-LAST:event_jButton121ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable111.getSelectedRow(), 0);
        // jTable11.setValueAt(1,jTable11.getSelectedRow(), 4);
        // jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 5);
        jTable111.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable111.getSelectedRow(), 1);
        
        jTextField10.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 2).toString());
        
        jSearchDialog1.dispose();
        int i = jTable111.getSelectedRow();
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select admin_mode,genre,days,strength from st_stock_item where description ilike '"+jTable111.getValueAt(i,0)+"'");
            while (rset1.next()){
                jTable111.setValueAt(rset1.getObject(1),i,2);
                jTable111.setValueAt(rset1.getObject(2),i,3);
                jTable111.setValueAt(rset1.getObject(3),i,4);
                jTable111.setValueAt(rset1.getObject(4),i,5);
            }
            
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        for (int k = 0; k < jSearchTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jSearchTable1.getColumnCount(); r++ ) {
                jSearchTable1.setValueAt(null,k,r);
            }
        }
        
        jTextField111.setText("");  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable13.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable13.getSelectedRow(), 0);
        jTable13.setValueAt(1,jTable13.getSelectedRow(), 1);
        jTable13.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable13.getSelectedRow(), 2);
        jTable13.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable13.getSelectedRow(), 4);
        
        double floatCol2 = java.lang.Double.parseDouble(jTable13.getValueAt(jTable13.getSelectedRow(), 1).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable13.getValueAt(jTable13.getSelectedRow(), 2).toString());
        
        double resVal = floatCol2 * floatCol3;
        
        
        jTable13.setValueAt(new java.lang.Float(resVal), jTable13.getSelectedRow(), 3);
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable13.getRowCount(); i++) {
            
            if (jTable13.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                
                resFloat = resFloat + Double.parseDouble(jTable13.getValueAt(i, 3).toString());
                
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        
        
        // resFloat = resVal+resFloat + Double.parseDouble(jTable1.getValueAt( jTable1.getSelectedRow(), 3).toString());
        
        for (int k = 0; k < jSearchTable.getRowCount(); k++ ) {
            for (int r = 0; r < jSearchTable.getColumnCount(); r++ ) {
                jSearchTable.setValueAt(null,k,r);
            }
        }
        jTextField112.setText("");
        
        jTextField11.setText("");
        jSearchDialog.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        jSearchDialog.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed
    
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(this.jCheckBox51.isSelected()){
            
            if(this.jCheckBox61.isSelected()){
                
                if(jTextField112.getCaretPosition() < 1){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '%"+jTextField112.getText()+"%' AND main_service ilike 'x%'  order by service_type"));
                    
                    
                    
                    jSearchScrollPane.setViewportView(jSearchTable);
                    
                    
                }
            }else{
                if(this.jCheckBox212.isSelected()){
                    if(jTextField112.getCaretPosition() < 1){
                        
                        System.out.println("Nothing");
                    }else{
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE  service_type ILIKE '%"+jTextField112.getText()+"%' AND main_service ILIKE 'l%'  order by service_type"));
                        
                        
                        jSearchScrollPane.setViewportView(jSearchTable);
                        System.out.println("Cannot sort out");
                        
                    }
                    
                    }else{
                if(this.jCheckBox16.isSelected()){
                    if(jTextField112.getCaretPosition() < 1){
                        
                        System.out.println("Nothing");
                    }else{
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE  service_type ILIKE '%"+jTextField112.getText()+"%' AND main_service ILIKE 'ou%'  order by service_type"));
                        
                        
                        jSearchScrollPane.setViewportView(jSearchTable);
                        System.out.println("Cannot sort out");
                        
                    }
                    
                    
                    
                }else{
                    
                    
                    if(jTextField112.getCaretPosition() < 1){
                        
                        System.out.println("Nothing");
                    }else{
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE  service_type ILIKE '%"+jTextField112.getText()+"%' AND main_service  ILIKE '"+jComboBox12.getSelectedItem()+"%'  order by service_type"));
                        
                        
                        
                        jSearchScrollPane.setViewportView(jSearchTable);
                        
                        
                    }
                }
            }
            
            }
            
        }
        
        
        if(this.jCheckBox42.isSelected()){
            
            if(this.jCheckBox61.isSelected()){
                
                
                if(jTextField112.getCaretPosition() < 1){
                    
                    System.out.println("Nothing");
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField112.getText()+"%' AND main_service ilike 'x%'  order by service_type"));
                    
                    
                    
                    jSearchScrollPane.setViewportView(jSearchTable);
                    
                    
                }
            }else{
                if(this.jCheckBox212.isSelected()){
                    if(jTextField112.getCaretPosition() < 1){
                        
                        System.out.println("Nothing");
                    }else{
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField112.getText()+"%' AND main_service ILIKE 'l%'  order by service_type"));
                        
                        
                        jSearchScrollPane.setViewportView(jSearchTable);
                        System.out.println("Cannot sort out");
                        
                    }
                }else{
                    
                    
                    if(jTextField112.getCaretPosition() < 1){
                        
                        System.out.println("Nothing");
                    }else{
                        jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE code ILIKE '%"+jTextField112.getText()+"%' AND main_service  ILIKE '"+jComboBox12.getSelectedItem()+"%'  order by service_type"));
                        
                        
                        
                        jSearchScrollPane.setViewportView(jSearchTable);
                        
                        
                    }
                }
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    
    private void jTable13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable13MouseClicked
        if (jTable13.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }    // Add your handling code here:
    }//GEN-LAST:event_jTable13MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jCheckBox61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox61ActionPerformed
        this.jPanel82.setVisible(true);
        this.jPanel34.setVisible(true);// Add your handling code here:
    }//GEN-LAST:event_jCheckBox61ActionPerformed
    
    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
        this.jPanel34.setVisible(true);
        this.jPanel72.setVisible(false);
        this.jPanel82.setVisible(false); // Add your handling code here:
    }//GEN-LAST:event_jCheckBox15ActionPerformed
    
    private void jCheckBox212ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox212ActionPerformed
        this.jPanel34.setVisible(true);
        this.jPanel72.setVisible(false);
        this.jPanel82.setVisible(false);    // Add your handling code here:
    }//GEN-LAST:event_jCheckBox212ActionPerformed
    
    private void jCheckBox22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox22ActionPerformed
        this.jPanel72.setVisible(true);
        this.jPanel34.setVisible(false);
        this.jPanel82.setVisible(false);  // Add your handling code here:
    }//GEN-LAST:event_jCheckBox22ActionPerformed
    
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String Xray = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String item = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
        String Sex = null;
        if (jCheckBox71.isSelected()){
            Xray = "Yes";
        }else{
            Xray = "No";
        }
        
        
        if (jCheckBox63.isSelected()){
            Sex=this.jCheckBox63.getText();
        }else{
            Sex=this.jCheckBox52.getText();
        }
        
        
        //        this.jTable11.getModel().setValueAt("",10,5);
        
        try {
            connectDB.setAutoCommit(false);
            //this.jTextField9.setSelectionColor(java.awt.Color.blue);
            //   this.jTextField9.setOpaque(true);
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            
            
            if(this.jCheckBox11.isSelected()){
                java.sql.Statement ps11 = connectDB.createStatement();
                java.sql.ResultSet rst11 = ps11.executeQuery("select 'O'||nextval('billing_no_seq'),current_user");
                while (rst11.next()){
                    rst11.getObject(1).toString();
                    
                    billNo = rst11.getObject(1).toString();
                    user = rst11.getObject(2).toString();
                    this.jTextField912.setText(billNo);
                }
            }else{
                if(this.jCheckBox5.isSelected()){
                    java.sql.Statement ps11 = connectDB.createStatement();
                    java.sql.ResultSet rst11 = ps11.executeQuery("select 'I'||nextval('billing_no_seq'),current_user");
                    while (rst11.next()){
                        rst11.getObject(1).toString();
                        
                        billNo = rst11.getObject(1).toString();
                        user = rst11.getObject(2).toString();
                        this.jTextField912.setText(billNo);
                    }
                    
                }
            }
            java.sql.Statement stm121q = connectDB.createStatement();
            for (int i = 0; i < jTable13.getRowCount(); i++){
                if (jTable13.getValueAt(i,0) != null){
                    java.sql.ResultSet rse121 = stm121q.executeQuery("select activity from pb_activity where code ='"+jTable13.getValueAt(i,4).toString()+"'");
                    
                    while (rse121.next()){
                        
                        glAcc = rse121.getObject(1).toString();
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into pb_doctors_request values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?), ?, ?, ?, ?, ?, ?,?,?,?,?,?)");
                        
                        pstmt2.setString(1,jTextField93.getText());
                        
                        if (jTextField12.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Patient Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(2,jTextField12.getText());
                        }
                        // pstmt2.setString(2,jTextField1.getText());
                        pstmt2.setString(3,jTextField7.getText());
                        if (jTextField8.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Doctor's Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(4,jTextField8.getText());
                        }
                        //  pstmt2.setString(4,jTextField8.getText());
                        pstmt2.setString(5,jTable13.getValueAt(i,0).toString());
                        pstmt2.setString(6,jTable13.getValueAt(i,1).toString());
                        pstmt2.setString(7,jTable13.getValueAt(i,3).toString());
                        pstmt2.setObject(8,jTable13.getValueAt(i,4).toString());
                        pstmt2.setString(9,datePicker12.getDate().toString());
                        pstmt2.setString(10,billNo);
                        pstmt2.setString(12,"false");
                        pstmt2.setString(11,user);
                        pstmt2.setString(13,glAcc);
                        pstmt2.setString(14,billNo);
                        pstmt2.setString(15,Sex);
                        pstmt2.setBoolean(16,false);
                        pstmt2.setBoolean(17,false);
                        pstmt2.setString(18,Xray);
                        pstmt2.setString(19,jTextField13.getText().toString());
                        pstmt2.setString(20,"'now'");
                        pstmt2.setString(21,jComboBox11.getSelectedItem().toString());
                        pstmt2.setString(22,jTextField2.getText().toString());
                        pstmt2.setString(23,jTextField15.getText().toString());
                        pstmt2.setString(24,jTextPane1.getText().toString());
                        
                        pstmt2.setString(25,jComboBox11.getSelectedItem().toString());
                        pstmt2.setString(26,jTextField121.getText().toString());
                        
                        
                        
                        pstmt2.executeUpdate();
                    }
                    
                }
            }
            
            for (int i = 0; i < jTable111.getRowCount(); i++){
                if (jTable111.getValueAt(i,0) != null){
                    this.jTable111.setCellSelectionEnabled(false);
                    
                    //this.jTextField9.setHighlighter().;
                    //this.jTextField9.setOpaque(true);
                    
                    java.sql.ResultSet rse121 = stm121q.executeQuery("select activity from pb_activity where code ='"+jTextField10.getText().toString()+"'");
                    
                    while (rse121.next()){
                        
                        glAcc = rse121.getObject(1).toString();
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into pb_doctors_request values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?),?, ?, ?, ?,?,?)");
                        if (jTextField12.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Patient Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(2,jTextField12.getText());
                        }
                        // pstmt2.setString(2,jTextField1.getText());
                        pstmt2.setString(3,jTextField7.getText());
                        if (jTextField8.getText().equals("")) {
                            javax.swing.JOptionPane.showMessageDialog(this,"Doctor's Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                        } else{
                            
                            pstmt2.setString(4,jTextField8.getText());
                        }
                        
                        
                        pstmt2.setString(1,jTextField93.getText());
                        //  pstmt2.setString(2,jTextField1.getText());
                        //  pstmt2.setString(3,jTextField7.getText());
                        // pstmt2.setString(4,jTextField8.getText());
                        pstmt2.setString(5,jTable111.getValueAt(i,0).toString());
                        pstmt2.setString(6,"1");
                        pstmt2.setString(7,jTable111.getValueAt(i,1).toString());
                        pstmt2.setString(8,jTextField10.getText());
                        pstmt2.setString(9,datePicker12.getDate().toString());
                        pstmt2.setString(10,billNo);
                        
                        pstmt2.setString(12,"false");
                        pstmt2.setString(11,user);
                        pstmt2.setString(13,glAcc);
                        pstmt2.setString(14,billNo);
                        pstmt2.setString(15,jTable111.getValueAt(i,2).toString());
                        
                        pstmt2.setString(17,"false");
                        pstmt2.setObject(18,jTable111.getValueAt(i,3).toString());
                        pstmt2.setString(19,jTable111.getValueAt(i,4).toString());
                        pstmt2.setString(16,"false");
                        pstmt2.setString(20,"'now'");
                        
                        pstmt2.setObject(21,jTable111.getValueAt(i,5).toString());
                        
                        pstmt2.executeUpdate();
                        
                        
                    }
                }
                
                
            }
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+billNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            
            
            
            for (int k = 0; k < jTable13.getRowCount(); k++ ) {
                for (int r = 0; r < jTable13.getColumnCount(); r++ ) {
                    jTable13.setValueAt(null,k,r);
                }
            }
            for (int k = 0; k < jTable111.getRowCount(); k++ ) {
                for (int r = 0; r < jTable111.getColumnCount(); r++ ) {
                    jTable111.setValueAt(null,k,r);
                }
            }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }    // Add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed
    
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog1.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        if(this.jCheckBox42.isSelected()){
            
            if(jTextField111.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select product as service_type,selling_price as price,gl_code FROM st_stock_prices,st_stock_item WHERE product_id ILIKE '%"+jTextField111.getText()+"%' and st_stock_prices.department ilike 'pharm%' and opd = true and product ilike description order by service_type"));
                //  select product as service_type,selling_price as price,gl_code FROM st_stock_prices WHERE product ILIKE '%"+jTextField11.getText()+"%' AND department ilike '"+jComboBox1.getSelectedItem()+"%' order by service_type
                
                
                jSearchScrollPane1.setViewportView(jSearchTable1);
                
                
            }
        }else{
            if(jTextField111.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select product as service_type,selling_price as price,gl_code FROM st_stock_prices,st_stock_item WHERE product ILIKE '%"+jTextField111.getText()+"%' and st_stock_prices.department ilike 'pharm%' and opd = true and product ilike description order by service_type"));
                
                
                jSearchScrollPane1.setViewportView(jSearchTable1);
                System.out.println("Cannot sort out");
                
            }
        }/// Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    private void cmboxMouseClickedd() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane14.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
    }
    private void jTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable111MouseClicked
        if (jTable111.getSelectedColumn() == 0) {
            
            this.cmboxMouseClickedd();
        }  // Add your handling code here:
    }//GEN-LAST:event_jTable111MouseClicked
    
    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }  // Add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed
    
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
/*        javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.ClinicalExamIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true); 
 
 */// Add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        int i = 0;
        
        try {
            
            // for (int l = 0; l < listofDays.length; l++) {
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct hp_patient_visit.patient_no,hp_patient_visit.input_date::timestamp(0),hp_patient_visit.name,hp_patient_register.category,hp_patient_register.department,hp_patient_visit.comments,'false' as bill from hp_patient_visit,hp_patient_register where transaction_type ilike 'reg%' and hp_patient_visit.date = current_date and nature ='1' and hp_patient_visit.patient_no=hp_patient_register.patient_no and hp_patient_visit.comments = '"+this.jComboBox11.getSelectedItem().toString()+"' ORDER BY input_date");
            
            // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct hp_patient_visit.input_date::timestamp(0),hp_patient_visit.patient_no,hp_patient_visit.name,hp_patient_register.category,hp_patient_register.department,hp_patient_visit.comments,'false' as bill from hp_patient_visit,hp_patient_register where transaction_type ilike 'reg%' and hp_patient_visit.date = current_date and nature is null and hp_patient_visit.patient_no=hp_patient_register.patient_no ORDER BY input_date");
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(1), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(2), i,0);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                
                jTable1.setValueAt(java.lang.Boolean.valueOf(false), i,6 );
                
                i++;
                
            }
            
            //}
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //   java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct hp_patient_visit.input_date::timestamp(0),hp_patient_visit.patient_no,hp_patient_visit.name,hp_patient_register.category,hp_patient_register.department,hp_patient_visit.comments,'false' as bill from hp_patient_visit,hp_patient_register where transaction_type ilike 'reg%' and hp_patient_visit.date = current_date and nature ='1' and hp_patient_visit.patient_no=hp_patient_register.patient_no ORDER BY input_date");
        jButton121.setEnabled(true);
        jButton14.setEnabled(true);
        jButton22.setEnabled(true);
        jButton5.setEnabled(false);
        jTextField9.setText(jTable1.getValueAt(jTable1.getSelectedRow(),2).toString());
        jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
        jTextField16.setText(jTable1.getValueAt(jTable1.getSelectedRow(),4).toString());
        // jTextField17.setText(jTable1.getValueAt(jTable1.getSelectedRow(),4).toString());
        
        
        
        jTextField92.setText(jTable1.getValueAt(jTable1.getSelectedRow(),2).toString());
        jTextField11.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
        jTextField21.setText(jTable1.getValueAt(jTable1.getSelectedRow(),4).toString());
        //jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
        
        jTextField93.setText(jTable1.getValueAt(jTable1.getSelectedRow(),2).toString());
        jTextField12.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
        jTextField7.setText(jTable1.getValueAt(jTable1.getSelectedRow(),4).toString());
        //jTextField22.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
        
        jTextField36.setText(jTable1.getValueAt(jTable1.getSelectedRow(),2).toString());
        jTextField18.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
        jTextField20.setText(jTable1.getValueAt(jTable1.getSelectedRow(),4).toString());
        //    jTextField19.setText(jTable1.getValueAt(jTable1.getSelectedRow(),4).toString());
        String Sex = null;
        try {
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select sex,year_of_birth,category from hp_patient_register where patient_no ='"+jTable1.getValueAt(jTable1.getSelectedRow(),1).toString()+"' ");
            while (rset1.next()){
                
                jTextField15.setText(rset1.getObject(2).toString());
                jTextField2.setText(rset1.getObject(3).toString());
                jTextField17.setText(rset1.getObject(3).toString());
                jTextField22.setText(rset1.getObject(3).toString());
                jTextField19.setText(rset1.getObject(3).toString());
                
                
                Sex = rset1.getObject(1).toString();
                
                if (Sex.equalsIgnoreCase("FeMale")){
                    
                    this.jCheckBox63.setSelected(true);
                    
                }else{
                    this.jCheckBox52.setSelected(true);
                }
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jEditorPane2.setText("");
        
        jEditorPane111.setText("");
        jEditorPane11.setText("");
        jEditorPane112.setText("");
        
        
        
        int i = 0;
        try {
            connectDB.setAutoCommit(false);
            // for (int i = 0; i < jTable1.getRowCount(); i++){
            if (jTable1.getValueAt(jTable1.getSelectedRow(),0) != null){
                //   if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 9).toString()) == java.lang.Boolean.TRUE) {
                
                java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE hp_patient_visit SET nature = 'Cons',doctor_name  = current_user ,cons_time =current_timestamp where patient_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),2).toString()+"' AND transaction_type ilike  'Regis%' and date = '"+jTable1.getValueAt(jTable1.getSelectedRow(),0).toString()+"'");
                pstmt46.executeUpdate();
                
                // }
            }
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct hp_patient_visit.patient_no,hp_patient_visit.date,hp_patient_visit.input_date::timestamp(0),hp_patient_visit.name,pay_mode,'false' as bill from hp_patient_visit,hp_patient_register where transaction_type ilike 'reg%' and hp_patient_visit.date = current_date and nature ='1' and hp_patient_visit.patient_no=hp_patient_register.patient_no and hp_patient_visit.comments = '"+this.jComboBox11.getSelectedItem().toString()+"' ORDER BY input_date");
            //java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct date,input_date::timestamp(0),patient_no,name,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null ORDER BY input_date");
            
            while (rsetTable11.next()) {
                
                jTable1.setValueAt(rsetTable11.getObject(2), i, 0);
                jTable1.setValueAt(rsetTable11.getObject(3), i, 1);
                jTable1.setValueAt(rsetTable11.getObject(1), i, 2);
                jTable1.setValueAt(rsetTable11.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable11.getObject(5), i, 4);
                
                jTable1.setValueAt(java.lang.Boolean.valueOf(false), i,5);
                
                i++;
                
            }
            
            java.sql.Statement st = connectDB.createStatement();
            
            
            java.sql.ResultSet rset = st.executeQuery("select  weight||' HEGHT '||height||' DIASTOLIC '||diastolic||' SYSTOLIC '||systolic||' PULSE '||pulse||' TEMP' ||temp||' RESP' ||resp from hp_signs_record where  input_date::date =current_date and patient_no ='"+jTextField92.getText()+"'");
            
            
            
            while (rset.next()) {
                
                
                
                
                this.jEditorPane2.setText(rset.getObject(1).toString());
                              /*
                               
                                table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                                phrase = new Phrase(rset.getObject(1).toString(), pFontHeader1);
                                table.addCell(phrase);
                                Weight = rset.getDouble(1);
                                table.getDefaultCell().setHorizontalAlignment(PdfCell.ALIGN_LEFT);
                                phrase = new Phrase(rset.getObject(2).toString(), pFontHeader1);
                                Height = rset.getDouble(2);
                                table.addCell(phrase);
                                 if(Height == 0.00){
                               
                        table.addCell("-");
                    }else{
                               
                    Bmi = (Weight*10000)/(Height*Height);
                    //   table1.addCell(new com.afrisoftech.sys.Format2Currency().Format2Currency(rset5.getString(9)));
                //table.addCell(new com.afrisoftech.sys.Format2Currency().Format2Currency(""+Bmi));
                  phrase = new Phrase(new com.afrisoftech.sys.Format2Currency().Format2Currency(java.lang.String.valueOf(Bmi)), pFontHeader1);
                      table.addCell(phrase);
                    }
                               */
                
                
                
            }
            
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            
            
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void searchButtonClicked() {
        
  /*      System.out.println("Showing dialog");
   
        java.awt.Point point = this.jTextField7.getLocationOnScreen();
   
        jSearchDialog11.setSize(400,200);
   
        jSearchDialog11.setLocation(point);
   
        jSearchDialog11.show();
   */
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    
    private void populateTable1(java.lang.String patient_no) {
        
        
    }
    
    public void run() {
        
        while(getList) {
            
            runGetListThread();
            
            try {
                
                Thread.currentThread().sleep(10000);
                
            } catch(java.lang.InterruptedException IntExec){
                
                javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
            // getList = false;
            
        }
        
    }
    
    public void runGetListThread() {
        int l = 0;
        int j = 0;
        int i = 0;
        int r = 0;
        int n = 0;
        int patNo = 0;
        try {
            
            // for (int l = 0; l < listofDays.length; l++) {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct count(hp_patient_visit.patient_no) from hp_patient_visit,hp_patient_register where hp_patient_visit.transaction_type ilike 'reg%' and hp_patient_visit.date = current_date and nature ='1' and hp_patient_visit.comments = '"+this.jComboBox11.getSelectedItem().toString()+"' and hp_patient_visit.patient_no=hp_patient_register.patient_no");
            //   java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct count(patient_no) from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null");
            
            while (rsetTable11.next()) {
                patNo = rsetTable11.getInt(1);
                
            }
            
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct hp_patient_visit.patient_no,hp_patient_visit.date,hp_patient_visit.input_date::timestamp(0),hp_patient_visit.name,pay_mode,'false' as bill from hp_patient_visit,hp_patient_register where transaction_type ilike 'reg%' and hp_patient_visit.date = current_date and nature ='1' and hp_patient_visit.patient_no=hp_patient_register.patient_no and hp_patient_visit.comments = '"+this.jComboBox11.getSelectedItem().toString()+"' ORDER BY input_date");
            //java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct date,input_date::timestamp(0),patient_no,name,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null ORDER BY input_date");
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(2), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(1), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                
                jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 5);
                
                i++;
                
            }
            stmtTable1.close();
            rsetTable1.close();
            
            stmtTable11.close();
            rsetTable11.close();
            //}
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        try{
            java.sql.Statement stmtTable1l = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1l = stmtTable1l.executeQuery("select curr_date::time(0),patient_no,patient_name,payment_mode,service,quantity,amount,inv_no,doctor,'false' as bill,bed_no,time_due from pb_doctors_request where revenue_code ilike 'lab%' and paid = false AND collected = false and trans_date>=current_date -1 ORDER BY curr_date::time(0) asc");
            
            
            while (rsetTable1l.next()) {
                
                jTable14.setValueAt(rsetTable1l.getObject(1), r, 0);
                jTable14.setValueAt(rsetTable1l.getObject(2), r, 1);
                jTable14.setValueAt(rsetTable1l.getObject(3), r, 2);
                jTable14.setValueAt(rsetTable1l.getObject(4), r, 3);
                jTable14.setValueAt(rsetTable1l.getObject(5), r, 4);
                jTable14.setValueAt(rsetTable1l.getObject(6), r, 5);
                jTable14.setValueAt(rsetTable1l.getObject(7), r, 6);
                jTable14.setValueAt(rsetTable1l.getObject(8), r, 7);
                jTable14.setValueAt(rsetTable1l.getObject(9), r, 8);
                jTable14.setValueAt(java.lang.Boolean.valueOf(false), i, 9);
                jTable14.setValueAt(rsetTable1l.getObject(11), r, 10);
                jTable14.setValueAt(rsetTable1l.getObject(12), r, 11);
                
                
                r++;
                
            }
            
            stmtTable1l.close();
            rsetTable1l.close();
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        if(patNo >5){
            
            this.jLabel1.setText("About '"+patNo+"' Patients Are Waiting For Consultation");
            this.jLabel1.setForeground(new java.awt.Color(255,0,51));
        }else{
            this.jLabel1.setText("Consultation Going Smoothly About '"+patNo+"' Patients Waiting");
            this.jLabel1.addNotify();
            
            
            this.jLabel1.setForeground(new java.awt.Color(51,51,255));
        }
        
        
        
        String labNo= null;
        String patientNo= null;
        int p = 0;
        int q = 0;
        //  int r = 0;
        int patNo1 = 0;
        int Total1 =0;
        int Total =0;
        int labNo1 = 0;
        try {
            java.sql.Statement stmtTable113 = connectDB.createStatement();
            java.sql.ResultSet rsetTable113 = stmtTable113.executeQuery("select count(distinct lab_no) from hp_lab_results where doc_read = false  and result_shown = false AND date >='"+datePicker11.getDate().toString()+"' and lab_no !='null' and lab_no is not null ");
            
            // java.sql.ResultSet rsetTable113 = stmtTable113.executeQuery("select count(distinct lab_no) from hp_lab_results where doc_read = false  and result_shown = false AND date >='"+datePicker11.getDate().toString()+"' and lab_no !='null' and lab_no is not null and clinic ilike '"+jComboBox11.getSelectedItem().toString()+"'");
            
            while (rsetTable113.next()) {
                labNo1 = rsetTable113.getInt(1);
                System.out.println("Lab no is "+labNo1);
            }
            
            if(labNo1>0){
                java.sql.Statement stmtTable112 = connectDB.createStatement();
                
                //java.sql.ResultSet rsetTable112 = stmtTable112.executeQuery("select distinct lab_no,patient_name from hp_lab_results where doc_read = false and result_shown = false AND date >='"+datePicker13.getDate().toString()+"' and lab_no is not null and lab_no !='null' and clinic ilike '"+jComboBox11.getSelectedItem().toString()+"' order by lab_no  ");
                java.sql.ResultSet rsetTable112 = stmtTable112.executeQuery("select distinct lab_no,patient_name from hp_lab_results where doc_read = false and result_shown = false AND date >='"+datePicker13.getDate().toString()+"' and lab_no is not null and lab_no !='null' order by lab_no  ");
                
                
                
                while (rsetTable112.next()) {
                    labNo = rsetTable112.getString(1);
                    patientNo = rsetTable112.getString(2);
                    System.out.println("Lab no2 is "+patientNo);
                }
                
                stmtTable112.close();
                rsetTable112.close();
                
            }else{
            }
            
            // for (int l = 0; l < listofDays.length; l++) {
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select count(distinct lab_no) from hp_lab_results where doc_read = false  AND date >='"+datePicker13.getDate().toString()+"'");
            
            
            while (rsetTable11.next()) {
                patNo1 = rsetTable11.getInt(1);
                
            }
            
            //   jTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select distinct date,patient_no,patient_name,lab_no,doc_read from hp_lab_results where doc_read = false AND date >='"+datePicker1.getDate().toString()+"'  ORDER BY date,lab_no"));
            
            
            java.sql.Statement stmtTable1r = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1r = stmtTable1r.executeQuery("select distinct date,patient_no,patient_name,lab_no,doc_read from hp_lab_results where doc_read = false AND date >='"+datePicker13.getDate().toString()+"' ORDER BY date,lab_no");
            
            
            while (rsetTable1r.next()) {
                
                jTable15.setValueAt(rsetTable1r.getObject(1), p, 0);
                jTable15.setValueAt(rsetTable1r.getObject(2), p, 1);
                jTable15.setValueAt(rsetTable1r.getObject(3), p, 2);
                jTable15.setValueAt(rsetTable1r.getObject(4), p, 3);
                jTable15.setValueAt(rsetTable1r.getObject(5), p, 4);
                
                p++;
                
            }
            stmtTable1r.close();
            rsetTable1r.close();
            //}
            stmtTable113.close();
            rsetTable113.close();
            
            stmtTable11.close();
            rsetTable11.close();
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        if(patNo1 >5){
            
            this.jLabel19.setText("You Have '"+patNo1+"' Results  Unread");
            this.jLabel19.setForeground(new java.awt.Color(255,0,51));
        }else{
            this.jLabel19.setText("You Have '"+patNo1+"' Results  Unread");
            
            
            this.jLabel19.setForeground(new java.awt.Color(51,51,255));
        }
        
        //for(patNo=0;patNo>i;patNo++){
        
        //  if(patNo>=patNo+1){
        
        // if(labNo.equalsIgnoreCase(null)){
        
        // }else{
       /* 
        if(labNo1>0){
            java.awt.Toolkit.getDefaultToolkit().beep();
            //  javax.swing.JOptionPane.showMessageDialog(this, "Result No. '"+labNo+"' for '"+patientNo+"' are out","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            try {
                
                java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE hp_lab_results SET result_shown = true where lab_no = '"+labNo+"'");
                pstmt46.executeUpdate();
                
                
            } catch(java.sql.SQLException sqlExec) {
                
                sqlExec.printStackTrace();
                
                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                
            }
        }else{
            
        }
        */
        
        
        
        
        
        
    }
    
    
    
/*    private void populateTable14(java.lang.String patient_no) {
 
 
    }
 
    public void run() {
 
        while(getList1) {
 
            runGetListThread1();
 
            try {
 
                Thread.currentThread().sleep(10000);
 
            } catch(java.lang.InterruptedException IntExec){
 
                javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
 
            }
 
            // getList = false;
 
        }
 
    }
 
    public void runGetListThread1() {
 
        int j = 0;
        int i = 0;
        int n = 0;
 
        try {
 
            // for (int l = 0; l < listofDays.length; l++) {
 
            java.sql.Statement stmtTable1 = connectDB.createStatement();
 
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select trans_date,patient_no,patient_name,payment_mode,service,quantity,amount,inv_no,doctor,'false' as bill,bed_no,time_due from pb_doctors_request where revenue_code ilike 'lab%' and paid = false AND collected = false and trans_date>=current_date -2 ORDER BY trans_date asc");
 
 
            while (rsetTable1.next()) {
 
                jTable14.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable14.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable14.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable14.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable14.setValueAt(rsetTable1.getObject(5), i, 4);
                jTable14.setValueAt(rsetTable1.getObject(6), i, 5);
                jTable14.setValueAt(rsetTable1.getObject(7), i, 6);
                jTable14.setValueAt(rsetTable1.getObject(8), i, 7);
                jTable14.setValueAt(rsetTable1.getObject(9), i, 8);
                jTable14.setValueAt(java.lang.Boolean.valueOf(false), i, 9);
                jTable14.setValueAt(rsetTable1.getObject(11), i, 10);
                jTable14.setValueAt(rsetTable1.getObject(12), i, 11);
 
 
                i++;
 
            }
 
            //}
 
 
 
 
        } catch(java.sql.SQLException sqlExec) {
 
            sqlExec.printStackTrace();
 
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
 
        }
 
 
 
    }
 */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton searchButton;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JDialog jSearchDialog214;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JPanel jPanel73;
    private javax.swing.JPanel jPanel421;
    private javax.swing.JDialog jSearchDialog212;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel611;
    private javax.swing.JButton jButton34;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField181;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JButton jButton32;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JButton searchButton1;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JTable jTable14;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JButton jButton522;
    private javax.swing.JCheckBox jCheckBox71;
    private javax.swing.JButton jButton122;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JButton jButton36;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JPanel jPanel4111;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JButton jButton13;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTable jSearchTable212;
    private javax.swing.JScrollPane jScrollPane131;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JTextField jTextField91;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox1211;
    private javax.swing.JCheckBox jCheckBox212;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JTextField jTextField115;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JCheckBox jCheckBox62;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton jButton15;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel342;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton81;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JTextField jTextField63;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JPanel jPanel423;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton911;
    private javax.swing.JLabel jLabel9211;
    private javax.swing.JButton searchButton23;
    private javax.swing.JTextField jTextField121;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JButton searchButton4;
    private javax.swing.JTextField jTextField93;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton44;
    private javax.swing.JTextField jTextField1711;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JButton searchButton21;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JTextPane jTextPane14;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable jSearchTable2;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JTextField jTextField61;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JButton jButton45;
    private javax.swing.JScrollPane jSearchScrollPane212;
    private com.afrisoftech.lib.DatePicker datePicker14;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JCheckBox jCheckBox12111;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel111;
    private com.afrisoftech.lib.DatePicker datePicker12;
    private javax.swing.JTextField jTextField811;
    private javax.swing.JButton jButton121;
    private javax.swing.JPanel jSearchPanel212;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JTextField jTextField113;
    private javax.swing.JLabel jLabel811;
    private javax.swing.JTextField jTextField11312;
    private javax.swing.JPanel jPanel92;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTable jSearchTable214;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JTable jSearchTable211;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JScrollPane jSearchScrollPane214;
    private javax.swing.JScrollPane jScrollPane132;
    private javax.swing.JPanel jSearchPanel214;
    private javax.swing.JEditorPane jEditorPane111;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jButton541;
    private javax.swing.JTextField jTextField11314;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JButton jButton5212;
    private javax.swing.JPanel jSearchPanel211;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JTextField jTextField911;
    private javax.swing.JTable jSearchTable213;
    private javax.swing.JCheckBox jCheckBox132;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel32;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JButton jButton8;
    private javax.swing.JEditorPane jEditorPane113;
    private javax.swing.JDialog jSearchDialog211;
    private javax.swing.JButton jButton12;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel81;
    private javax.swing.JButton searchButton12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JLabel jLabel911;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField82;
    private javax.swing.JButton jButton92;
    private javax.swing.JPanel jPanel83;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JButton jButton71;
    private javax.swing.JCheckBox jCheckBox81;
    private javax.swing.JCheckBox jCheckBox91;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JButton jButton52;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jButton31;
    private javax.swing.JTextField jTextField12111;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JLabel jLabel43;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.JPanel jPanel412;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JButton jButton61;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField9111;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JButton jButton33;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JLabel jLabel2311;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton63;
    private javax.swing.JLabel jLabel1133;
    private javax.swing.JDialog jSearchDialog213;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JLabel jLabel612;
    private javax.swing.JPanel jPanel72;
    private javax.swing.JCheckBox jCheckBox53;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1;
    private com.afrisoftech.lib.DatePicker datePicker111;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JScrollPane jScrollPane161;
    private javax.swing.JCheckBox jCheckBox61;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel82;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JTextField jTextField11311;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JCheckBox jCheckBox72;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox111;
    private javax.swing.JTextField jTextField101;
    private javax.swing.JScrollPane jScrollPane121;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel11;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JTable jTable15;
    private javax.swing.JLabel jLabel22;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JCheckBox jCheckBox121;
    private javax.swing.JTextField jTextField922;
    private javax.swing.JLabel jLabel11311;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JButton searchButton1111;
    private javax.swing.JButton jButton14;
    private javax.swing.JTextField jTextField241;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JTextField jTextField114;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JButton jButton521;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JPanel jPanel9111;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JTextField jTextField94;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JButton searchButton22;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jCheckBox63;
    private javax.swing.JTextField jTextField81;
    private javax.swing.JButton jButton82;
    private javax.swing.JButton searchButton3;
    public javax.swing.JButton jButton43;
    private javax.swing.JLabel jLabel241;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JCheckBox jCheckBox1321;
    private javax.swing.JLabel jLabel621;
    private javax.swing.JButton jButton46;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JCheckBox jCheckBox141;
    private javax.swing.JCheckBox jCheckBox32;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel422;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JTable jTable1;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JButton jButton5213;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTable jTable111;
    private com.afrisoftech.lib.DatePicker datePicker13;
    private javax.swing.JCheckBox jCheckBox13111;
    private javax.swing.JPanel jPanel911;
    private javax.swing.JButton jButton72;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.JTextField jTextField62;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JEditorPane jEditorPane11;
    private javax.swing.JEditorPane jEditorPane112;
    private javax.swing.JTextField jTextField912;
    private javax.swing.JTextField jTextField91111;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JPanel jPanel7;
    private com.afrisoftech.lib.DatePicker datePicker121;
    private javax.swing.JLabel jLabel812;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JButton searchButton111;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel93;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JCheckBox jCheckBox82;
    private javax.swing.JButton jButton5211;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JPanel jPanel231;
    private javax.swing.JTextField jTextField11313;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTable jTable11;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JScrollPane jSearchScrollPane213;
    private javax.swing.JButton jButton41;
    private javax.swing.JTextField jTextField1213;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JCheckBox jCheckBox1411;
    private javax.swing.JButton jButton91;
    private javax.swing.JCheckBox jCheckBox122;
    private javax.swing.JCheckBox jCheckBox12;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JCheckBox jCheckBox511;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JCheckBox jCheckBox1221;
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JTable jTable13;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JComboBox jComboBox1111;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel411;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel91;
    private javax.swing.JTextField jTextField923;
    private javax.swing.JCheckBox jCheckBox1311;
    private javax.swing.JCheckBox jCheckBox131;
    private javax.swing.JTextField jTextField211;
    private javax.swing.JPanel jPanel35;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JTextField jTextField921;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JLabel jLabel5;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.JButton searchButton11;
    private javax.swing.JPanel jPanel811;
    private javax.swing.JPanel jPanel413;
    private javax.swing.JButton jButton5214;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jSearchPanel213;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox52;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JPanel jPanel41111;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel921;
    private javax.swing.JScrollPane jSearchScrollPane211;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JButton jButton22;
    private com.afrisoftech.lib.DatePicker datePicker11;
    // End of variables declaration//GEN-END:variables
    
}
