/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class ConsultationIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
    
    /** Creates new form loanpymntintfr */
    javax.swing.table.TableModel tableModel = null;
    
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    java.lang.Thread getListThread;
    int PatLabResults = 90;
    boolean getList;
    
    public ConsultationIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        
        
        
        getListThread = new java.lang.Thread(this, "Update_Lab_Tests");
        
        initComponents();
        
        getList = true;
        
        getListThread.start();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane311 = new javax.swing.JScrollPane();
        jSearchTable311 = new com.afrisoftech.dbadmin.JTable();
        jButton9211 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class,  java.lang.Object.class,  java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel81 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        searchButton2 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField92 = new javax.swing.JTextField();
        jTextField71 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable311.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable311.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable311MouseClicked(evt);
            }
        });

        jSearchScrollPane311.setViewportView(jSearchTable311);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane311, gridBagConstraints);

        jButton9211.setText("Close");
        jButton9211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton9211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consultation");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setAutoscrolls(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Trans Date", "Patient No", "Pat Name", "Consult"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel21.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 255), 2, true), "Click The Relevant Button", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 255)));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 102));
        jButton1.setText("History");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(255, 0, 255));
        jButton2.setText("Diagnosis");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton2, gridBagConstraints);

        jButton5.setBackground(new java.awt.Color(102, 255, 51));
        jButton5.setText("Request");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton5, gridBagConstraints);

        jButton7.setBackground(new java.awt.Color(102, 255, 204));
        jButton7.setText("Sick Sheet");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton7, gridBagConstraints);

        jButton8.setBackground(new java.awt.Color(255, 153, 153));
        jButton8.setText("Clinical Examination");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jButton8, gridBagConstraints);

        jButton9.setBackground(new java.awt.Color(51, 204, 255));
        jButton9.setText("Lab Pending Req.");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jButton9, gridBagConstraints);

        jButton10.setBackground(new java.awt.Color(255, 204, 204));
        jButton10.setText("Results");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jButton10, gridBagConstraints);

        jButton11.setBackground(new java.awt.Color(153, 153, 0));
        jButton11.setText("Bookings");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jButton11, gridBagConstraints);

        jLabel81.setForeground(new java.awt.Color(255, 0, 51));
        jLabel81.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel81, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(new javax.swing.border.EtchedBorder());
        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton2, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel42.add(jTextField8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jPanel42, gridBagConstraints);

        jLabel10.setText("Doctor No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel10, gridBagConstraints);

        jTextField92.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField92, gridBagConstraints);

        jTextField71.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField71, gridBagConstraints);

        jTextField21.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField21, gridBagConstraints);

        jLabel31.setForeground(new java.awt.Color(255, 0, 51));
        jLabel31.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel31, gridBagConstraints);

        jLabel41.setForeground(new java.awt.Color(255, 0, 51));
        jLabel41.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel41, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jLabel1, gridBagConstraints);

        setBounds(0, 0, 748, 428);
    }//GEN-END:initComponents

    private void jSearchTable311MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable311MouseClicked
       jTextField92.setText(jSearchTable311.getValueAt(jSearchTable311.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable311.getValueAt(jSearchTable311.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable311MouseClicked

    private void jButton9211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9211ActionPerformed
       this.jSearchDialog31.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton9211ActionPerformed

    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
       if(jTextField1121.getCaretPosition() < 1){
            
            System.out.println("Nothing");
        }else{
            jSearchTable311.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1121.getText()+"%' order by first_name"));
            
            
            jSearchScrollPane311.setViewportView(jSearchTable311);
            
            
        }    // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate
 private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField8.getLocationOnScreen();
        
        jSearchDialog31.setSize(400,200);
        
        jSearchDialog31.setLocation(point);
        
        jSearchDialog31.show();
        
        
        
    }
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
       searchButtonClickedw();  // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        javax.swing.JInternalFrame other = new com.afrisoftech.hospital.TheatreBookingIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
     javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.LabPendingresultsIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);    // Add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
      
       javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.LabPendingRequestsIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);
      // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.ClinicalExamIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.ClinicalExamIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true); // Add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.DocRequestIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       javax.swing.JInternalFrame other = new com.afrisoftech.accounting.SickLeaveIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.PatHistIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        javax.swing.JInternalFrame other = new PatientDiagIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);  // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
           int i = 0;      
           
        try {
            
            // for (int l = 0; l < listofDays.length; l++) {
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct date,input_date::timestamp(0),patient_no,name,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null ORDER BY input_date");
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
              
              
                  jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 4);
                
                i++;
                
            }
            
            //}
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
         // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
 
              
            
            
               java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //  try{
        String opvisitid = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
         String AccDesc = null;
         String user = null;
        String accDesc1 = null;
        String insAcc = null;
        String patientAcc1 = null;
        String patientCat = null;
        String AccDesc2 = null;
        String patientAcc2 = null;
        String AccDesc22 = null;
        String patientAcc22 = null;
        //  String AccDesc22 = null;
        String AccDesc1 = null;
        double cons = 0.00;
        double hos = 0.00;
        double doc = 0.00;
        double amt = 0.00;
        double total = 0.00;
        if(this.jTextField8.getText().equals("")){
              javax.swing.JOptionPane.showMessageDialog(this,"Doctor Name Missing!","Information Message",javax.swing.JOptionPane.WARNING_MESSAGE);
         
        }else{
        try {
            connectDB.setAutoCommit(false);
            
            
            java.sql.Statement stm1c = connectDB.createStatement();
            java.sql.ResultSet rse1c = stm1c.executeQuery("select distinct category from pb_patient_categories WHERE CATEGORY IS NOT NULL");
            while (rse1c.next()){
                
                patientCat = rse1c.getObject(1).toString();
                
            }
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ILIKE 'cc'");
            while (rse12.next()){
                
                patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
            }
            
             java.sql.Statement stm12C = connectDB.createStatement();
            java.sql.ResultSet rse12C = stm12C.executeQuery("select rate from pb_operating_parameters where category ILIKE 'CF'");
            while (rse12C.next()){
                
                cons = rse12C.getDouble(1);
                
            }
            
            
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.ResultSet rse122 = stm122.executeQuery("select code,activity from pb_activity where activity_category ilike 'eopd'");
            while (rse122.next()){
                
                patientAcc2 = rse122.getObject(1).toString();
                AccDesc2 = rse122.getObject(2).toString();
            }
            
           
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            while (rst.next()){
                rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
            }
                      
              
                int i= this.jTable1.getSelectedRow();    
                    
           // for (int i = 0; i < jTable11.getRowCount(); i++){
                if (jTable1.getValueAt(i,0) != null){
                    java.sql.Statement stm27 = connectDB.createStatement();
                    java.sql.ResultSet rse27 = stm27.executeQuery("SELECT pay_mode,category from hp_patient_register where patient_no = '"+jTable1.getValueAt(i,2).toString()+"'");
                    while (rse27.next()){
                        
                        this.jTextField71.setText(rse27.getObject(1).toString());
                      this.jTextField21.setText(rse27.getObject(2).toString());
                   
                       }
            
            if(patientCat.equalsIgnoreCase("RT")){
                java.sql.Statement stm12123 = connectDB.createStatement();
                java.sql.ResultSet rse1212 = stm12123.executeQuery("select hospital/100,doctor/100 from pb_patient_categories where patient_type ilike '"+jTextField71.getText()+"'");
                while (rse1212.next()){
                    
                    hos = rse1212.getDouble(1);
                    doc = rse1212.getDouble(2);
                }
                
                
            } else{
                if(patientCat.equalsIgnoreCase("OP")){
                    java.sql.Statement stm12123 = connectDB.createStatement();
                    java.sql.ResultSet rse1212 = stm12123.executeQuery("select hospital/100,doctor/100 from pb_patient_categories where patient_type ilike '"+jTextField21.getText()+"'");
                    while (rse1212.next()){
                        
                        hos = rse1212.getDouble(1);
                        doc = rse1212.getDouble(2);
                    }
                }
            }
            
            
            
            
           
          
            
                          
                      //  insAcc = rse2.getObject(1).toString();
                    
                    amt = cons*doc;
                 //   total = (java.lang.Double.parseDouble(jTable11.getValueAt(i,3).toString())*hos);
          
                   
                    java.sql.Statement ps11w1 = connectDB.createStatement();
                    java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select distinct slip_no,date from credit_acc_slip where patient_no =  '"+jTable1.getValueAt(i,1).toString()+"' order by date desc limit 1");
                    while (rst11w1.next()){
                        
                        
                        opvisitid = rst11w1.getObject(1).toString();
                    }
                  
                    
                    
                   
                    
                    
                    java.sql.PreparedStatement pstmt211 = connectDB.prepareStatement("insert into ac_doctors_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                    pstmt211.setString(1,jTextField92.getText());
                    pstmt211.setString(2,"Consultation Fee");
                    pstmt211.setString(3,jTextField8.getText());
                    pstmt211.setString(4,transNo);
                    pstmt211.setString(5,patientAcc);
                    pstmt211.setString(6,"Doctors Fee");
                    pstmt211.setString(7,"00");
                    // if(this.jTextField21.getText().toString().equalsIgnoreCase("General")){
                    pstmt211.setDouble(8,amt);
                    // }else{
                    // pstmt211.setString(8,jTable11.getValueAt(i,3).toString());
                    // }
                    pstmt211.setString(9,transNo);
                    pstmt211.setString(10,jTable1.getValueAt(i,2).toString());
                    pstmt211.setString(11,"Consultation Fee");
                    pstmt211.setString(12,"false");
                    pstmt211.setString(14,"'now'");
                    pstmt211.setString(13,user);
                    pstmt211.setString(15,"00");
                    pstmt211.setString(19,jTextField71.getText());
                    pstmt211.setString(17,"00");
                    pstmt211.setString(16,jTable1.getValueAt(i,3).toString());
                    // pstmt211.setString(18,jTable11.getValueAt(i,3).toString());
                    //   if(this.jTextField21.getText().toString().equalsIgnoreCase("General")){
                    pstmt211.setDouble(18,amt);
                     pstmt211.setString(20,jTextField21.getText());
                     pstmt211.setString(21,"'now'");
                    //  }else{
                    // pstmt211.setString(18,jTable11.getValueAt(i,3).toString());
                    // }
                    pstmt211.executeUpdate();
                    
                    
                    
                   
                    
                    java.sql.PreparedStatement pstmt293 = connectDB.prepareStatement("insert into ac_ledger values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
                    pstmt293.setObject(1,patientAcc2);
                    pstmt293.setObject(2,AccDesc2);
                    pstmt293.setString(3,jTable1.getValueAt(i,2).toString());
                    pstmt293.setObject(4,jTable1.getValueAt(i,3).toString());
                    pstmt293.setObject(5,"");
                    pstmt293.setObject(6,"");
                    pstmt293.setObject(7,"_");
                    pstmt293.setString(8,"");
                    pstmt293.setString(9,"");
                    pstmt293.setString(10,"");
                    pstmt293.setString(11,"");
                    pstmt293.setString(12,"");
                    pstmt293.setString(13,"");
                    pstmt293.setString(14,"Consultation Fee");
                    pstmt293.setString(15,"Expence");
                    pstmt293.setDouble(16,amt);
                    pstmt293.setString(17,"00");
                    pstmt293.setString(18,"'now'");
                    pstmt293.setString(19,transNo);
                    pstmt293.setBoolean(20,false);
                    pstmt293.setBoolean(21,false);
                    pstmt293.setBoolean(22,false);
                    pstmt293.setString(23,user);
                    
                    pstmt293.executeUpdate();
                   // System.out.println("Can you print this "+jTable1.getValueAt(i,3).toString());
                    
                    
                    System.out.println("Yes I Can print this "+patientAcc1);
              
                   
             
           
            
            
            
            
            
        //for (int i = 0; i < jTable1.getRowCount(); i++){
                 //   if (jTable1.getValueAt(i,0) != null){
                 //   if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 9).toString()) == java.lang.Boolean.TRUE) {
                
        java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE hp_patient_visit SET nature = 'Cons',doctor_name  = current_user where patient_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),2).toString()+"' AND transaction_type ilike  'Regis%' and date = '"+jTable1.getValueAt(jTable1.getSelectedRow(),0).toString()+"'");
                    pstmt46.executeUpdate();
             
                    
                    
                    
                    
                    
                   // }
                    }
            
            
            
            
            
            
       
               connectDB.commit();
            connectDB.setAutoCommit(true);
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                  for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
              java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct date,input_date::timestamp(0),patient_no,name,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null ORDER BY input_date");
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
              
              
                  jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 4);
                
                i++;
                
            }
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        } 
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void searchButtonClicked() {
        
  /*      System.out.println("Showing dialog");
   
        java.awt.Point point = this.jTextField7.getLocationOnScreen();
   
        jSearchDialog11.setSize(400,200);
   
        jSearchDialog11.setLocation(point);
   
        jSearchDialog11.show();
   */
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
 /*
       // double totals = 0.00;
        double totals = Double.parseDouble(jTextField1.getText());
        int i = 0;
  
        for (int j = 0; j < jTable1.getRowCount(); j++) {
  
            System.out.println(jTable1.getModel().getValueAt(j, 4).toString());
  
            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
  
                totals = totals - Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
  
                i++;
            }
        }
  
        jTextField1.setText(Double.toString(totals));
  
     //   jTextField2.setText(Integer.toString(i));
  
        System.out.println(totals);
  
        System.out.println(i);
  
        System.out.println("This table has changed");
  */
    }
    
    private void populateTable1(java.lang.String patient_no) {
        
        
    }
    
    public void run() {
        
        while(getList) {
            
            runGetListThread();
            
            try {
                
                Thread.currentThread().sleep(10000);
                
            } catch(java.lang.InterruptedException IntExec){
                
                javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
            // getList = false;
            
        }
        
    }
    
    public void runGetListThread() {
        
        int j = 0;
        int i = 0;
        int n = 0;
        int patNo = 0;
        try {
            
            // for (int l = 0; l < listofDays.length; l++) {
              java.sql.Statement stmtTable11 = connectDB.createStatement();
            
           // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct count(patient_no) from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null");
            
            while (rsetTable11.next()) {
                patNo = rsetTable11.getInt(1);
                
            }
            
          
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
           // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct date,input_date::timestamp(0),patient_no,name,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date and nature is null ORDER BY input_date");
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
              
              
                  jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 4);
                
                i++;
                
            }
            
            //}
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        
        if(patNo >5){
            
          this.jLabel1.setText("More Than '"+patNo+"' Patients Are Waiting For Consultation"); 
              this.jLabel1.setForeground(new java.awt.Color(255,0,51));
        }else{
               this.jLabel1.setText("Consultation Going Smoothly Only '"+patNo+"' Patients Waiting");   
      this.jLabel1.addNotify();   
      
               
               this.jLabel1.setForeground(new java.awt.Color(51,51,255));
        }
        
     /*   javax.swing.table.TableColumn column = null;
        for (int s = 0; s < 7; s++) {
            column = jTable1.getColumnModel().getColumn(s);
            if (s == 0) {
      
                column.setPreferredWidth(300); //sport column is bigger
            } else {
                column.setPreferredWidth(100);
      
            }
        }
      */
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jButton7;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JButton jButton11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton5;
    private javax.swing.JTextField jTextField71;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JButton jButton9211;
    private javax.swing.JTable jSearchTable311;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JScrollPane jSearchScrollPane311;
    private javax.swing.JButton searchButton2;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
