/*
 * countryintfr.java
 *
 * Created on August 13, 2002, 12:15 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class InboxIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable{
    
    /** Creates new form countryintfr */
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
     com.afrisoftech.lib.DBObject dbObject;
    String cashPoint = null;
    
    java.lang.Thread getListThread;
    
    boolean getList;
    private java.lang.String shift_no = null;
    private java.lang.String cash_no = null;
    public InboxIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
       
         dbObject = new com.afrisoftech.lib.DBObject();
        getListThread = new java.lang.Thread(this, "Update_Lab_Tests");
        
        initComponents();
        
        getList = true;
        
        getListThread.start();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jPanel711 = new javax.swing.JPanel();
        jLabel711 = new javax.swing.JLabel();
        jTextField611 = new javax.swing.JTextField();
        jPanel1111 = new javax.swing.JPanel();
        jButton3111 = new javax.swing.JButton();
        jButton5111 = new javax.swing.JButton();
        jSeparator1111 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.afrisoftech.dbadmin.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable21 = new com.afrisoftech.dbadmin.JTable();
        jLabel241 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchScrollPane.setDoubleBuffered(true);
        jSearchTable.setDoubleBuffered(true);
        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Message Box");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel3, gridBagConstraints);

        jPanel711.setLayout(new java.awt.GridBagLayout());

        jLabel711.setFont(new java.awt.Font("Dialog", 3, 18));
        jLabel711.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel711.add(jLabel711, gridBagConstraints);

        jTextField611.setEditable(false);
        jTextField611.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField611.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel711.add(jTextField611, gridBagConstraints);

        jPanel1111.setLayout(new java.awt.GridBagLayout());

        jButton3111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3111.setMnemonic('l');
        jButton3111.setText("Clear");
        jButton3111.setToolTipText("Click here to clear textfields");
        jButton3111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton3111, gridBagConstraints);

        jButton5111.setMnemonic('h');
        jButton5111.setText("Reply");
        jButton5111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1111.add(jButton5111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1111.add(jSeparator1111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel711.add(jPanel1111, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 2, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel711.add(jLabel4, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(null, "InBox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 255)));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "From", "No", "Message", "Read"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel711.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder(null, "Message", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 255)));
        jTextPane1.setFont(new java.awt.Font("Dialog", 1, 14));
        jTextPane1.setForeground(new java.awt.Color(0, 0, 255));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel711.add(jPanel2, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBorder(new javax.swing.border.TitledBorder(null, "InBox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 255)));
        jTable21.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "From", "No", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable21MouseClicked(evt);
            }
        });

        jScrollPane21.setViewportView(jTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jScrollPane21, gridBagConstraints);

        jLabel241.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jLabel241, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel711.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel711, gridBagConstraints);

        setBounds(0, 0, 622, 321);
    }//GEN-END:initComponents

    private void jTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable21MouseClicked
      String Mssg = null;
        this.jTextPane1.setText("");
        int i = jTable21.getSelectedRow();
        Mssg = jTable21.getModel().getValueAt(i, 3).toString();
                    this.jTextPane1.setText(Mssg); // Add your handling code here:
    }//GEN-LAST:event_jTable21MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
      java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
String Mssg = null;
        
        try {
            connectDB.setAutoCommit(false);
            java.sql.Statement stm12t = connectDB.createStatement();
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            
            java.sql.Statement stm121q = connectDB.createStatement();
            
            
            
            
            
            int i = jTable2.getSelectedRow();
            // for (int i = 0; i < jTable1.getRowCount(); i++){
            if (jTable2.getValueAt(i,4) != null){
                if (Boolean.valueOf(jTable2.getModel().getValueAt(i, 4).toString()) == java.lang.Boolean.TRUE) {
                    
                    System.out.println("Count"+i);
                    Mssg = jTable2.getModel().getValueAt(i, 3).toString();
                    this.jTextPane1.setText(Mssg);
                    
                    java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_TASKS SET delivered = true,dev_time =current_timestamp where task_no = '"+jTable2.getValueAt(jTable2.getSelectedRow(),2).toString()+"'");
                    pstmt46.executeUpdate();
                    
                    
                    
                    
                    
                    //}
                    
                    // }
                }
            }
            
            
            // }
            
            
            //}
            javax.swing.JOptionPane.showMessageDialog(this,"Successfuly READ","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            for (int k = 0; k < jTable2.getRowCount(); k++ ) {
                for (int r = 0; r < jTable2.getColumnCount(); r++ ) {
                    jTable2.getModel().setValueAt(null,k,r);
                }
            }
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
       //  jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
     // jSearchDialog.dispose();
         // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
             jSearchDialog.dispose(); // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
          
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select usename from pg_user where usename !='postgres' and usename ILIKE '%"+jTextField11.getText()+"%' order by usename"));
                
                
                
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
           // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
//        java.awt.Point point = jScrollPane1.getLocationOnScreen();
        //jSearchDialog.setSize(400,200);
       // jSearchDialog.setLocation(point);
        jSearchDialog.show();
    }
    private void jButton5111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5111ActionPerformed
      javax.swing.JInternalFrame other = new com.afrisoftech.laboratory.CommIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_jButton5111ActionPerformed
        
    private void jButton3111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3111ActionPerformed
//        jTextField20.setText("");
//        jTextField161.setText("");
        //        jTextField25.setText("");
        //        jTextField9.setText("");
//        jTextField3.setText("");
     
        // Add your handling code here:
    }//GEN-LAST:event_jButton3111ActionPerformed
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        //        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        //        jSearchDialog.setSize(400,200);
        
        //        jSearchDialog.setLocation(point);
        
        //  jSearchDialog.show();
        
        
        
    }    
    public java.lang.String getShiftNumber() {
        
        
        
        return cash_no;
        
    }
    
    
    public void run() {
        
        while(getList) {
            
            runGetListThread();
            
            try {
                
                Thread.currentThread().sleep(10000);
                
            } catch(java.lang.InterruptedException IntExec){
                
                javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
            // getList = false;
            
        }
        
    }
    
    public void runGetListThread() {
        
        int j = 0;
        int i = 0;
        int n = 0;
        int patNo = 0;
        String mssg = null;
        String from = null;
         String tyme = null;
         int labNo1 = 0;
        try {
             java.sql.Statement stmtTable113 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable113 = stmtTable113.executeQuery("select distinct count(task_no) from pb_tasks where sent = false and input_date::date=current_date and receipient ilike current_user ");
         
              while (rsetTable113.next()) {
                labNo1 = rsetTable113.getInt(1);
                        System.out.println("Lab no is "+labNo1);
            }   
            java.sql.Statement stmtTable11 = connectDB.createStatement();
             java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct task_no,description,consigner_name,input_date::time(0) from pb_tasks where sent = false and input_date::date=current_date and receipient ilike current_user order by input_date");
             java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select distinct task_no,description,consigner_name,input_date::time(0) from pb_tasks where sent = false and input_date::date=current_date and receipient ilike current_user order by input_date");
           
            while (rsetTable11.next()) {
                patNo = rsetTable11.getInt(1);
                mssg = rsetTable11.getString(2);
                from = rsetTable11.getString(3);
                 tyme = rsetTable11.getString(4);
                
            }
            
            while (rsetTable1.next()) {
                
                jTable2.setValueAt(rsetTable1.getObject(4), i, 0);
                jTable2.setValueAt(rsetTable1.getObject(3), i, 1);
                jTable2.setValueAt(rsetTable1.getObject(1), i, 2);
                jTable2.setValueAt(rsetTable1.getObject(2), i, 3);
               // jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
               // jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                jTable2.setValueAt(java.lang.Boolean.valueOf(false), i, 4);
                
                
                
                i++;
                
            }
            
            java.sql.Statement stmtTable1133 = connectDB.createStatement();
            
            // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable1133 = stmtTable1133.executeQuery("select distinct task_no,description,consigner_name,input_date::time(0) from pb_tasks where sent = true and input_date::date >='"+datePicker1.getDate().toString()+"' and receipient ilike current_user order by input_date");
         while (rsetTable1133.next()) {
                
                jTable21.setValueAt(rsetTable1133.getObject(4), i, 0);
                jTable21.setValueAt(rsetTable1133.getObject(3), i, 1);
                jTable21.setValueAt(rsetTable1133.getObject(1), i, 2);
                jTable21.setValueAt(rsetTable1133.getObject(2), i, 3);
               // jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
               // jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
               // jTable21.setValueAt(java.lang.Boolean.valueOf(false), i, 4);
                
                
                
                i++;
         }
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        if(patNo >0){
          //  this.jLabel711.gsetText("From,'"+from+"' ,'"+mssg+"'");
            this.jLabel711.setText("From,'"+from+"' ,'"+mssg+"'");
            this.jLabel711.setForeground(new java.awt.Color(255,0,51));
            this.jLabel4.setText("Time '"+tyme+"'");
            this.jLabel4.setForeground(new java.awt.Color(255,0,51));
           
        }else{
            
        }
        if(labNo1>0){
       java.awt.Toolkit.getDefaultToolkit().beep();
              javax.swing.JOptionPane.showMessageDialog(this, "You have a message from '"+from+"'","Information Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
       
    try {
                    
                    java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_tasks SET sent = true where task_no = '"+patNo+"'");
                    pstmt46.executeUpdate();
                    
                      
                } catch(java.sql.SQLException sqlExec) {
                    
                    sqlExec.printStackTrace();
                    
                    javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
                    
                }
        }else{
            
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JPanel jPanel711;
    private javax.swing.JLabel jLabel241;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jButton3111;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JTable jTable21;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1111;
    private javax.swing.JPanel jPanel11;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton5111;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JSeparator jSeparator1111;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jLabel711;
    private javax.swing.JTextField jTextField611;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.afrisoftech.lib.DatePicker datePicker1;
    // End of variables declaration//GEN-END:variables
    
}
