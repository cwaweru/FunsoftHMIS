/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class FPBillingIntfr extends javax.swing.JInternalFrame {
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    private javax.swing.JComboBox cmbox;
    private javax.swing.JComboBox cmbox3;
    private javax.swing.JComboBox cmbox4;
    java.sql.Connection connectDB = null;
    //    private GeneralBillingIntfr.SearchThread searchThread = null;
    //    private GeneralBillingIntfr.SearchServicesThread searchServicesThread = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    
    public FPBillingIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        dbObject = new com.afrisoftech.lib.DBObject();
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        
        //        searchThread = new GeneralBillingIntfr.SearchThread();
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField113 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton42 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        try {
            crset42 = new org.netbeans.lib.sql.NBCachedRowSet();
        } catch (java.sql.SQLException e1) {
            e1.printStackTrace();
        }
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new com.afrisoftech.dbadmin.JTable();
        jButton421 = new javax.swing.JButton();
        jButton521 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog11 = new javax.swing.JDialog();
        jSearchPanel11 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane11 = new javax.swing.JScrollPane();
        jSearchTable11 = new com.afrisoftech.dbadmin.JTable();
        jButton911 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog211 = new javax.swing.JDialog();
        jSearchPanel211 = new javax.swing.JPanel();
        jTextField11311 = new javax.swing.JTextField();
        jSearchScrollPane211 = new javax.swing.JScrollPane();
        jSearchTable211 = new com.afrisoftech.dbadmin.JTable();
        jButton4211 = new javax.swing.JButton();
        jButton5211 = new javax.swing.JButton();
        jSearchDialog12 = new javax.swing.JDialog();
        jSearchPanel12 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane12 = new javax.swing.JScrollPane();
        jSearchTable12 = new com.afrisoftech.dbadmin.JTable();
        jButton912 = new javax.swing.JButton();
        jSearchDialog111 = new javax.swing.JDialog();
        jSearchPanel111 = new javax.swing.JPanel();
        jTextField11111 = new javax.swing.JTextField();
        jSearchScrollPane111 = new javax.swing.JScrollPane();
        jSearchTable111 = new com.afrisoftech.dbadmin.JTable();
        jButton9111 = new javax.swing.JButton();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField112 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1121 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new com.afrisoftech.dbadmin.JTable();
        jButton921 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel42 = new javax.swing.JPanel();
        jTextField92 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton12 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox51 = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        datePicker1 = new com.afrisoftech.lib.DatePicker();

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel2.add(jTextField113, gridBagConstraints);

        jSearchScrollPane2.setDoubleBuffered(true);
        jSearchTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Patient No", "Patient Name"
            }
        ));
        jSearchTable2.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable2.setDoubleBuffered(true);
        jSearchTable2.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton42.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton42, gridBagConstraints);

        jButton52.setText("Cancel");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton52, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField11, gridBagConstraints);

        jSearchScrollPane.setDoubleBuffered(true);
        jSearchTable.setDoubleBuffered(true);
        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Cancel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        crset42.setCommand("select distinct main_service from pb_operating_parameters  where category = 'CA' ");
        crset42.setConnectionSource(pConnDB);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });

        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton421.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton421, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Close");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog11.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog11.setModal(true);
        jSearchDialog11.setUndecorated(true);
        jSearchPanel11.setLayout(new java.awt.GridBagLayout());

        jSearchPanel11.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel11.add(jTextField1111, gridBagConstraints);

        jSearchTable11.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable11MouseClicked(evt);
            }
        });

        jSearchScrollPane11.setViewportView(jSearchTable11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel11.add(jSearchScrollPane11, gridBagConstraints);

        jButton911.setText("Close");
        jButton911.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton911ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel11.add(jButton911, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog11.getContentPane().add(jSearchPanel11, gridBagConstraints);

        jSearchDialog211.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog211.setModal(true);
        jSearchDialog211.setUndecorated(true);
        jSearchPanel211.setLayout(new java.awt.GridBagLayout());

        jSearchPanel211.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11311.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11311CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 300.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel211.add(jTextField11311, gridBagConstraints);

        jSearchTable211.setToolTipText("Click on the target row to select the patient from the search.");
        jSearchTable211.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable211.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable211MouseClicked(evt);
            }
        });

        jSearchScrollPane211.setViewportView(jSearchTable211);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel211.add(jSearchScrollPane211, gridBagConstraints);

        jButton4211.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton4211, gridBagConstraints);

        jButton5211.setText("Close");
        jButton5211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5211ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel211.add(jButton5211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog211.getContentPane().add(jSearchPanel211, gridBagConstraints);

        jSearchDialog12.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog12.setModal(true);
        jSearchDialog12.setUndecorated(true);
        jSearchPanel12.setLayout(new java.awt.GridBagLayout());

        jSearchPanel12.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel12.add(jTextField1112, gridBagConstraints);

        jSearchTable12.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable12MouseClicked(evt);
            }
        });

        jSearchScrollPane12.setViewportView(jSearchTable12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel12.add(jSearchScrollPane12, gridBagConstraints);

        jButton912.setText("Close");
        jButton912.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton912ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel12.add(jButton912, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog12.getContentPane().add(jSearchPanel12, gridBagConstraints);

        jSearchDialog111.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog111.setModal(true);
        jSearchDialog111.setUndecorated(true);
        jSearchPanel111.setLayout(new java.awt.GridBagLayout());

        jSearchPanel111.setBorder(new javax.swing.border.EtchedBorder());
        jTextField11111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11111ActionPerformed(evt);
            }
        });

        jTextField11111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField11111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel111.add(jTextField11111, gridBagConstraints);

        jSearchTable111.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable111MouseClicked(evt);
            }
        });

        jSearchScrollPane111.setViewportView(jSearchTable111);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel111.add(jSearchScrollPane111, gridBagConstraints);

        jButton9111.setText("Close");
        jButton9111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9111ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel111.add(jButton9111, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog111.getContentPane().add(jSearchPanel111, gridBagConstraints);

        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog3.setModal(true);
        jSearchDialog3.setUndecorated(true);
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(new javax.swing.border.EtchedBorder());
        jTextField112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField112, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });

        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton92.setText("Cancel");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1121.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1121CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel31.add(jTextField1121, gridBagConstraints);

        jSearchTable31.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });

        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton921.setText("Close");
        jButton921.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton921ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel31.add(jButton921, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel31, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("FP Records");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(""));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Contraceptive", "Quantity", "Price(KShs)", "Total", "Gl Account", "Cycle"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        javax.swing.table.TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i == 0) {

                column.setPreferredWidth(300); //sport column is bigger
            } else {

                //if (i == 2) {
                    column.setPreferredWidth(150);
                    // }  else
                //column.setPreferredWidth(50);

            }
        }
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Select Patient Here"));
        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        jLabel1.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("FP Service");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Patient Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField2, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField4.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField4, gridBagConstraints);

        jComboBox1.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct fp_service from fp_services order by fp_service"));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.EtchedBorder());
        jTextField9.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jTextField9, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel4.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jLabel4.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextField7.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jTextField7, gridBagConstraints);

        jCheckBox3.setText("Search By  No.");
        buttonGroup2.add(jCheckBox3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jCheckBox3, gridBagConstraints);

        jCheckBox4.setText("Search By Name");
        buttonGroup2.add(jCheckBox4);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBox4, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(new javax.swing.border.EtchedBorder());
        jTextField92.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel42.add(jTextField92, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jPanel42, gridBagConstraints);

        jLabel8.setText("Doctor's Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel10.setText("Doctor No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        jTextField8.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField8, gridBagConstraints);

        jLabel21.setText("FP Method");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel21, gridBagConstraints);

        jComboBox11.setModel(com.afrisoftech.lib.ComboBoxModel.ComboBoxModel(connectDB, "select distinct fp_method from fp_methods order by fp_method"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox11, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.EtchedBorder());
        jRadioButton3.setText("New Acceptor [NA]");
        buttonGroup3.add(jRadioButton3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jRadioButton3, gridBagConstraints);

        jRadioButton4.setText("Continous Acceptor [CA]");
        buttonGroup3.add(jRadioButton4);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jRadioButton4, gridBagConstraints);

        jRadioButton5.setText("Revisit [R]");
        buttonGroup3.add(jRadioButton5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jRadioButton5, gridBagConstraints);

        jCheckBox1.setText("New to Programme [NP]");
        jPanel3.add(jCheckBox1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        jLabel6.setText("Gender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        jPanel2.add(jTextField5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = -30;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jLabel53.setText("Amount KShs.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel53, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(jTextField3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jSeparator1, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(new javax.swing.border.TitledBorder(""));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('s');
        jButton1.setText("Save");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton1, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton12.setMnemonic('R');
        jButton12.setText("Save & Print");
        jButton12.setToolTipText("Click here enter data");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton12, gridBagConstraints);

        jButton2.setText("Reprint");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jButton2, gridBagConstraints);

        jButton6.setMnemonic('r');
        jButton6.setText("Remove Row");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jButton6, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jCheckBox42.setText("Search By Code");
        buttonGroup3.add(jCheckBox42);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox42, gridBagConstraints);

        jCheckBox51.setText("Search By Name");
        buttonGroup3.add(jCheckBox51);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jCheckBox51, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jPanel10, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 153)));
        jCheckBox11.setForeground(new java.awt.Color(51, 51, 255));
        jCheckBox11.setMnemonic('o');
        jCheckBox11.setText("Out Patients");
        buttonGroup1.add(jCheckBox11);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jCheckBox11, gridBagConstraints);

        jCheckBox21.setForeground(new java.awt.Color(255, 0, 51));
        jCheckBox21.setMnemonic('i');
        jCheckBox21.setText("InPatients");
        buttonGroup1.add(jCheckBox21);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jCheckBox21, gridBagConstraints);

        jCheckBox6.setForeground(new java.awt.Color(153, 0, 153));
        jCheckBox6.setText("Others");
        buttonGroup1.add(jCheckBox6);
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jPanel31.add(jCheckBox6, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jPanel31, gridBagConstraints);

        jCheckBox5.setText("Confirm Visit");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel9.add(jCheckBox5, gridBagConstraints);

        jLabel5.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel9.add(datePicker1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel9, gridBagConstraints);

        jTabbedPane1.addTab("General", jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 697, 446);
    }//GEN-END:initComponents
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        searchButtonClickedw();
        
        // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    private void searchButtonClickedw() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField92.getLocationOnScreen();
        
        jSearchDialog31.setSize(400,200);
        
        jSearchDialog31.setLocation(point);
        
        jSearchDialog31.setVisible(true);
        
        
        
    }
    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTextField92.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 0).toString());
        jTextField8.setText(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 1).toString());
        this.jSearchDialog31.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable31MouseClicked
    
    private void jButton921ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton921ActionPerformed
        this.jSearchDialog31.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton921ActionPerformed
    
    private void jTextField1121CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1121CaretUpdate
        if(jTextField1121.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable31.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1121.getText()+"%' order by first_name"));
            
           /* try {
            
                searchRowSet31.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField1121.getText()+"%' order by first_name");
                jSearchTable31.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet31, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
            
                }));
            */
            //                jSearchTable31.setShowHorizontalLines(false);
            jSearchScrollPane31.setViewportView(jSearchTable31);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1121CaretUpdate
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        String receiptNo = null;
        try {
            connectDB.setAutoCommit(false);
            
            
            
            java.sql.Statement ps1 = connectDB.createStatement();
            java.sql.ResultSet rst1 = ps1.executeQuery("select currval('billing_no_seq')");
            while (rst1.next())
                receiptNo = rst1.getObject(1).toString();
            
            if(jCheckBox21.isSelected()){
                com.afrisoftech.hospital.IpRequestPdf policy = new com.afrisoftech.hospital.IpRequestPdf();
                policy.IpRequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),receiptNo,this.jTextField7.getText());
            }else{
                
                com.afrisoftech.hospital.RequestPdf policy = new com.afrisoftech.hospital.RequestPdf();
                policy.RequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),receiptNo,this.jTextField7.getText());
                
            }
            
            
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String visitid = "-";
        if (jCheckBox11.isSelected()){
            chbox = "OP";
        }else{
            if (jCheckBox21.isSelected()){
                chbox = "WI";
            }else{
                if (jCheckBox6.isSelected()){
                    chbox = "IP";
                }
            }
        }
        try {
            connectDB.setAutoCommit(false);
            jButton1ActionPerformed(evt);
            
            
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select currval('billing_no_seq'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
            }
            
            if(jCheckBox21.isSelected()){
                com.afrisoftech.hospital.IpRequestPdf policy = new com.afrisoftech.hospital.IpRequestPdf();
                policy.IpRequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),billNo,this.jTextField7.getText());
            }else{
                com.afrisoftech.hospital.RequestPdf policy = new com.afrisoftech.hospital.RequestPdf();
                policy.RequestPdf(connectDB, jTextField9.getText(),jTextField1.getText(),jTextField3.getText(),billNo,this.jTextField7.getText());
                
            }
            //        ps11.close();
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            // jLabel7.setForeground(java.awt.Color.blue);
            // jLabel7.setText("Insert successful");
            jButton12.setEnabled(false);
            jButton1.setEnabled(false);
            jButton2.setEnabled(true);
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        this.jTextField1.setEditable(true);
        this.jTextField7.setEditable(true);
        // Add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        javax.swing.JInternalFrame other = new ServiceAccSlipIntfr(connectDB, pConnDB);
        this.getParent().add(other, javax.swing.JLayeredPane.DEFAULT_LAYER);
        try {
            other.setSelected(true);
        } catch(java.beans.PropertyVetoException pvt){}
        other.setVisible(true);   // Add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed
    
    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        jSearchDialog3.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed
    
    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        
        jTextField1.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        
        
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField9.getText()+"'");
            while (rset1.next()){
                jTextField2.setText(rset1.getObject(1).toString());
                jTextField7.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jTextField112.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog3.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked
    
    private void jTextField112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField112CaretUpdate
        if(jTextField112.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField112.getText()+"%' and last_visit > current_date - 5 order by second_name"));
            
          /*  try {
           
                searchRowSet3.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField112.getText()+"%' and last_visit > current_date - 5 order by second_name");
           
                jSearchTable3.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet21, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                }));
           */
            jSearchTable3.setShowHorizontalLines(false);
            jSearchScrollPane3.setViewportView(jSearchTable3);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jTextField112CaretUpdate
    private void searchButtonClicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog3.setSize(400,200);
        
        jSearchDialog3.setLocation(point);
        
        jSearchDialog3.setVisible(true);
        
        
        
    }
    private void jTextField11111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11111CaretUpdate
        if(jTextField11111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            jSearchTable111.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name"));
            
            
          /*  try {
           
                searchRowSet111.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '"+jTextField11111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
           
                jSearchTable111.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet111, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
           
                }));
           */
            jSearchTable111.setShowHorizontalLines(false);
            jSearchScrollPane111.setViewportView(jSearchTable111);
            
            
        }          // Add your handling code here:
    }//GEN-LAST:event_jTextField11111CaretUpdate
    
    private void jButton5211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5211ActionPerformed
        this.jSearchDialog211.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton5211ActionPerformed
    private void searchButton11Clicked() {
        
    /*    System.out.println("Showing dialog");
     
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField911.getLocationOnScreen();
     
        jSearchDialog211.setSize(400,200);
     
        jSearchDialog211.setLocation(point);
     
        jSearchDialog211.setVisible(true);
     */
    }
    private void jButton9111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9111ActionPerformed
        jSearchDialog111.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton9111ActionPerformed
    
    private void jSearchTable111MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable111MouseClicked
        //        jTable111.setValueAt(jSearchTable111.getValueAt(jSearchTable111.getSelectedRow(),1),jTable111.getSelectedRow(), 5);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        //       jTextField11111.setText("");
        //        jSearchDialog111.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jSearchTable111MouseClicked
    
    private void jTextField11111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11111ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11111ActionPerformed
    private void cmbox211MouseClicked() {
        
 /*       System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog111.setSize(400,200);
        jSearchDialog111.setLocation(point);
        jSearchDialog111.setVisible(true);
  */
    }
    private void jButton912ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton912ActionPerformed
        jSearchDialog12.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton912ActionPerformed
    
    private void jSearchTable12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable12MouseClicked
/*        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),0),jTable111.getSelectedRow(), 0);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),1),jTable111.getSelectedRow(), 2);
        jTable111.setValueAt(jSearchTable12.getValueAt(jSearchTable12.getSelectedRow(),2),jTable111.getSelectedRow(), 4);
        jTextField1112.setText("");
        jSearchDialog12.dispose();
 */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable12MouseClicked
    
    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
 /*       jSearchTable12.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField1112.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
  
  
        jSearchScrollPane12.setViewportView(jSearchTable12);
        System.out.println("Cannot sort out");
  */
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    private void cmbox111MouseClicked() {
        
       /* System.out.println("Showing dialog");
        java.awt.Point point = jTable111.getLocationOnScreen();
        jSearchDialog12.setSize(400,200);
        jSearchDialog12.setLocation(point);
        jSearchDialog12.setVisible(true);
        */
    }
    private void jSearchTable211MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable211MouseClicked
      /*  jTextField121.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 1).toString());
        jTextField911.setText(jSearchTable211.getValueAt(jSearchTable211.getSelectedRow(), 0).toString());
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        try {
       
       
            java.sql.Statement stmt11 = connectDB.createStatement();
            java.sql.ResultSet rset11 = stmt11.executeQuery("select iplimit from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
            while (rset11.next()){
                limit = rset11.getDouble(1);
       
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
            java.sql.Statement stmt111 = connectDB.createStatement();
            java.sql.ResultSet rset111 = stmt111.executeQuery("select sum(debit) from hp_patient_card where patient_no  ='"+jTextField911.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
            while (rset111.next()){
                bal = rset111.getDouble(1);
       
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
            java.sql.Statement stmt1111 = connectDB.createStatement();
            java.sql.ResultSet rset1111 = stmt1111.executeQuery("select sum(credit) from hp_patient_card where patient_no  ='"+jTextField911.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
            while (rset1111.next()){
                rect = rset1111.getDouble(1);
       
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(bal>(limit+rect)){
            javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            this.jButton111.setEnabled(false);
        }else{
            this.jButton111.setEnabled(true);
       
            try {
       
       
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField911.getText()+"'");
                while (rset1.next()){
                    jTextField211.setText(rset1.getObject(1).toString());
                    jTextField711.setText(rset1.getObject(2).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }
        jTextField11311.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog211.dispose();
       
       */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable211MouseClicked
    
    private void jTextField11311CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11311CaretUpdate
     /*   if(this.jCheckBox2.isSelected() && jCheckBox31.isSelected()){
            if(jTextField11311.getCaretPosition() < 3){
      
                System.out.println("Nothing");
            }else{
      
                jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
            /*
                try {
      
                    searchRowSet211.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where patient_no ILIKE '"+jTextField11311.getText()+"%' order by second_name");
      
                    jSearchTable211.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet211, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
      */
           /*     jSearchTable211.setShowHorizontalLines(false);
                jSearchScrollPane211.setViewportView(jSearchTable211);
            
            
            }
        }else{
            if(this.jCheckBox2.isSelected() && jCheckBox41.isSelected()){
                if(jTextField11311.getCaretPosition() < 3){
            
                    System.out.println("Nothing");
                }else{
                    jSearchTable211.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField11311.getText()+"%' order by second_name"));
            
            
                    jSearchTable211.setShowHorizontalLines(false);
                    jSearchScrollPane211.setViewportView(jSearchTable211);
            
            
                }
            }
        }
            */
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11311CaretUpdate
    private void searchButton211Clicked() {
        
     /*   System.out.println("Showing dialog");
      
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField91.getLocationOnScreen();
      
        jSearchDialog211.setSize(400,200);
      
        jSearchDialog211.setLocation(point);
      
        jSearchDialog211.setVisible(true);
      
      */
        
    }
    private void jButton911ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton911ActionPerformed
        jSearchDialog11.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jButton911ActionPerformed
    private void cmbox2MouseClicked() {
        
     /*   System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog11.setSize(400,200);
        jSearchDialog11.setLocation(point);
        jSearchDialog11.setVisible(true);
      */
    }
    private void jSearchTable11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable11MouseClicked
     /*   String status = null;
        try {
      
      
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select status from pb_doctors_list where staff_no  ='"+this.jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),0)+"'");
            while (rset1.next()){
                status = rset1.getObject(1).toString();
                //jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        if(status.equalsIgnoreCase("Suspended")||status.equalsIgnoreCase("Closed")){
            javax.swing.JOptionPane.showMessageDialog(this,"Account Closed","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }else{
            jTable11.setValueAt(jSearchTable11.getValueAt(jSearchTable11.getSelectedRow(),1),jTable11.getSelectedRow(), 5);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
            //   jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        }
      
        jTextField1111.setText("");
        jSearchDialog11.dispose();
      
      */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable11MouseClicked
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        if(jTextField1111.getCaretPosition() < 3){
            
            System.out.println("Nothing");
        }else{
            
            jSearchTable11.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name"));
            
          /*  try {
           
                searchRowSet11.execute("SELECT staff_no, (upper(first_name||' '||middle_name)) as name,staff_category from pb_doctors_list where (upper(first_name||' '||middle_name)) ILIKE '%"+jTextField1111.getText()+"%' order by first_name");
                //     searchRowSet.execute("SELECT patient_no, (upper(first_name||' '||second_name)) as name, year_of_birth, residence from hp_patient_register where (upper(first_name||' '||second_name)) ILIKE '"+jTextField11.getText()+"%' order by first_name");
           
                jSearchTable11.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet11, new org.netbeans.lib.sql.models.TableModel.Column[] {
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_no", "Staff no", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false),
                    new org.netbeans.lib.sql.models.TableModel.Column("staff_category", "Category", false)
           
                }));
           */
            jSearchTable11.setShowHorizontalLines(false);
            jSearchScrollPane11.setViewportView(jSearchTable11);
            
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    public void tableModelTableChanged1() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
  /*      double resFloat = 0.00;
   
   
        for (int i = 0; i < jTable11.getRowCount(); i++) {
   
            if (jTable11.getValueAt(i, 0) != null) {
   
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
   
                jTextField31.setText(java.lang.String.valueOf(resFloat));
   
            } else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
   
                jTextField31.setText(java.lang.String.valueOf(resFloat));
   
            }
        }*/
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged1(javax.swing.event.TableModelEvent evt) {
        
   /*     //        double resFloat = 0.00;
        double resFloat = 0.00;
    
        for (int i = 0; i < jTable11.getRowCount(); i++) {
    
            if (jTable11.getValueAt(i, 0) != null) {
    
                //   if (jTable11.getSelectedColumn() == 1) {
    
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
    
                //   }
    
                jTextField31.setText(java.lang.String.valueOf(resFloat));
    
            }else{
                resFloat = resFloat + Double.parseDouble(jTable11.getValueAt(i, 3).toString());
    
                //   }
    
                jTextField31.setText(java.lang.String.valueOf(resFloat));
            }
    
        }*/
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();    // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
/*        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),0),jTable11.getSelectedRow(), 0);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),1),jTable11.getSelectedRow(), 2);
        jTable11.setValueAt(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(),2),jTable11.getSelectedRow(), 4);
        jTextField111.setText("");
        jSearchDialog1.dispose();
 */
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        //        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type"));
       /*
        try {
            searchRowSet1.execute("select service_type,rate as price,gl_account as gl_code FROM pb_operating_parameters WHERE service_type ILIKE '"+jTextField111.getText()+"%' AND main_service = '"+jTextField5.getText()+"' order by service_type");
        
            jSearchTable1.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet1, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("service_type", "Service", false),
                new org.netbeans.lib.sql.models.TableModel.Column("price", "Price", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl code", false)
            }));
        */
        //      jSearchScrollPane1.setViewportView(jSearchTable1);
        //       System.out.println("Cannot sort out");
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    private void cmbox1MouseClicked() {
        
  /*      System.out.println("Showing dialog");
        java.awt.Point point = jTable11.getLocationOnScreen();
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.setVisible(true);
   */
    }
    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    
    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
  /*      jTextField12.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jTextField91.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
   
   
        try {
   
   
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_patient_register where patient_no  ='"+jTextField91.getText()+"'");
            while (rset1.next()){
                jTextField21.setText(rset1.getObject(1).toString());
                jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        jTextField1131.setText("");
        //        this.populateTable1(this.jTextField9.getText());
        jSearchDialog21.dispose();
   */
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable21MouseClicked
    
    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
/*        if(this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()){
 
            if(jTextField1131.getCaretPosition() < 3){
 
                System.out.println("Nothing");
            }else{
                jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
 
                jSearchTable21.setShowHorizontalLines(false);
                jSearchScrollPane21.setViewportView(jSearchTable21);
 
 
 
            }
        }else{
            if(this.jCheckBox1.isSelected() && this.jCheckBox41.isSelected()){
 
                if(jTextField1131.getCaretPosition() < 3){
 
                    System.out.println("Nothing");
                }else{
                    jSearchTable21.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField1131.getText()+"%' and last_visit > current_date - 15 order by second_name"));
 
 
                    jSearchTable21.setShowHorizontalLines(false);
                    jSearchScrollPane21.setViewportView(jSearchTable21);
 
 
 
                }
 
            }
        }
 */
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1131CaretUpdate
    private void searchButton1Clicked() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
/*        java.awt.Point point = this.jTextField91.getLocationOnScreen();
 
        jSearchDialog21.setSize(400,200);
 
        jSearchDialog21.setLocation(point);
 
        jSearchDialog21.setVisible(true);
 */
        
        
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),2),jTable1.getSelectedRow(), 4);
        jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),4),jTable1.getSelectedRow(), 5);
      
        jTextField11.setText("");
        jSearchDialog.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jTextField11CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField11CaretUpdate
        if(this.jCheckBox42.isSelected()){
            
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select contraceptive_name,cp_price,gl_code,contraceptive_code,fp_cycle FROM fp_contraceptives WHERE contraceptive_code ILIKE '"+jTextField11.getText()+"%' AND methods ilike '"+jComboBox11.getSelectedItem()+"%'"));
                
         
                
                jSearchScrollPane.setViewportView(jSearchTable);

            }
        }else{
            if(jTextField11.getCaretPosition() < 1){
                
                System.out.println("Nothing");
            }else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select contraceptive_name,cp_price,gl_code,contraceptive_code,fp_cycle FROM fp_contraceptives WHERE contraceptive_name ILIKE '"+jTextField11.getText()+"%' AND methods ILIKE '"+jComboBox11.getSelectedItem()+"%'"));

                System.out.println("Cannot sort out");
                
            }
        }
        
 
        // Add your handling code here:
    }//GEN-LAST:event_jTextField11CaretUpdate
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        if (jTable1.getSelectedColumn() == 0) {
            
            this.cmboxMouseClicked();
        }          // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    private void cmboxMouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = jScrollPane2.getLocationOnScreen();
        jSearchDialog.setSize(400,200);
        jSearchDialog.setLocation(point);
        jSearchDialog.setVisible(true);
    }
    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        this.jSearchDialog2.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        //        this.jComboBox131.setSelectedItem(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        
        jTextField1.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField9.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jSearchDialog2.dispose();
        String adm = null;
        double limit = 0.00;
        double bal = 0.00;
        double rect = 0.00;
        try {
            
            
            java.sql.Statement stmt1 = connectDB.createStatement();
            java.sql.ResultSet rset1 = stmt1.executeQuery("select discharge from hp_admission where patient_no  ='"+jTextField9.getText()+"' and discharge = false order by date_admitted desc limit 1");
            while (rset1.next()){
                adm = rset1.getString(1);
                
                //  jTextField71.setText(rset1.getObject(2).toString());
            }
        } catch (java.sql.SQLException sqe) {
            sqe.printStackTrace();
            //  System.out.println("Insert not successful");
        }
        
        if(this.jCheckBox11.isSelected()){
            try {
                
                
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode,sex from hp_patient_register where patient_no  ='"+jTextField9.getText()+"'");
                while (rset1.next()){
                    jTextField2.setText(rset1.getObject(1).toString());
                    jTextField7.setText(rset1.getObject(2).toString());
                    jTextField5.setText(rset1.getObject(3).toString());
                }
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
        }else{
            if(this.jCheckBox21.isSelected()){
                try {
                    
                    
                    java.sql.Statement stmt11 = connectDB.createStatement();
                    java.sql.ResultSet rset11 = stmt11.executeQuery("select iplimit from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                    while (rset11.next()){
                        limit = rset11.getDouble(1);
                        
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                    java.sql.Statement stmt111 = connectDB.createStatement();
                    java.sql.ResultSet rset111 = stmt111.executeQuery("select sum(debit) from hp_patient_card where patient_no  ='"+jTextField9.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
                    while (rset111.next()){
                        bal = rset111.getDouble(1);
                        
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                    
                    java.sql.Statement stmt1111 = connectDB.createStatement();
                    java.sql.ResultSet rset1111 = stmt1111.executeQuery("select sum(credit) from hp_patient_card where patient_no  ='"+jTextField9.getText()+"' and (invoice_no not like 'O%' OR invoice_no not like 'I%' or invoice_no is null)");
                    while (rset1111.next()){
                        rect = rset1111.getDouble(1);
                        
                        //  jTextField71.setText(rset1.getObject(2).toString());
                    }
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
                if(bal>(limit+rect)){
                    javax.swing.JOptionPane.showMessageDialog(this, "Limit Exceeded","Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
                    this.jButton1.setEnabled(false);
                }else{
                    this.jButton1.setEnabled(true);
                    try {
                        
                        
                        java.sql.Statement stmt1 = connectDB.createStatement();
                        java.sql.ResultSet rset1 = stmt1.executeQuery("select category,pay_mode from hp_inpatient_register where patient_no  ='"+jTextField9.getText()+"'");
                        while (rset1.next()){
                            jTextField2.setText(rset1.getObject(1).toString());
                            jTextField7.setText(rset1.getObject(2).toString());
                        }
                    } catch (java.sql.SQLException sqe) {
                        sqe.printStackTrace();
                        //  System.out.println("Insert not successful");
                    }
                }
            }else{
                javax.swing.JOptionPane.showMessageDialog(this,"Patient not in ward","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }
        }
        //        this.populateTable1(this.jTextField9.getText());
        jTextField113.setText("");
        jSearchDialog2.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField113CaretUpdate
        if(this.jCheckBox11.isSelected() && this.jCheckBox3.isSelected()){
            
            if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
                
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no"));
                
              /*  try {
               
                    // searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");
                    searchRowSet2.execute("SELECT patient_no, name, year_of_birth, residence from patient_select where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
               
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
            }
        }else{
            if(this.jCheckBox11.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField113.getCaretPosition() < 3){
                    System.out.println("Nothing");
                }else{
                    
                    jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '"+jTextField113.getText()+"%' order by name"));
                    
                 /*   try {
                  
                        // searchRowSet2.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");
                        searchRowSet2.execute("SELECT patient_no, name, year_of_birth, residence from patient_select where name ILIKE '"+jTextField113.getText()+"%' order by name");
                  
                        jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                  */
                    jSearchTable2.setShowHorizontalLines(false);
                    jSearchScrollPane2.setViewportView(jSearchTable2);
                    
                }
            }
        }
        
        
        
        if(this.jCheckBox21.isSelected() && this.jCheckBox3.isSelected()){
            
            if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no"));
                
                /*    // searchRowSet2.execute("SELECT patient_no, upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField113.getText()+"%' order by second_name");
                    searchRowSet2.execute("SELECT patient_no, name from inpatient_list where patient_no ILIKE '"+jTextField113.getText()+"%' order by patient_no");
                 
                    jSearchTable2.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet2, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                    }));
                 */
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
            }
        }else{
            if(this.jCheckBox21.isSelected() && this.jCheckBox4.isSelected()){
                jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, name from inpatient_list where name ILIKE '"+jTextField113.getText()+"%' order by name"));
                
                
                jSearchTable2.setShowHorizontalLines(false);
                jSearchScrollPane2.setViewportView(jSearchTable2);
                
                
                
            }
        }
        
        //searchRowSet2.c
        
        //   searchThread = new GeneralBillingIntfr.SearchThread();
        
        //  searchThread.start();
        
        // Add your handling code here:
    }//GEN-LAST:event_jTextField113CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButtonClicked2();
        jButton12.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButtonClicked2() {
        
        System.out.println("Showing dialog");
        
        // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
        java.awt.Point point = this.jTextField9.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        
        jSearchDialog2.setLocation(point);
        
        jSearchDialog2.setVisible(true);
        
        
        
    }
    
  /*
   */
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
/*        cmbox = new javax.swing.JComboBox();
        crset2.setCommand("select service_type FROM pb_operating_parameters WHERE main_service = '"+jComboBox1.getSelectedItem().toString()+"' order by service_type");
        crset2.setConnectionSource(pConnDB);
 
        cmbox.setModel(new org.netbeans.lib.sql.models.ComboBoxModel(crset2, "service_type", null, null, null));
        javax.swing.table.TableColumn s = this.jTable1.getColumn("Service");
        s.setCellEditor(new javax.swing.DefaultCellEditor(cmbox));
        cmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxActionPerformed(evt);
            }
 
 });
 */
        // Add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        } else {
            
            if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
                
                
            } else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
        }
        
        tableModelTableChanged();
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    public void tableModelTableChanged() {
        System.out.println("Calculating totals for table 11 and 2.");
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 3) != null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            } else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }
        }
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
        
        //        double resFloat = 0.00;
        double resFloat = 0.00;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 3) != null) {
                
                //   if (jTable11.getSelectedColumn() == 1) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
                
            }else{
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                //   }
                
                jTextField3.setText(java.lang.String.valueOf(resFloat));
            }
            
        }
        
        //               jTextField31.setText(java.lang.String.valueOf(resFloat));
    }
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        
        double resFloat = 0.00;
        //  double totalSum = 0.00;
        double floatTotal = java.lang.Double.parseDouble(jTextField3.getText());
        
        //       if (jTable1.getValueAt(jTable1.getSelectedRow(), 1) != null) {
        double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        
        double floatCol3 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        
        double resVal = floatCol2 * floatCol3;
        
        
        jTable1.setValueAt(new java.lang.Float(resVal), jTable1.getSelectedRow(), 3);
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            if (jTable1.getValueAt(i, 0) != null) {//toString().compareToIgnoreCase(null) {
                
                resFloat = resFloat + Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                
                
                // totalSum = floatTotal + resFloat;
                
            }
        }
        this.tableModelTableChanged();
        //}
        
        // Add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased
    private void cmbox4ActionPerformed(java.awt.event.ActionEvent evt){
   /*     java.lang.Object selectedGuaran = cmbox4.getSelectedItem();
//        int i = jTable2.getSelectedRow();
    
        if (selectedGuaran != null) {
    
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
    
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
    */
        
    }    private void cmbox3ActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox3.getSelectedItem();
  /*      int i = jTable2.getSelectedRow();
   
        if (selectedGuaran != null) {
   
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,sp.gl_code from st_stock_prices sp where sp.product = '"+selectedGuaran+"'");
   
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable2.setValueAt(rs.getObject(1),i,3);
                    jTable2.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
   
   */
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
        int i = jTable1.getSelectedRow();
        
        if (selectedGuaran != null) {
            
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"'");
                
                //java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1),i,2);
                    jTable1.setValueAt(rs.getObject(2),i,4);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.setValueAt(null,k,r);
            }
        }
        
        //  this.jComboBox131.setSelectedItem(null);
        jTextField3.setText("0.00");
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //        tableModelTableChanged();
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String item = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
        String pt = null;
        String np = null;
        if (jCheckBox11.isSelected()){
            chbox = "OP";
        }else{
            if (jCheckBox21.isSelected()){
                chbox = "WI";
            }else{
                if (jCheckBox6.isSelected()){
                    chbox = "IP";
                }
            }
        }
        
        if (jRadioButton3.isSelected()){
            pt = "NA";
        }else{
            if (jRadioButton4.isSelected()){
                pt = "CA";
            }else{
                if (jRadioButton5.isSelected()){
                    pt = "R";
                }
            }
        }
        
        if (jCheckBox1.isSelected()){
            np = "NP";
        }else{
            np = "";
        }
        try {
            connectDB.setAutoCommit(false);
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            java.sql.Statement ps = connectDB.createStatement();
            java.sql.ResultSet rst = ps.executeQuery("select nextval('transaction_no_seq')");
            
            while (rse12.next()){
                
                patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
            }
            while (rst.next()){
                rst.getObject(1).toString();
                
                transNo = rst.getObject(1).toString();
            }
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('billing_no_seq'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
            }
            
            for (int i = 0; i < jTable1.getRowCount(); i++){
                if (jTable1.getValueAt(i,0) != null){
                    int qty1 = 0;
                 //    double floatCol2 = java.lang.Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
       
                    qty1 = java.lang.Integer.parseInt(jTable1.getValueAt(i,1).toString());
                    java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into fp_records values(?,initcap(?),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt1.setString(1,jTextField9.getText());
                    pstmt1.setString(2,jTextField1.getText());
                    pstmt1.setObject(3,pt);
                    pstmt1.setObject(4,np);
                    pstmt1.setString(5,datePicker1.getDate().toString());
                    pstmt1.setObject(6,jComboBox1.getSelectedItem());
                    pstmt1.setObject(7,jComboBox11.getSelectedItem());;
                    pstmt1.setObject(8,jTable1.getValueAt(i,0).toString());
                    pstmt1.setInt(9,qty1);
                    pstmt1.setObject(10,jTable1.getValueAt(i,3).toString());
                    pstmt1.setObject(11,jTable1.getValueAt(i,5).toString());
                    pstmt1.setObject(12,jTextField8.getText());
                    pstmt1.setObject(13,"");
                    pstmt1.setObject(14,chbox);
                    pstmt1.setObject(15,jTable1.getValueAt(i,4).toString());
                    pstmt1.setString(16,user);
                    pstmt1.setString(17,"'now'");
                    pstmt1.setString(18,transNo);
                    pstmt1.setObject(19,jTextField5.getText());
                    
                    pstmt1.executeUpdate();
                    
                }
            }
            if(this.jCheckBox11.isSelected()){
                // java.sql.PreparedStatement pstmRemove = connectDB.prepareStatement("DELETE FROM hp_patient_billing WHERE patient_no = '"+jTextField9.getText()+"' AND revenuepaid = false AND trans_date = date('now')");
                
                // pstmRemove.executeUpdate();
                java.sql.Statement stm1q = connectDB.createStatement();
                java.sql.ResultSet rse1 = stm1q.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_patient_register where patient_no ='"+jTextField9.getText()+"'");
                java.sql.Statement stm121q = connectDB.createStatement();
                
                while (rse1.next()){
                    
                    payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                    cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                    scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                    cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                    isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                    expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                    staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                }
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getValueAt(i,0) != null){
                        java.sql.ResultSet rse121 = stm121q.executeQuery("select activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                        
                        while (rse121.next()){
                            
                            glAcc = rse121.getObject(1).toString();
                            
                            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                            
                            pstmt2.setString(1,jTextField9.getText());
                            pstmt2.setString(10,billNo);
                            pstmt2.setString(2,jTextField1.getText());
                            pstmt2.setString(3,jTextField7.getText());
                            pstmt2.setString(4,jTextField2.getText());
                            pstmt2.setString(5,jTable1.getValueAt(i,0).toString());
                            pstmt2.setString(6,jTable1.getValueAt(i,1).toString());
                            pstmt2.setString(7,jTable1.getValueAt(i,3).toString());
                            pstmt2.setObject(8,jTable1.getValueAt(i,4).toString());
                            pstmt2.setString(9,datePicker1.getDate().toString());
                            pstmt2.setString(12,"false");
                            pstmt2.setString(11,user);
                            pstmt2.setString(13,glAcc);
                            pstmt2.setString(14,visitid);
                            pstmt2.setString(15,jTextField8.getText().toString());
                            pstmt2.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt21 = connectDB.prepareStatement("insert into hp_patient_visit values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            
                            pstmt21.setString(1,jTextField9.getText());
                            pstmt21.setString(10,"");
                            pstmt21.setString(2,jTextField1.getText());
                            pstmt21.setString(3,"OP");
                            pstmt21.setString(4,jTextField7.getText());
                            pstmt21.setString(5,"0");
                            pstmt21.setString(8,glAcc);
                            pstmt21.setString(6,jTable1.getValueAt(i,0).toString());
                            pstmt21.setString(7,jTable1.getValueAt(i,1).toString());
                            pstmt21.setString(9,jTable1.getValueAt(i,3).toString());
                            pstmt21.setObject(12,"0");
                            pstmt21.setString(11,datePicker1.getDate().toString());
                            pstmt21.setString(13,"");
                            pstmt21.setString(14,user);
                            pstmt21.setString(15,"'now'");
                            pstmt21.setString(16,"Billing");
                            pstmt21.executeUpdate();
                            
                            
                        }
                    }
                }
                
                
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getValueAt(i,0) != null){
                        
                        java.sql.Statement pstBx = connectDB.createStatement();
                        java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product = '"+jTable1.getValueAt(i,0)+"' and gl_code =  '"+jTable1.getValueAt(i,4)+"'");
                        
                        while (rsBx.next()){
                            itemInt = rsBx.getInt(1);
                        }
                        
                        if (itemInt > 0){
                            java.sql.Statement pstB = connectDB.createStatement();
                            java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department from st_stock_prices where product = '"+jTable1.getValueAt(i,0)+"' and gl_code =  '"+jTable1.getValueAt(i,4)+"'");
                            
                            while (rsB.next()){
                                price = rsB.getDouble(1);
                                units = rsB.getString(2);
                                Store = rsB.getString(3);
                            }
                            
                            
                            java.sql.Statement pst211 = connectDB.createStatement();
                            java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable1.getValueAt(i,4)+"'");
                            while (rs111.next()){
                                glCode = rs111.getObject(1).toString();
                                actCode = rs111.getObject(2).toString();
                            }
                            
                            qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                            amount = price*qty;
                            if (amount > 10000){
                                amount = (qty*sellPrice)*0.67;
                            }else{
                                
                                amount = amount;
                            }
                            
                            java.sql.Statement stm1211q = connectDB.createStatement();
                            java.sql.ResultSet rse1211q = stm1211q.executeQuery("select units from st_stock_prices where product ='"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                            while (rse1211q.next()){
                                
                                units = rse1211q.getObject(1).toString();
                            }
                            java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            pstmt1.setString(1,jTextField9.getText());
                            pstmt1.setString(2,jTextField1.getText());
                            pstmt1.setObject(3,jTable1.getValueAt(i,1).toString());
                            pstmt1.setObject(4,jTable1.getValueAt(i,3).toString());
                            // pstmt1.setDouble(4,TotalPrice);
                            //   pstmt1.setDouble(4,presc);
                            pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                            pstmt1.setObject(7,jTable1.getValueAt(i,2).toString());
                            pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                            pstmt1.setBoolean(6,true);
                            pstmt1.setString(9,transNo);
                            pstmt1.setObject(10,jTextField8.getText());
                            pstmt1.setString(11,"true");
                            pstmt1.setString(12,units);
                            pstmt1.setString(13,datePicker1.getDate().toString());
                            pstmt1.setObject(14,Store);
                            pstmt1.setString(15,chbox);
                            pstmt1.setString(16,jTextField7.getText());
                            pstmt1.setObject(17,"");
                            pstmt1.setDouble(18,0.00);
                            pstmt1.setString(19,user);
                            pstmt1.setObject(20,"");
                            pstmt1.executeUpdate();
                            
                            java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                            pstmt1a.setString(1,null);
                            pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                            pstmt1a.setString(2,Store);
                            pstmt1a.setString(4,null);
                            pstmt1a.setDouble(5,amount);
                            pstmt1a.setObject(6,"00");
                            pstmt1a.setObject(7,units);
                            pstmt1a.setObject(8,"");
                            pstmt1a.setString(9,null);
                            pstmt1a.setString(10,null);
                            pstmt1a.setString(11,"00");
                            pstmt1a.setString(12,"00");
                            pstmt1a.setString(13,"00");
                            pstmt1a.setString(14,jTextField1.getText());
                            pstmt1a.setString(15,user);
                            pstmt1a.setString(16,"");
                            pstmt1a.setString(17,null);
                            pstmt1a.setString(18,datePicker1.getDate().toString());
                            pstmt1a.setString(19,Store);
                            pstmt1a.setString(20,"Issuing");
                            pstmt1a.setObject(21,"00");
                            pstmt1a.setString(23,actCode);
                            pstmt1a.setObject(22,"00");
                            pstmt1a.setString(24,"");
                            pstmt1a.setString(25,Store);
                            pstmt1a.setString(26,transNo);
                            pstmt1a.setObject(27,jTable1.getValueAt(i,1));
                            pstmt1a.setString(28,user);
                            pstmt1a.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                            pstmt2a.setObject(1,glCode);
                            pstmt2a.setObject(2,jComboBox1.getSelectedItem());
                            pstmt2a.setString(3,jTextField9.getText());
                            pstmt2a.setString(4,jTextField1.getText());
                            pstmt2a.setString(5,"");
                            pstmt2a.setString(6,"");
                            pstmt2a.setString(7,"");
                            pstmt2a.setString(8,"");
                            pstmt2a.setString(9,"");
                            pstmt2a.setString(10,"");
                            pstmt2a.setString(11,"");
                            pstmt2a.setString(12,"");
                            pstmt2a.setString(13,"");
                            pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                            pstmt2a.setString(15,"Issuing");
                            pstmt2a.setDouble(16,amount);
                            pstmt2a.setObject(17,"00");
                            pstmt2a.setString(18,datePicker1.getDate().toString());
                            pstmt2a.setString(19,transNo);
                            pstmt2a.setBoolean(20,false);
                            pstmt2a.setBoolean(21,false);
                            pstmt2a.setBoolean(22,false);
                            pstmt2a.setString(23,user);
                            pstmt2a.executeUpdate();
                            
                            
                            java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                            
                            pstmt33.setObject(1,Store);
                            pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                            pstmt33.setString(3,"0");
                            pstmt33.setObject(7,"0");
                            pstmt33.setString(5,jTable1.getValueAt(i,2).toString());
                            pstmt33.setString(6,jTable1.getValueAt(i,3).toString());
                            pstmt33.setString(8,transNo);
                            pstmt33.setString(4,jTable1.getValueAt(i,1).toString());
                            pstmt33.setObject(9,jTextField8.getText());
                            pstmt33.setString(10,datePicker1.getDate().toString());
                            pstmt33.setString(11,user);
                            pstmt33.setString(12,units);
                            pstmt33.setString(13,Store);
                            pstmt33.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                            pstmt33.executeUpdate();
                        }
                        
                    }
                }
                
                //  javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+billNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }else{
                if(this.jCheckBox21.isSelected()){
                    
                    java.sql.Statement stm12n = connectDB.createStatement();
                    java.sql.ResultSet rse12n = stm12n.executeQuery("select adm_date from hp_inpatient_register where patient_no ='"+jTextField9.getText()+"'");
                    while (rse12n.next()){
                        admDate = rse12n.getDate(1);
                    }
                    System.out.println(admDate);
                    // if (exp.before(date)){
                    if (this.datePicker1.getDate().before(admDate)){
                        javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        
                        if (!(jTextField4.getText().equals("Cash"))){
                            java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTextField9.getText()+"'");
                            while (rse1.next()){
                                cardNo = rse1.getString(2);
                                scheme = rse1.getString(3);
                                cardName = rse1.getString(4);
                                isurer = rse1.getString(5);
                                expDate = rse1.getString(6);
                                staffNo = rse1.getString(7);
                            }
                            
                            for (int i = 0; i < jTable1.getRowCount(); i++){
                                if (jTable1.getValueAt(i,0) != null){
                                    
                                    java.sql.ResultSet rse121 = stm121.executeQuery("select activity from pb_activity where code ='"+jTable1.getValueAt(i,4).toString()+"'");
                                    while (rse121.next()){
                                        
                                        glAcc = rse121.getObject(1).toString();
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                                        pstmt.setString(1,jTextField9.getText());
                                        pstmt.setObject(2,jTable1.getValueAt(i,0).toString());
                                        pstmt.setString(3,jTextField2.getText());
                                        pstmt.setString(4,jTextField7.getText());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setString(10,expDate);
                                        pstmt.setString(11,"");
                                        pstmt.setObject(12,jTable1.getValueAt(i,3).toString());
                                        pstmt.setString(13,"0.00");
                                        pstmt.setString(14,datePicker1.getDate().toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setObject(17,jTable1.getValueAt(i,1).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"IP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2.setObject(1,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTextField9.getText());
                                        pstmt2.setString(4,jTextField1.getText());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"IP");
                                        pstmt2.setString(9,jTextField8.getText());
                                        pstmt2.setString(10,jTextField7.getText());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setString(16,"0.00");
                                        pstmt2.setObject(17,jTable1.getValueAt(i,3).toString());
                                        pstmt2.setString(18,datePicker1.getDate().toString());
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setString(20,"false");
                                        pstmt2.setString(21,"false");
                                        pstmt2.setString(22,"false");
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                        
                                        
                                    }
                                }
                            }
                        }
                    }
                    
                    
                    
                    for (int i = 0; i < jTable1.getRowCount(); i++){
                        if (jTable1.getValueAt(i,0) != null){
                            
                            java.sql.Statement pstBx = connectDB.createStatement();
                            java.sql.ResultSet rsBx = pstBx.executeQuery("select count(product) from st_stock_prices where product = '"+jTable1.getValueAt(i,0)+"' and gl_code =  '"+jTable1.getValueAt(i,4)+"'");
                            
                            while (rsBx.next()){
                                itemInt = rsBx.getInt(1);
                            }
                            
                            if (itemInt > 0){
                                java.sql.Statement pstB = connectDB.createStatement();
                                java.sql.ResultSet rsB = pstB.executeQuery("select transfer_price,units,department from st_stock_prices where product = '"+jTable1.getValueAt(i,0)+"' and gl_code =  '"+jTable1.getValueAt(i,4)+"'");
                                
                                while (rsB.next()){
                                    price = rsB.getDouble(1);
                                    units = rsB.getString(2);
                                    Store = rsB.getString(3);
                                }
                                
                                
                                java.sql.Statement pst211 = connectDB.createStatement();
                                java.sql.ResultSet rs111 = pst211.executeQuery("select cost_of_sale,stock_code from pb_departments where income_account = '"+jTable1.getValueAt(i,4)+"'");
                                while (rs111.next()){
                                    glCode = rs111.getObject(1).toString();
                                    actCode = rs111.getObject(2).toString();
                                }
                                
                                qty = java.lang.Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                                amount = price*qty;
                                if (amount > 10000){
                                    amount = (qty*sellPrice)*0.67;
                                }else{
                                    
                                    amount = amount;
                                }
                                
                                java.sql.Statement stm1211q = connectDB.createStatement();
                                java.sql.ResultSet rse1211q = stm1211q.executeQuery("select units from st_stock_prices where product ='"+jTable1.getModel().getValueAt(i,0).toString()+"'");
                                while (rse1211q.next()){
                                    
                                    units = rse1211q.getObject(1).toString();
                                }
                                java.sql.PreparedStatement pstmt1 = connectDB.prepareStatement("insert into hp_pharmacy values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstmt1.setString(1,jTextField9.getText());
                                pstmt1.setString(2,jTextField1.getText());
                                pstmt1.setObject(3,jTable1.getValueAt(i,1).toString());
                                pstmt1.setObject(4,jTable1.getValueAt(i,3).toString());
                                // pstmt1.setDouble(4,TotalPrice);
                                //   pstmt1.setDouble(4,presc);
                                pstmt1.setObject(5,jTable1.getValueAt(i,0).toString());
                                pstmt1.setObject(7,jTable1.getValueAt(i,2).toString());
                                pstmt1.setObject(8,jTable1.getValueAt(i,4).toString());
                                pstmt1.setBoolean(6,true);
                                pstmt1.setString(9,transNo);
                                pstmt1.setObject(10,jTextField8.getText());
                                pstmt1.setString(11,"true");
                                pstmt1.setString(12,units);
                                pstmt1.setString(13,datePicker1.getDate().toString());
                                pstmt1.setObject(14,Store);
                                pstmt1.setString(15,chbox);
                                pstmt1.setString(16,jTextField7.getText());
                                pstmt1.setObject(17,"");
                                pstmt1.setDouble(18,0.00);
                                pstmt1.setString(19,user);
                                pstmt1.setObject(20,"");
                                pstmt1.executeUpdate();
                                
                                java.sql.PreparedStatement pstmt1a = connectDB.prepareStatement("insert into st_stock_cardex values(?,? , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?)");
                                pstmt1a.setString(1,null);
                                pstmt1a.setObject(3,jTable1.getValueAt(i,0));
                                pstmt1a.setString(2,Store);
                                pstmt1a.setString(4,null);
                                pstmt1a.setDouble(5,amount);
                                pstmt1a.setObject(6,"00");
                                pstmt1a.setObject(7,units);
                                pstmt1a.setObject(8,"");
                                pstmt1a.setString(9,null);
                                pstmt1a.setString(10,null);
                                pstmt1a.setString(11,"00");
                                pstmt1a.setString(12,"00");
                                pstmt1a.setString(13,"00");
                                pstmt1a.setString(14,jTextField1.getText());
                                pstmt1a.setString(15,user);
                                pstmt1a.setString(16,"");
                                pstmt1a.setString(17,null);
                                pstmt1a.setString(18,datePicker1.getDate().toString());
                                pstmt1a.setString(19,Store);
                                pstmt1a.setString(20,"Issuing");
                                pstmt1a.setObject(21,"00");
                                pstmt1a.setString(23,actCode);
                                pstmt1a.setObject(22,"00");
                                pstmt1a.setString(24,"");
                                pstmt1a.setString(25,Store);
                                pstmt1a.setString(26,transNo);
                                pstmt1a.setObject(27,jTable1.getValueAt(i,1));
                                pstmt1a.setString(28,user);
                                pstmt1a.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt2a = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                pstmt2a.setObject(1,glCode);
                                pstmt2a.setObject(2,jComboBox1.getSelectedItem());
                                pstmt2a.setString(3,jTextField9.getText());
                                pstmt2a.setString(4,jTextField1.getText());
                                pstmt2a.setString(5,"");
                                pstmt2a.setString(6,"");
                                pstmt2a.setString(7,"");
                                pstmt2a.setString(8,"");
                                pstmt2a.setString(9,"");
                                pstmt2a.setString(10,"");
                                pstmt2a.setString(11,"");
                                pstmt2a.setString(12,"");
                                pstmt2a.setString(13,"");
                                pstmt2a.setString(14,jTable1.getValueAt(i,0).toString());
                                pstmt2a.setString(15,"Issuing");
                                pstmt2a.setDouble(16,amount);
                                pstmt2a.setObject(17,"00");
                                pstmt2a.setString(18,datePicker1.getDate().toString());
                                pstmt2a.setString(19,transNo);
                                pstmt2a.setBoolean(20,false);
                                pstmt2a.setBoolean(21,false);
                                pstmt2a.setBoolean(22,false);
                                pstmt2a.setString(23,user);
                                pstmt2a.executeUpdate();
                                
                                
                                java.sql.PreparedStatement pstmt33 = connectDB.prepareStatement("insert into st_sub_stores values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                
                                pstmt33.setObject(1,Store);
                                pstmt33.setObject(2,jTable1.getValueAt(i,0).toString());
                                pstmt33.setString(3,"0");
                                pstmt33.setObject(7,"0");
                                pstmt33.setString(5,jTable1.getValueAt(i,2).toString());
                                pstmt33.setString(6,jTable1.getValueAt(i,3).toString());
                                pstmt33.setString(8,transNo);
                                pstmt33.setString(4,jTable1.getValueAt(i,1).toString());
                                pstmt33.setObject(9,jTextField8.getText());
                                pstmt33.setString(10,datePicker1.getDate().toString());
                                pstmt33.setString(11,user);
                                pstmt33.setString(12,units);
                                pstmt33.setString(13,Store);
                                pstmt33.setString(14,jTextField9.getText()+ " " +jTextField1.getText());
                                pstmt33.executeUpdate();
                            }
                            
                        }
                    }
                    
                }
            }
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful.Bill No. "+transNo+"","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
            
            // jLabel7.setForeground(java.awt.Color.blue);
            // jLabel7.setText("Insert successful");
            jButton12.setEnabled(false);
            jButton1.setEnabled(false);
            jButton2.setEnabled(true);
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
    /*    } catch(java.lang.Exception ex) {
            System.out.println(ex.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "TRANSACTION ERROR : Please double check your entries.", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
     
     
        }
     */
        // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private class SearchThread extends java.lang.Thread {
        
        public void SearchThread(){}
        
        public void run(){
            
            searchNames();
            
        }
        
    }
    private class SearchServicesThread extends java.lang.Thread {
        
        public void SearchServicesThread(){}
        
        public void run(){
            
            searchServices();
            
        }
        
    }
    
    public void searchNames(){
        int j = 0;
        int i = 0;
        
      /* if(jTextField113.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
        try {
            System.out.println("Starting select clause");
          /*  java.sql.Statement stmtTable11 = connectDB.createStatement();
       
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("SELECT count(patient_name)  FROM hp_pharmacy WHERE patient_name = '"+patient_no+"' AND paid = false UNION SELECT count(patient_name)  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
       
            while (rsetTable11.next()) {
                j = rsetTable11.getInt(1);
            }
            if (j > 0) {*/
           /*     java.sql.Statement stmtTable1 = connectDB.createStatement();
            
                // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField113.getText()+"%' and last_visit > current_date - 20 order by second_name");// AND paid = false UNION SELECT service, quantity,(amount/quantity)::numeric(10,2),amount,gl_code  FROM hp_patient_billing WHERE patient_name = '"+patient_no+"' AND paid = false");
                 java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField113.getText()+"%' order by second_name");
                while (rsetTable1.next()) {
            
                    System.out.println("Working at table row "+i);
                    jSearchTable2.setValueAt(rsetTable1.getObject(1), i, 0);
                    jSearchTable2.setValueAt(rsetTable1.getObject(2), i, 1);
                   // jTable111.setValueAt(rsetTable1.getObject(3), i, 2);
                   // jTable111.setValueAt(rsetTable1.getObject(4), i, 3);
                   // jTable111.setValueAt(rsetTable1.getObject(5), i, 4);
                    // jTable1.setValueAt(rsetTable1.getObject(6), i, 6);
            
                    i++;
            
                }
            
            
            //}
            
        } catch(java.sql.SQLException sqlExec) {
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
            }
            */
    }
    
    public void searchServices(){
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JDialog jSearchDialog11;
    private javax.swing.JButton jButton9111;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField113;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTable jSearchTable111;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JButton jButton421;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable211;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jButton5211;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField11311;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JTable jSearchTable11;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton5;
    private javax.swing.JTable jSearchTable12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JPanel jSearchPanel111;
    private javax.swing.JButton jButton91;
    private com.afrisoftech.lib.DatePicker datePicker1;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jSearchPanel211;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField92;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JButton jButton921;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JScrollPane jSearchScrollPane11;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JScrollPane jSearchScrollPane111;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JButton jButton12;
    private javax.swing.JDialog jSearchDialog211;
    private javax.swing.JButton jButton521;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton92;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JTextField jTextField112;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JTextField jTextField11111;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton jButton52;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JButton jButton42;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jButton4211;
    private javax.swing.JButton jButton912;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JDialog jSearchDialog12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton911;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JDialog jSearchDialog111;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jSearchPanel12;
    private javax.swing.JScrollPane jSearchScrollPane12;
    public javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jSearchScrollPane211;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JPanel jSearchPanel11;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jTextField1121;
    private javax.swing.JTextField jTextField4;
    private org.netbeans.lib.sql.NBCachedRowSet crset42;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
