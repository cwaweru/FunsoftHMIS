/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class XrayResIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable{
    
    /** Creates new form loanpymntintfr */
    com.afrisoftech.lib.DBObject dbObject;
    
    private javax.swing.JComboBox cmbox;
    java.sql.Connection connectDB = null;
    
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    java.lang.Thread getListThread;
    
    boolean getList;
    
    
    public XrayResIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        dbObject = new com.afrisoftech.lib.DBObject();
        
        getListThread = new java.lang.Thread(this, "Update_Lab_Tests");
        
        initComponents();
        
        getList = true;
        
        getListThread.start();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jSearchDialog = new javax.swing.JDialog();
        jSearchPanel = new javax.swing.JPanel();
        jTextField111 = new javax.swing.JTextField();
        jSearchScrollPane = new javax.swing.JScrollPane();
        jSearchTable = new com.afrisoftech.dbadmin.JTable();
        jButton9 = new javax.swing.JButton();
        jSearchDialog2 = new javax.swing.JDialog();
        jSearchPanel2 = new javax.swing.JPanel();
        jTextField1112 = new javax.swing.JTextField();
        jSearchScrollPane2 = new javax.swing.JScrollPane();
        jSearchTable2 = new com.afrisoftech.dbadmin.JTable();
        jButton92 = new javax.swing.JButton();
        jSearchDialog1 = new javax.swing.JDialog();
        jSearchPanel1 = new javax.swing.JPanel();
        jTextField1111 = new javax.swing.JTextField();
        jSearchScrollPane1 = new javax.swing.JScrollPane();
        jSearchTable1 = new com.afrisoftech.dbadmin.JTable();
        jButton91 = new javax.swing.JButton();
        jSearchDialog3 = new javax.swing.JDialog();
        jSearchPanel3 = new javax.swing.JPanel();
        jTextField1113 = new javax.swing.JTextField();
        jSearchScrollPane3 = new javax.swing.JScrollPane();
        jSearchTable3 = new com.afrisoftech.dbadmin.JTable();
        jButton93 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel21 = new javax.swing.JPanel();
        jPanel211 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,  java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class,java.lang.Object.class,java.lang.Object.class,java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false,false, false, true,false, false,true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jLabel14 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        jTextField361 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jPanel62 = new javax.swing.JPanel();
        jTextField362 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel621 = new javax.swing.JPanel();
        jTextField3621 = new javax.swing.JTextField();
        searchButton21 = new javax.swing.JButton();
        jComboBox41 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        try {
            java.lang.Class.forName("org.postgresql.Driver");
        }catch (java.lang.ClassNotFoundException sl){
            System.out.println(sl.getMessage());
        }

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        datePicker11 = new com.afrisoftech.lib.DatePicker();

        jSearchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog.setModal(true);
        jSearchDialog.setUndecorated(true);
        jSearchPanel.setLayout(new java.awt.GridBagLayout());

        jSearchPanel.setBorder(new javax.swing.border.EtchedBorder());
        jTextField111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel.add(jTextField111, gridBagConstraints);

        jSearchTable.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTableMouseClicked(evt);
            }
        });

        jSearchScrollPane.setViewportView(jSearchTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel.add(jSearchScrollPane, gridBagConstraints);

        jButton9.setText("Dispose");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel.add(jButton9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog.getContentPane().add(jSearchPanel, gridBagConstraints);

        jSearchDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog2.setModal(true);
        jSearchDialog2.setUndecorated(true);
        jSearchPanel2.setLayout(new java.awt.GridBagLayout());

        jSearchPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1112.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1112CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel2.add(jTextField1112, gridBagConstraints);

        jSearchTable2.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable2MouseClicked(evt);
            }
        });

        jSearchScrollPane2.setViewportView(jSearchTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel2.add(jSearchScrollPane2, gridBagConstraints);

        jButton92.setText("Dispose");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel2.add(jButton92, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog2.getContentPane().add(jSearchPanel2, gridBagConstraints);

        jSearchDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog1.setModal(true);
        jSearchDialog1.setUndecorated(true);
        jSearchPanel1.setLayout(new java.awt.GridBagLayout());

        jSearchPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1111.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1111CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel1.add(jTextField1111, gridBagConstraints);

        jSearchTable1.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable1MouseClicked(evt);
            }
        });

        jSearchScrollPane1.setViewportView(jSearchTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel1.add(jSearchScrollPane1, gridBagConstraints);

        jButton91.setText("Dispose");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel1.add(jButton91, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog1.getContentPane().add(jSearchPanel1, gridBagConstraints);

        jSearchDialog3.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchDialog3.setModal(true);
        jSearchDialog3.setUndecorated(true);
        jSearchPanel3.setLayout(new java.awt.GridBagLayout());

        jSearchPanel3.setBorder(new javax.swing.border.EtchedBorder());
        jTextField1113.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1113CaretUpdate(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        jSearchPanel3.add(jTextField1113, gridBagConstraints);

        jSearchTable3.setShowHorizontalLines(false);
        /*    try {
            searchRowSet.setCommand("select product,selling_price,gl_code FROM st_stock_prices WHERE department = 'Pharmacy' order by product");
            searchRowSet.setConnectionSource(pConnDB);

            searchRowSet.execute();

            // crset2.setExecuteOnLoad(true);
            jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                new org.netbeans.lib.sql.models.TableModel.Column("product", "Description", false),
                new org.netbeans.lib.sql.models.TableModel.Column("selling_price", "Amount", false),
                new org.netbeans.lib.sql.models.TableModel.Column("gl_code", "Gl_code", false)

            }));
            // jSearchScrollPane.setViewportView(jSearchTable);

        } catch(java.sql.SQLException sqlex){
            javax.swing.JOptionPane.showMessageDialog(this,sqlex.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);

            System.out.println(sqlex.getMessage());
        }
        */
        jSearchTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable3MouseClicked(evt);
            }
        });

        jSearchScrollPane3.setViewportView(jSearchTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel3.add(jSearchScrollPane3, gridBagConstraints);

        jButton93.setText("Dispose");
        jButton93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton93ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchPanel3.add(jButton93, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog3.getContentPane().add(jSearchPanel3, gridBagConstraints);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("X-Ray/Ultra Sound Register");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        jPanel21.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel211.setLayout(new java.awt.GridBagLayout());

        jScrollPane11.setAutoscrolls(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Pat No.", "Pat Name", "Mode", "Service", "Qty", "Amount", "No", "Doctor", "Bill", "Bed No", "Time", "Cancel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane11.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel211.add(jScrollPane11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel21.add(jPanel211, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel21.add(jLabel14, gridBagConstraints);

        jTabbedPane1.addTab("Pending Requests", jPanel21);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(new javax.swing.border.TitledBorder(null, "Tick category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 255)));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Select patient here"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Doctor Refering");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Xray No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField21.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jTextField21, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Examination");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel11, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Radiographer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel4, gridBagConstraints);

        jPanel61.setLayout(new java.awt.GridBagLayout());

        jPanel61.setBorder(new javax.swing.border.EtchedBorder());
        jPanel61.setMinimumSize(new java.awt.Dimension(82, 37));
        jTextField361.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jTextField361, gridBagConstraints);

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton1.setToolTipText("Search");
        searchButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel61.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel61, gridBagConstraints);

        jPanel62.setLayout(new java.awt.GridBagLayout());

        jPanel62.setBorder(new javax.swing.border.EtchedBorder());
        jPanel62.setMinimumSize(new java.awt.Dimension(82, 37));
        jTextField362.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel62.add(jTextField362, gridBagConstraints);

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton2.setToolTipText("Search");
        searchButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel62.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel62, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTextField4, gridBagConstraints);

        jLabel10.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jLabel10, gridBagConstraints);

        jPanel621.setLayout(new java.awt.GridBagLayout());

        jPanel621.setBorder(new javax.swing.border.EtchedBorder());
        jPanel621.setMinimumSize(new java.awt.Dimension(82, 37));
        jTextField3621.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel621.add(jTextField3621, gridBagConstraints);

        searchButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton21.setToolTipText("Search");
        searchButton21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton21.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton21.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton21ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel621.add(searchButton21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel621, gridBagConstraints);

        jComboBox41.setSelectedItem(null);
        // javax.swing.JComboBox strCmb;
        java.lang.Object[] strCmb1 = {"43x35","18x43","24x30","18x24","35x35","30x40","Bitewing","IOA"};

        javax.swing.DefaultComboBoxModel comboModel1 = new javax.swing.DefaultComboBoxModel(strCmb1);

        jComboBox41.setModel(comboModel1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jComboBox41, gridBagConstraints);

        jLabel5.setText("Film Size");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel2.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Notes"));
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jPanel3, gridBagConstraints);

        jLabel9.setText("Patient No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel9, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.EtchedBorder());
        jPanel6.setMinimumSize(new java.awt.Dimension(82, 37));
        jTextField36.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jTextField36, gridBagConstraints);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kiwi/images/date.gif")));
        searchButton.setToolTipText("Search");
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        searchButton.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton.setMinimumSize(new java.awt.Dimension(74, 53));
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(searchButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel6, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField1, gridBagConstraints);

        jCheckBox5.setText("MALE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jCheckBox5, gridBagConstraints);

        jCheckBox6.setText("FEMALE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jCheckBox6, gridBagConstraints);

        jLabel8.setText("DOB");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTextField3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTextField2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTextField5, gridBagConstraints);

        jLabel13.setText("No. of Film");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel12.setText("Slip/Rct No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel12, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.gif")));
        jButton1.setMnemonic('O');
        jButton1.setText("Ok");
        jButton1.setToolTipText("Click here enter data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton4, gridBagConstraints);

        jButton5.setMnemonic('h');
        jButton5.setText("Help");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButton5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(jPanel1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Out Patient");
        buttonGroup1.add(jCheckBox1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jCheckBox1, gridBagConstraints);

        jCheckBox31.setSelected(true);
        jCheckBox31.setText("Search No.");
        buttonGroup2.add(jCheckBox31);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jCheckBox31, gridBagConstraints);

        jCheckBox4.setText("Search By name");
        buttonGroup2.add(jCheckBox4);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jCheckBox4, gridBagConstraints);

        jCheckBox2.setText("In Patients");
        buttonGroup1.add(jCheckBox2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setText("Other Patients");
        buttonGroup1.add(jCheckBox3);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jCheckBox3, gridBagConstraints);

        jLabel6.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(datePicker11, gridBagConstraints);

        jPanel31.add(jPanel4, new java.awt.GridBagConstraints());

        jTabbedPane1.addTab("Register", jPanel31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        setBounds(0, 0, 697, 434);
    }//GEN-END:initComponents
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String request = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
        java.util.Date adDate=null;
        String opvisitid = "-";
        
        
        jTextField36.setText(this.jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        jTextField361.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        
        jTextField362.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());
        
        
        
        
        try {
            connectDB.setAutoCommit(false);
            
              int i = jTable1.getSelectedRow();
        
             if (jTable1.getValueAt(i,0) != null){
                if (Boolean.valueOf(jTable1.getModel().getValueAt(i,12).toString()) == java.lang.Boolean.TRUE) {
                    
                      java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = true where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                        pstmt46.executeUpdate();
                          
            javax.swing.JOptionPane.showMessageDialog(this,"Procedure Cancelled","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
                //}
             }else{
                //  if (jTable1.getValueAt(i,0) != null){
                if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 9).toString()) == java.lang.Boolean.TRUE) {
              
            System.out.println("Pass 1"+jTable1.getModel().getValueAt(i, 9).toString());
            
            java.sql.Statement stm12t = connectDB.createStatement();
            
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
                java.sql.Statement pst = connectDB.createStatement();
                        java.sql.ResultSet rstt = pst.executeQuery("select nextval('transaction_no_seq')");
                        
                       
                        while (rstt.next()){
                            rstt.getObject(1).toString();
                            
                            transNo = rstt.getObject(1).toString();
                        }
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            
            while (rse12.next()){
                
                patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
            }
            java.sql.Statement stm121q = connectDB.createStatement();
            
            
            java.sql.ResultSet rse121 = stm121q.executeQuery("select distinct gl_account,main_service from pb_operating_parameters where main_service ilike 'xray%'");
            
            while (rse121.next()){
                
                actCode = rse121.getObject(1).toString();
                glAcc = rse121.getObject(2).toString();
            }
            
              // for (int i = 0; i < jTable1.getRowCount(); i++){
                    
                    System.out.println("Count"+i);
                    java.sql.Statement ps11 = connectDB.createStatement();
                    java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('lab_request'),current_user");
                    while (rst11.next()){
                        rst11.getObject(1).toString();
                        
                        billNo = rst11.getObject(1).toString();
                        user = rst11.getObject(2).toString();
                        
                    }
                    
                    request =jTable1.getValueAt(i, 7).toString();
                    if(request.startsWith("I")){
                        
                          System.out.println("Pass 2");
          
                        java.sql.Statement stm121t = connectDB.createStatement();
                        
                        java.sql.Statement stm12n = connectDB.createStatement();
                        java.sql.ResultSet rse12n = stm12n.executeQuery("select adm_date from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                        while (rse12n.next()){
                            admDate = rse12n.getDate(1);
                        }
                        java.sql.Statement ps11w1 = connectDB.createStatement();
                        java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTable1.getValueAt(i,1).toString()+"' and check_out = false");
                        while (rst11w1.next()){
                            
                            
                            visitid = rst11w1.getObject(1).toString();
                        }
                        
                        
                        System.out.println(admDate);
                        // if (exp.before(date)){
                        //  if (adDate.before(admDate)){
                        //    javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        // }else{
                        
                        if (!(jTable1.getValueAt(i,3).toString().equals("Cash"))){
                            java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                            while (rse1.next()){
                                payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                                cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                                scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                                cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                                isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                                expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                                staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                            }
                        }
                        
                        java.sql.ResultSet rse121t = stm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121t.getObject(1).toString();
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                        pstmt.setString(3,"General");
                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,expDate);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                        pstmt.setString(13,"0.00");
                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,visitid);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"IP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,visitid);
                        pstmt.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2.setObject(1,actCode);
                        pstmt2.setString(2,glAcc);
                        pstmt2.setString(3,jTable1.getValueAt(i,1).toString());
                        pstmt2.setString(4,jTable1.getValueAt(i,2).toString());
                        pstmt2.setString(5,"");
                        pstmt2.setString(6,cardNo);
                        pstmt2.setString(7,cardName);
                        pstmt2.setString(8,"IP");
                        pstmt2.setString(9,jTable1.getValueAt(i,8).toString());
                        pstmt2.setString(10,jTable1.getValueAt(i,3).toString());
                        pstmt2.setString(11,"");
                        pstmt2.setString(12,"");
                        pstmt2.setString(13,"");
                        pstmt2.setString(14,jTable1.getValueAt(i,4).toString());
                        pstmt2.setString(15,"Revenue");
                        pstmt2.setString(16,"0.00");
                        pstmt2.setObject(17,jTable1.getValueAt(i,6).toString());
                        pstmt2.setString(18,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(19,transNo);
                        pstmt2.setString(20,"false");
                        pstmt2.setString(21,"false");
                        pstmt2.setString(22,"false");
                        pstmt2.setString(23,user);
                        pstmt2.executeUpdate();
                        
                        
                        //}
                        //}
                        // }
                        
                        
                        java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                        pstmt46.executeUpdate();
                        
                        
                        
                        
                    }else{
                        
                        java.sql.Statement ps11w1 = connectDB.createStatement();
                        java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select distinct slip_no,date from credit_acc_slip where patient_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),1).toString()+"' order by date desc limit 1");
                        while (rst11w1.next()){
                            
                            
                            opvisitid = rst11w1.getObject(1).toString();
                        }
                          System.out.println("Pass 3"+opvisitid);
          
                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                        
                        pstmt2.setString(1,jTable1.getValueAt(i,1).toString());
                        
                        pstmt2.setString(2,jTable1.getValueAt(i,2).toString());
                        pstmt2.setString(3,jTable1.getValueAt(i,3).toString());
                        pstmt2.setString(4,"General");
                        pstmt2.setString(5,jTable1.getValueAt(i,4).toString());
                        pstmt2.setString(6,jTable1.getValueAt(i,5).toString());
                        pstmt2.setString(7,jTable1.getValueAt(i,6).toString());
                        pstmt2.setObject(8,actCode);
                        pstmt2.setString(9,jTable1.getValueAt(i,0).toString());
                        pstmt2.setString(10,opvisitid);
                        
                        pstmt2.setString(11,user);
                        pstmt2.setString(12,"false");
                        pstmt2.setString(13,glAcc);
                        pstmt2.setString(14,billNo);
                        pstmt2.setString(15,jTable1.getValueAt(i,7).toString());
                        pstmt2.executeUpdate();
                        java.sql.Statement pstm121t = connectDB.createStatement();
                        java.sql.ResultSet rse121t = pstm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                        while (rse121.next()){
                            
                            glAcc = rse121t.getObject(1).toString();
                        }
                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                        pstmt.setString(3,"General");
                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                        pstmt.setString(5,transNo);
                        pstmt.setString(7,scheme);
                        pstmt.setString(6,cardNo);
                        pstmt.setString(8,cardName);
                        pstmt.setString(9,isurer);
                        pstmt.setString(10,expDate);
                        pstmt.setString(11,"");
                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                        pstmt.setString(13,"0.00");
                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                        pstmt.setObject(15,patientAcc);
                        pstmt.setString(16,glAcc);
                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                        pstmt.setObject(18,staffNo);
                        pstmt.setBoolean(19,false);
                        pstmt.setString(20,"Billing");
                        pstmt.setBoolean(21,false);
                        pstmt.setString(22,AccDesc);
                        pstmt.setString(23,opvisitid);
                        pstmt.setString(24,user);
                        pstmt.setString(25,billNo);
                        pstmt.setString(26,"OP");
                        pstmt.setString(27,"'now'");
                        pstmt.setString(28,opvisitid);
                        pstmt.executeUpdate();
                        
                        
                        java.sql.PreparedStatement pstmt2v = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                        pstmt2v.setObject(1,actCode);
                        pstmt2v.setString(2,glAcc);
                        pstmt2v.setString(3,jTable1.getValueAt(i,1).toString());
                        pstmt2v.setString(4,jTable1.getValueAt(i,2).toString());
                        pstmt2v.setString(5,"");
                        pstmt2v.setString(6,cardNo);
                        pstmt2v.setString(7,cardName);
                        pstmt2v.setString(8,"OP");
                        pstmt2v.setString(9,jTable1.getValueAt(i,8).toString());
                        pstmt2v.setString(10,jTable1.getValueAt(i,3).toString());
                        pstmt2v.setString(11,"");
                        pstmt2v.setString(12,"");
                        pstmt2v.setString(13,"");
                        pstmt2v.setString(14,jTable1.getValueAt(i,4).toString());
                        pstmt2v.setString(15,"Revenue");
                        pstmt2v.setString(16,"0.00");
                        pstmt2v.setObject(17,jTable1.getValueAt(i,6).toString());
                        pstmt2v.setString(18,jTable1.getValueAt(i,0).toString());
                        pstmt2v.setString(19,transNo);
                        pstmt2v.setString(20,"false");
                        pstmt2v.setString(21,"false");
                        pstmt2v.setString(22,"false");
                        pstmt2v.setString(23,user);
                        pstmt2v.executeUpdate();
                        //}
                        java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                        pstmt46.executeUpdate();
                        // }
                    }
               // }
                
           }
           }
            
            javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
             
            for (int k = 0; k < jTable1.getRowCount(); k++ ) {
                for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                    jTable1.getModel().setValueAt(null,k,r);
                }
            }
             }
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }        // Add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void jSearchTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable3MouseClicked
        jTextField3621.setText(jSearchTable3.getValueAt(jSearchTable3.getSelectedRow(), 0).toString());
        jSearchDialog3.dispose();     // Add your handling code here:
    }//GEN-LAST:event_jSearchTable3MouseClicked
    private void cmbox3MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField3621.getLocationOnScreen();
        
        jSearchDialog3.setSize(400,200);
        jSearchDialog3.setLocation(point);
        jSearchDialog3.show();
    }
    private void jButton93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton93ActionPerformed
        jSearchDialog3.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton93ActionPerformed
    
    private void jTextField1113CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1113CaretUpdate
        jSearchTable3.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT (upper(AGENT_NAME)) as name  from pb_agents where CATEGORY ILIKE '%"+jTextField1113.getText()+"%' AND category ILIKE 'radio%' order by agent_name"));
        
        jSearchTable3.setShowHorizontalLines(false);
        jSearchScrollPane3.setViewportView(jSearchTable3);   // Add your handling code here:
    }//GEN-LAST:event_jTextField1113CaretUpdate
    
    private void searchButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton21ActionPerformed
        cmbox3MouseClicked(); // Add your handling code here:
    }//GEN-LAST:event_searchButton21ActionPerformed
    
    private void jSearchTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable1MouseClicked
        
        jTextField362.setText(jSearchTable1.getValueAt(jSearchTable1.getSelectedRow(), 0).toString());
        jSearchDialog1.dispose();   // Add your handling code here:
    }//GEN-LAST:event_jSearchTable1MouseClicked
    private void cmbox2MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField362.getLocationOnScreen();
        
        jSearchDialog1.setSize(400,200);
        jSearchDialog1.setLocation(point);
        jSearchDialog1.show();
    }
    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        jSearchDialog1.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed
    
    private void jTextField1111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1111CaretUpdate
        jSearchTable1.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"select first_name||' '||middle_name as name from pb_doctors_list where first_name||' '||middle_name ILIKE '%"+jTextField1111.getText()+"%' order by first_name||' '||middle_name"));
        jSearchTable1.setShowHorizontalLines(false);
        jSearchScrollPane1.setViewportView(jSearchTable1); // Add your handling code here:
    }//GEN-LAST:event_jTextField1111CaretUpdate
    
    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        cmbox2MouseClicked(); // Add your handling code here:
    }//GEN-LAST:event_searchButton2ActionPerformed
    
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        cmbox1MouseClicked();  // Add your handling code here:
    }//GEN-LAST:event_searchButton1ActionPerformed
    
    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        jSearchDialog2.dispose();  // Add your handling code here:
    }//GEN-LAST:event_jButton92ActionPerformed
    
    private void jSearchTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable2MouseClicked
        jTextField4.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 1).toString());
        jTextField361.setText(jSearchTable2.getValueAt(jSearchTable2.getSelectedRow(), 0).toString());
        jSearchDialog2.dispose();
        
        // Add your handling code here:
    }//GEN-LAST:event_jSearchTable2MouseClicked
    
    private void jTextField1112CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1112CaretUpdate
        jSearchTable2.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT (upper(service_type)) as name,rate from pb_operating_parameters where service_type ILIKE '%"+jTextField1112.getText()+"%' AND MAIN_SERVICE ILIKE 'X%' order by service_type"));
        
        jSearchTable2.setShowHorizontalLines(false);
        jSearchScrollPane2.setViewportView(jSearchTable2);
        // Add your handling code here:
    }//GEN-LAST:event_jTextField1112CaretUpdate
    private void cmbox1MouseClicked() {
        
        System.out.println("Showing dialog");
        java.awt.Point point = this.jTextField361.getLocationOnScreen();
        
        jSearchDialog2.setSize(400,200);
        jSearchDialog2.setLocation(point);
        jSearchDialog2.show();
    }
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jTextField1.setEditable(true);   // Add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jSearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTableMouseClicked
        String Sex =null;
        
        jTextField1.setText("");
        jTextField36.setText("");
        //   this.jTextPane1.setText("");
        this.jButton1.setVisible(true);
        //  this.jComboBox131.setSelectedItem(null);
        jLabel7.setText("");
        // jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),0),jTable1.getSelectedRow(), 0);
        //jTable1.setValueAt(jSearchTable.getValueAt(jSearchTable.getSelectedRow(),1),jTable1.getSelectedRow(), 1);
        this.jSearchDialog.dispose();
        //if(this.jCheckBox1.isSelected()){
        jTextField36.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 0).toString());
        jTextField1.setText(jSearchTable.getValueAt(jSearchTable.getSelectedRow(), 1).toString());
        if(this.jCheckBox1.isSelected()){
            try {
                //
                java.sql.Statement stmt1 = connectDB.createStatement();
                java.sql.ResultSet rset1 = stmt1.executeQuery("select year_of_birth,sex from hp_patient_register where patient_no ='"+jTextField36.getText()+"'");
                while (rset1.next()){
                    jTextField3.setText(rset1.getObject(1).toString());
                    Sex=rset1.getObject(2).toString();
                }
                if(Sex.equalsIgnoreCase("male")){
                    this.jCheckBox5.setSelected(true);
                }else{
                    this.jCheckBox6.setSelected(true);
                }
                
                
                
                
                
                
                
            } catch (java.sql.SQLException sqe) {
                sqe.printStackTrace();
                //  System.out.println("Insert not successful");
            }
            //  this.populateTable1(jTextField36.getText());
            
        }else{
            if(jCheckBox2.isSelected()){
                
                try {
                    // if(this.jCheckBox1.isSelected()){
                    java.sql.Statement stmt1 = connectDB.createStatement();
                    java.sql.ResultSet rset1 = stmt1.executeQuery("select year_of_birth,sex from hp_inpatient_register where patient_no ='"+jTextField36.getText()+"'");
                    while (rset1.next()){
                        jTextField3.setText(rset1.getObject(1).toString());
                        Sex=rset1.getObject(2).toString();
                    }
                    if(Sex.equalsIgnoreCase("male")){
                        this.jCheckBox5.setSelected(true);
                    }else{
                        this.jCheckBox6.setSelected(true);
                    }
                    
                    
                    
                } catch (java.sql.SQLException sqe) {
                    sqe.printStackTrace();
                    //  System.out.println("Insert not successful");
                }
                
                
            }
        }
        
        
        jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jSearchTableMouseClicked
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jSearchDialog.dispose();        // Add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jTextField111CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField111CaretUpdate
        
        if(this.jCheckBox1.isSelected() && this.jCheckBox31.isSelected()){
            
            if(jTextField111.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name from hp_patient_register where patient_no ILIKE '%"+jTextField111.getText()+"%' and last_visit > current_date - 10 order by PATIENT_NO"));
                
              /*      searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField111.getText()+"%' and last_visit > current_date - 60 order by second_name");
               
                    //searchRowSet1.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where patient_no ILIKE '"+jTextField1111.getText()+"%' and last_visit > current_date - 5 order by second_name");
               
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
               */
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
                
            }
        }else{
            if(this.jCheckBox1.isSelected() && this.jCheckBox4.isSelected()){
                if(jTextField111.getCaretPosition() < 2){
                    System.out.println("Nothing");
                }else{
                    jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name from hp_patient_register where second_name||' '||first_name ILIKE '%"+jTextField111.getText()+"%' and last_visit > current_date - 10 order by second_name"));
                    
                    /*    searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_patient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField111.getText()+"%' and last_visit > current_date - 60 order by second_name");
                     
                        jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                            new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                            new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                            //  new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                            //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                        }));
                     */
                    jSearchTable.setShowHorizontalLines(false);
                    jSearchScrollPane.setViewportView(jSearchTable);
                    
                    
                    
                }
            }
        }
        // }else{
        if(this.jCheckBox2.isSelected() && this.jCheckBox31.isSelected()){
            
            // if(this.jCheckBox21.isSelected()){
            //   if( jTextField113.getCaretPosition() > 3){
            
            if(jTextField111.getCaretPosition() < 3){
                System.out.println("Nothing");
            }else{
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name from hp_inpatient_register where patient_no ILIKE '%"+jTextField111.getText()+"%' order by PATIENT_NO"));
                
             /*   searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name from hp_inpatient_register where patient_no ILIKE '"+jTextField111.getText()+"%' order by second_name");
              
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        //   new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        //  new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
              */
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            }
        }else{
            if(this.jCheckBox2.isSelected() && this.jCheckBox4.isSelected()){
                jSearchTable.setModel(com.afrisoftech.dbadmin.TableModel.createTableVectors(connectDB,"SELECT patient_no, (upper(second_name||' '||first_name)) as name from hp_inpatient_register where second_name||' '||first_name ILIKE '%"+jTextField111.getText()+"%' order by second_name"));
                
                /*    searchRowSet.execute("SELECT patient_no, (upper(second_name||' '||first_name||' '||last_name)) as name, year_of_birth, residence from hp_inpatient_register where second_name||' '||first_name||' '||last_name ILIKE '"+jTextField111.getText()+"%' order by second_name");
                 
                    jSearchTable.setModel(new org.netbeans.lib.sql.models.TableModel(searchRowSet, new org.netbeans.lib.sql.models.TableModel.Column[] {
                        new org.netbeans.lib.sql.models.TableModel.Column("patient_no", "Patient no", false),
                        new org.netbeans.lib.sql.models.TableModel.Column("name", "Name", false)
                        // new org.netbeans.lib.sql.models.TableModel.Column("year_of_birth", "Year of birth", false),
                        // new org.netbeans.lib.sql.models.TableModel.Column("residence", "Residence", false)
                    }));
                 */
                jSearchTable.setShowHorizontalLines(false);
                jSearchScrollPane.setViewportView(jSearchTable);
                
                
            }
        }
        // Add your handling code here:
    }//GEN-LAST:event_jTextField111CaretUpdate
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchButton11Clicked();               // Add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void searchButton11Clicked() {
        
        System.out.println("Showing dialog");
        if(jCheckBox1.isSelected()){
            // java.awt.Point point = this.jComboBox1311.getLocationOnScreen();
            java.awt.Point point = this.jTextField36.getLocationOnScreen();
            
            jSearchDialog.setSize(400,200);
            
            jSearchDialog.setLocation(point);
            jSearchDialog.show();
        }
        else
            if(jCheckBox2.isSelected()){
                jSearchDialog.dispose();
                java.awt.Point point = this.jTextField36.getLocationOnScreen();
                
                jSearchDialog.setSize(400,200);
                
                jSearchDialog.setLocation(point);
                jSearchDialog.show();
            }
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    private void cmboxActionPerformed(java.awt.event.ActionEvent evt){
        java.lang.Object selectedGuaran = cmbox.getSelectedItem();
      /*  int i = jTable1.getSelectedRow();
       
        if (selectedGuaran != null) {
       
            try {
                //java.sql.Connection con = java.sql.DriverManager.getConnection("jdbc:postgresql://localhost:5432/hospital","postgres","pilsiner");
                java.sql.Statement pstmt = connectDB.createStatement();
                java.sql.ResultSet rs = pstmt.executeQuery("select rate,gl_account from pb_operating_parameters where service_type = '"+selectedGuaran+"' UNION ALL select sp.selling_price,ac.code from st_stock_prices sp,pb_activity ac where ac.activity ='Stock' AND product = '"+selectedGuaran+"'");
                while (rs.next()){
                    //jTextField4.setText(rs.getObject(1).toString());
                    jTable1.setValueAt(rs.getObject(1),i,3);
                    jTable1.setValueAt(rs.getObject(2),i,5);
                }
            } catch(java.sql.SQLException sqlex){
                System.out.println(sqlex.getMessage());
            }
        }
       
       */
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.getContentPane().removeAll();
        this.initComponents();
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        
        String billNo = null;
        
        String transNo = null;
        String User = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String Categ = null;
        String Sex = null;
        if(this.jCheckBox6.isSelected()){
            Sex = this.jCheckBox6.getText();
        }
        else{
            Sex = this.jCheckBox5.getText();
        }
        if(this.jCheckBox1.isSelected()){
            Categ = this.jCheckBox1.getText();
        }
        else{
            if(this.jCheckBox2.isSelected()){
                Categ = this.jCheckBox2.getText();
            }else{
                Categ = this.jCheckBox3.getText();
            }
        }
        
        try {
            
            
            //  for (int i = 0; i < jTable1.getRowCount(); i++){
            //       if (jTable1.getModel().getValueAt(i,0) != null){
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select 'X'||nextval('xray_no_seq'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                User = rst11.getObject(2).toString();
            }
            
            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_xray_results values(?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            
            pstmt.setString(1,jTextField36.getText());
            if (jTextField1.getText().equals("")) {
                javax.swing.JOptionPane.showMessageDialog(this,"Patient Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            } else{
                
                pstmt.setString(2,jTextField1.getText());
            }
            // pstmt.setString(2,jTextField1.getText());
            pstmt.setString(3,billNo);
            pstmt.setObject(4,jTextField3.getText());
            pstmt.setObject(5,Sex);
            
            
            pstmt.setString(6,jTextArea1.getText());
            
            if (jTextField361.getText().equals("")) {
                javax.swing.JOptionPane.showMessageDialog(this,"Examination missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            } else{
                
                pstmt.setString(7,jTextField361.getText());
            }
            
            // pstmt.setString(7,jTextField361.getText());
            pstmt.setString(8,datePicker11.getDate().toString());
            pstmt.setString(9,"'now'");
            pstmt.setString(10,jTextField4.getText());
            pstmt.setString(11,Categ);
            
            if (jTextField3621.getText().equals("")) {
                javax.swing.JOptionPane.showMessageDialog(this,"Radiologist Name missing", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            } else{
                
                pstmt.setString(12,jTextField3621.getText());
            }
            // pstmt.setString(12,jTextField3621.getText());
            pstmt.setString(13,User);
            pstmt.setString(14,jTextField362.getText());
            pstmt.setString(15,"false");
            pstmt.setString(16,"false");
            pstmt.setString(17,jTextField2.getText());
            pstmt.setString(18,jTextField5.getText());
            pstmt.setString(19,jComboBox41.getSelectedItem().toString());
            pstmt.executeUpdate();
            
            connectDB.commit();
            connectDB.setAutoCommit(true);
            this.jButton1.setEnabled(false);
            javax.swing.JOptionPane.showMessageDialog(this, "Data Inserted Successfully","Confirmation Message!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            this.jButton1.setEnabled(true);
            jTextField36.setText("");
            
            jTextField1.setText("");
            jTextField2.setText("");
            
            jTextField3.setText("");
            jTextField5.setText("");
            
            jTextField361.setText("");
            //  jComboBox2.setSelectedItem(null);
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }   // Add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    private void populateTable1(java.lang.String patient_no) {
        
        
    }
    
    public void run() {
        
        while(getList) {
            
            runGetListThread();
            
            try {
                
                Thread.currentThread().sleep(10000);
                
            } catch(java.lang.InterruptedException IntExec){
                
                javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
            // getList = false;
            
        }
        
    }
    
    public void runGetListThread() {
        
        int j = 0;
        int i = 0;
        int n = 0;
        int patNo = 0;
        try {
            
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
            // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct count(patient_no) from pb_doctors_request where revenue_code ilike 'x%' and paid = false AND collected = false and trans_date>=current_date -2 ");
            
            while (rsetTable11.next()) {
                patNo = rsetTable11.getInt(1);
                
            }
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select trans_date,patient_no,patient_name,payment_mode,service,quantity,amount,inv_no,doctor,false as bill,bed_no,time_due,false from pb_doctors_request where revenue_code ilike 'x%' and paid = false AND collected = false and trans_date>=current_date -2 ORDER BY trans_date asc");
            
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                jTable1.setValueAt(rsetTable1.getObject(7), i, 6);
                jTable1.setValueAt(rsetTable1.getObject(8), i, 7);
                jTable1.setValueAt(rsetTable1.getObject(9), i, 8);
                jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 9);
                jTable1.setValueAt(rsetTable1.getObject(11), i, 10);
                jTable1.setValueAt(rsetTable1.getObject(12), i, 11);
                 jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 12);
                
                i++;
                
            }
            
            //}
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
        if(patNo >5){
            
            this.jLabel14.setText("Queue Long '"+patNo+"' Patients Are Waiting For Xray");
            this.jLabel14.setForeground(new java.awt.Color(255,0,51));
        }else{
            this.jLabel14.setText("Queue Going Smoothly Only '"+patNo+"' Patients Waiting");
            this.jLabel14.addNotify();
            
            
            this.jLabel14.setForeground(new java.awt.Color(51,51,255));
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField jTextField3621;
    private javax.swing.JDialog jSearchDialog;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JDialog jSearchDialog3;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JComboBox jComboBox41;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JDialog jSearchDialog1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jButton9;
    private javax.swing.JTextField jTextField361;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jButton92;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jSearchPanel3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField jTextField1113;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField jTextField1111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JButton jButton93;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jSearchScrollPane;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JPanel jPanel621;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jSearchPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField111;
    private javax.swing.JScrollPane jSearchScrollPane3;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JPanel jSearchPanel2;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JDialog jSearchDialog2;
    private javax.swing.JTable jSearchTable;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jSearchScrollPane2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JTable jSearchTable3;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField jTextField1112;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton91;
    private javax.swing.JTextField jTextField362;
    private javax.swing.JTable jSearchTable1;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JButton searchButton21;
    private javax.swing.JScrollPane jSearchScrollPane1;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JTextField jTextField4;
    private com.afrisoftech.lib.DatePicker datePicker11;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jSearchTable2;
    // End of variables declaration//GEN-END:variables
    
}
