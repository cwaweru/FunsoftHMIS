/*
 * loanpymntintfr.java
 *
 * Created on August 13, 2002, 1:09 PM
 */

package com.afrisoftech.laboratory;

/**
 *
 * @author  root
 */
public class PhyPendingRequestsIntfr extends javax.swing.JInternalFrame implements java.lang.Runnable {
    
    /** Creates new form loanpymntintfr */
    javax.swing.table.TableModel tableModel = null;
    
    java.sql.Connection connectDB = null;
    com.afrisoftech.lib.DBObject dbObject;
    org.netbeans.lib.sql.pool.PooledConnectionSource pConnDB = null;
    
    java.lang.Thread getListThread;
    
    boolean getList;
    
    public PhyPendingRequestsIntfr(java.sql.Connection connDb, org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB) {
        
        connectDB = connDb;
        
        pConnDB = pconnDB;
        dbObject = new com.afrisoftech.lib.DBObject();
        getListThread = new java.lang.Thread(this, "Update_Lab_Tests");
        
        initComponents();
        
        getList = true;
        
        getListThread.start();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.afrisoftech.dbadmin.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,  java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class,java.lang.Object.class,java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false,false, false, true,false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Dental Requests");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ColorPreview.gif")));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minusarm.gif")));
        jButton3.setMnemonic('l');
        jButton3.setText("Clear");
        jButton3.setToolTipText("Click here to clear textfields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BD14755_.GIF")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Click here to close window");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel7, gridBagConstraints);

        jTextField6.setEditable(false);
        jTextField6.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextField6.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextField6, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setAutoscrolls(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Pat No.", "Pat Name", "Mode", "Service", "Qty", "Amount", "No", "Doctor", "Bill", "Bed No", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel21.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        jButton6.setText("Okay");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jButton6, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jLabel1, gridBagConstraints);

        setBounds(0, 0, 748, 428);
    }//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String request = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
           java.util.Date adDate=null;
            String opvisitid = "-";           
           
        try {
            connectDB.setAutoCommit(false);
             java.sql.Statement stm12t = connectDB.createStatement();
           
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            
            while (rse12.next()){
                
                patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
            }
                  java.sql.Statement stm121q = connectDB.createStatement();
           
            
             java.sql.ResultSet rse121 = stm121q.executeQuery("select distinct gl_account,main_service from pb_operating_parameters where main_service ilike 'lab%'");
                        
                        while (rse121.next()){
                            
                            actCode = rse121.getObject(1).toString();
                            glAcc = rse121.getObject(2).toString();
                        }
            
              
                for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getValueAt(i,9) != null){
                    if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 9).toString()) == java.lang.Boolean.TRUE) {
                       
   
                            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('lab_request'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
                                
                           }
            
            request =jTable1.getValueAt(i, 7).toString();
            if(request.startsWith("I")){
                 java.sql.ResultSet rse12t = stm12t.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            java.sql.Statement pst = connectDB.createStatement();
            java.sql.ResultSet rstt = pst.executeQuery("select nextval('transaction_no_seq')");
            
            while (rse12t.next()){
                
                patientAcc = rse12t.getObject(1).toString();
                AccDesc = rse12t.getObject(2).toString();
            }
            while (rstt.next()){
                rstt.getObject(1).toString();
                
                transNo = rstt.getObject(1).toString();
            }
            
               java.sql.Statement stm121t = connectDB.createStatement();
          
              java.sql.Statement stm12n = connectDB.createStatement();
                    java.sql.ResultSet rse12n = stm12n.executeQuery("select adm_date from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                    while (rse12n.next()){
                        admDate = rse12n.getDate(1);
                    }
                    java.sql.Statement ps11w1 = connectDB.createStatement();
                    java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTable1.getValueAt(i,1).toString()+"' and check_out = false");
                    while (rst11w1.next()){
                        
                        
                        visitid = rst11w1.getObject(1).toString();
                    }
                    
                     
                    System.out.println(admDate);
                    // if (exp.before(date)){
                  //  if (adDate.before(admDate)){
                    //    javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                   // }else{
                        
                        if (!(jTable1.getValueAt(i,3).toString().equals("Cash"))){
                            java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                            while (rse1.next()){
                                payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                    cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                    scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                    cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                    isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                    expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                    staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                            }
                        }
                                      
                                    java.sql.ResultSet rse121t = stm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                                    while (rse121.next()){
                                        
                                        glAcc = rse121t.getObject(1).toString();
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                                        pstmt.setString(3,"General");
                                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setString(10,expDate);
                                        pstmt.setString(11,"");
                                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                                        pstmt.setString(13,"0.00");
                                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"IP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2.setObject(1,actCode);
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTable1.getValueAt(i,1).toString());
                                        pstmt2.setString(4,jTable1.getValueAt(i,2).toString());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"IP");
                                        pstmt2.setString(9,jTable1.getValueAt(i,8).toString());
                                        pstmt2.setString(10,jTable1.getValueAt(i,3).toString());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setString(16,"0.00");
                                        pstmt2.setObject(17,jTable1.getValueAt(i,6).toString());
                                        pstmt2.setString(18,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setString(20,"false");
                                        pstmt2.setString(21,"false");
                                        pstmt2.setString(22,"false");
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                        
                                        
                                    //}
                                //}
                           // }
                        }
                          
                             java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                    pstmt46.executeUpdate();
                   
            
            
            
            }else{
                  java.sql.Statement ps11w1 = connectDB.createStatement();
                    java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select distinct slip_no from credit_acc_slip where patient_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),1).toString()+"' order by date desc limit 1");
                    while (rst11w1.next()){
                        
                        
                        opvisitid = rst11w1.getObject(1).toString();
                    }
                    
            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                            
                            pstmt2.setString(1,jTable1.getValueAt(i,1).toString());
                           
                            pstmt2.setString(2,jTable1.getValueAt(i,2).toString());
                            pstmt2.setString(3,jTable1.getValueAt(i,3).toString());
                            pstmt2.setString(4,"General");
                            pstmt2.setString(5,jTable1.getValueAt(i,4).toString());
                            pstmt2.setString(6,jTable1.getValueAt(i,5).toString());
                            pstmt2.setString(7,jTable1.getValueAt(i,6).toString());
                            pstmt2.setObject(8,actCode);
                            pstmt2.setString(9,jTable1.getValueAt(i,0).toString());
                             pstmt2.setString(10,billNo);
                           
                            pstmt2.setString(11,user);
                             pstmt2.setString(12,"false");
                            pstmt2.setString(13,glAcc);
                            pstmt2.setString(14,billNo);
                            pstmt2.setString(15,jTable1.getValueAt(i,7).toString());
                            pstmt2.executeUpdate();
                            java.sql.Statement pstm121t = connectDB.createStatement();
                             java.sql.ResultSet rse121t = pstm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                                    while (rse121.next()){
                                        
                                        glAcc = rse121t.getObject(1).toString();
                                        
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                                        pstmt.setString(3,"General");
                                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setString(10,expDate);
                                        pstmt.setString(11,"");
                                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                                        pstmt.setString(13,"0.00");
                                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2v = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2v.setObject(1,actCode);
                                        pstmt2v.setString(2,glAcc);
                                        pstmt2v.setString(3,jTable1.getValueAt(i,1).toString());
                                        pstmt2v.setString(4,jTable1.getValueAt(i,2).toString());
                                        pstmt2v.setString(5,"");
                                        pstmt2v.setString(6,cardNo);
                                        pstmt2v.setString(7,cardName);
                                        pstmt2v.setString(8,"OP");
                                        pstmt2v.setString(9,jTable1.getValueAt(i,8).toString());
                                        pstmt2v.setString(10,jTable1.getValueAt(i,3).toString());
                                        pstmt2v.setString(11,"");
                                        pstmt2v.setString(12,"");
                                        pstmt2v.setString(13,"");
                                        pstmt2v.setString(14,jTable1.getValueAt(i,4).toString());
                                        pstmt2v.setString(15,"Revenue");
                                        pstmt2v.setString(16,"0.00");
                                        pstmt2v.setObject(17,jTable1.getValueAt(i,6).toString());
                                        pstmt2v.setString(18,jTable1.getValueAt(i,0).toString());
                                        pstmt2v.setString(19,transNo);
                                        pstmt2v.setString(20,"false");
                                        pstmt2v.setString(21,"false");
                                        pstmt2v.setString(22,"false");
                                        pstmt2v.setString(23,user);
                                        pstmt2v.executeUpdate();
                                    }
                             java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                    pstmt46.executeUpdate();
           // }     
                    }
                }
                
                }
                }
                
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            //}
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
             for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
           
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
        
     
         // Add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

      java.util.Calendar calendar = java.util.Calendar.getInstance();
        
        long dateNow = calendar.getTimeInMillis();
        
        java.sql.Date datenowSql1= new java.sql.Date(dateNow);
        
        System.out.println(datenowSql1.toString());
        
        java.sql.Timestamp datenowSql= new java.sql.Timestamp(dateNow);
        
        System.out.println(datenowSql.toString());
        //   try{
        String billNo = null;
        String transNo = null;
        String payMode = null;
        String patientAcc = null;
        String cardNo = null;
        String AccDesc = null;
        String scheme = null;
        String cardName = null;
        String isurer = null;
        String expDate = null;
        String staffNo = null;
        String glAcc = null;
        String user = null;
        String accDesc1 = null;
        String glAcc1 = null;
        String chbox = null;
        String units = null;
        String gacc = null;
        String request = null;
        int itemInt = 0;
        double price = 0.00;
        String Store = null;
        double qty = 0.00;
        String glCode = null;
        String actCode = null;
        double amount = 0.00;
        double sellPrice = 0.00;
        java.util.Date admDate=null;
        String visitid = "-";
           java.util.Date adDate=null;
            String opvisitid = "-";           
           
        try {
            connectDB.setAutoCommit(false);
             java.sql.Statement stm12t = connectDB.createStatement();
           
            java.sql.Statement stm12 = connectDB.createStatement();
            java.sql.Statement stm121 = connectDB.createStatement();
            java.sql.Statement stm1211 = connectDB.createStatement();
            java.sql.Statement stm122 = connectDB.createStatement();
            java.sql.Statement stm122x = connectDB.createStatement();
            java.sql.Statement stm1 = connectDB.createStatement();
            
            java.sql.ResultSet rse12 = stm12.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            
            while (rse12.next()){
                
                patientAcc = rse12.getObject(1).toString();
                AccDesc = rse12.getObject(2).toString();
            }
                  java.sql.Statement stm121q = connectDB.createStatement();
           
            
             java.sql.ResultSet rse121 = stm121q.executeQuery("select distinct gl_account,main_service from pb_operating_parameters where main_service ilike 'lab%'");
                        
                        while (rse121.next()){
                            
                            actCode = rse121.getObject(1).toString();
                            glAcc = rse121.getObject(2).toString();
                        }
            
              int i = jTable1.getSelectedRow();
               // for (int i = 0; i < jTable1.getRowCount(); i++){
                    if (jTable1.getValueAt(i,9) != null){
                    if (Boolean.valueOf(jTable1.getModel().getValueAt(i, 9).toString()) == java.lang.Boolean.TRUE) {
                       
           System.out.println("Count"+i);
                            java.sql.Statement ps11 = connectDB.createStatement();
            java.sql.ResultSet rst11 = ps11.executeQuery("select nextval('lab_request'),current_user");
            while (rst11.next()){
                rst11.getObject(1).toString();
                
                billNo = rst11.getObject(1).toString();
                user = rst11.getObject(2).toString();
                                
                           }
            
            request =jTable1.getValueAt(i, 7).toString();
            if(request.startsWith("I")){
                 java.sql.ResultSet rse12t = stm12t.executeQuery("select code,activity from pb_activity where activity_category ='PR'");
            
            java.sql.Statement pst = connectDB.createStatement();
            java.sql.ResultSet rstt = pst.executeQuery("select nextval('transaction_no_seq')");
            
            while (rse12t.next()){
                
                patientAcc = rse12t.getObject(1).toString();
                AccDesc = rse12t.getObject(2).toString();
            }
            while (rstt.next()){
                rstt.getObject(1).toString();
                
                transNo = rstt.getObject(1).toString();
            }
            
               java.sql.Statement stm121t = connectDB.createStatement();
          
              java.sql.Statement stm12n = connectDB.createStatement();
                    java.sql.ResultSet rse12n = stm12n.executeQuery("select adm_date from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                    while (rse12n.next()){
                        admDate = rse12n.getDate(1);
                    }
                    java.sql.Statement ps11w1 = connectDB.createStatement();
                    java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select visit_id from hp_admission where patient_no = '"+jTable1.getValueAt(i,1).toString()+"' and check_out = false");
                    while (rst11w1.next()){
                        
                        
                        visitid = rst11w1.getObject(1).toString();
                    }
                    
                     
                    System.out.println(admDate);
                    // if (exp.before(date)){
                  //  if (adDate.before(admDate)){
                    //    javax.swing.JOptionPane.showMessageDialog(this, "Admission date is : " +admDate +" CHECK billing date","Date Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                   // }else{
                        
                        if (!(jTable1.getValueAt(i,3).toString().equals("Cash"))){
                            java.sql.ResultSet rse1 = stm1.executeQuery("select pay_mode,account_no,description,payer,payer,expiry_date,account_no from hp_inpatient_register where patient_no ='"+jTable1.getValueAt(i,1).toString()+"'");
                            while (rse1.next()){
                                payMode = dbObject.getDBObject(rse1.getObject(1), "-");
                    cardNo = dbObject.getDBObject(rse1.getObject(2), "-");
                    scheme = dbObject.getDBObject(rse1.getObject(3), "-");
                    cardName = dbObject.getDBObject(rse1.getObject(4), "-");
                    isurer = dbObject.getDBObject(rse1.getObject(5), "-");
                    expDate = dbObject.getDBObject(rse1.getObject(6), "NULL");
                    staffNo = dbObject.getDBObject(rse1.getObject(7), "-");
                            }
                        }
                                      
                                    java.sql.ResultSet rse121t = stm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                                    while (rse121.next()){
                                        
                                        glAcc = rse121t.getObject(1).toString();
                                    }
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                                        pstmt.setString(3,"General");
                                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setString(10,expDate);
                                        pstmt.setString(11,"");
                                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                                        pstmt.setString(13,"0.00");
                                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,visitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"IP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,visitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2.setObject(1,actCode);
                                        pstmt2.setString(2,glAcc);
                                        pstmt2.setString(3,jTable1.getValueAt(i,1).toString());
                                        pstmt2.setString(4,jTable1.getValueAt(i,2).toString());
                                        pstmt2.setString(5,"");
                                        pstmt2.setString(6,cardNo);
                                        pstmt2.setString(7,cardName);
                                        pstmt2.setString(8,"IP");
                                        pstmt2.setString(9,jTable1.getValueAt(i,8).toString());
                                        pstmt2.setString(10,jTable1.getValueAt(i,3).toString());
                                        pstmt2.setString(11,"");
                                        pstmt2.setString(12,"");
                                        pstmt2.setString(13,"");
                                        pstmt2.setString(14,jTable1.getValueAt(i,4).toString());
                                        pstmt2.setString(15,"Revenue");
                                        pstmt2.setString(16,"0.00");
                                        pstmt2.setObject(17,jTable1.getValueAt(i,6).toString());
                                        pstmt2.setString(18,jTable1.getValueAt(i,0).toString());
                                        pstmt2.setString(19,transNo);
                                        pstmt2.setString(20,"false");
                                        pstmt2.setString(21,"false");
                                        pstmt2.setString(22,"false");
                                        pstmt2.setString(23,user);
                                        pstmt2.executeUpdate();
                                        
                                        
                                    //}
                                //}
                           // }
                        
                          
                             java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                    pstmt46.executeUpdate();
                   
            
            
            
            }else{
                
                  java.sql.Statement ps11w1 = connectDB.createStatement();
                    java.sql.ResultSet rst11w1 = ps11w1.executeQuery("select distinct slip_no,date from credit_acc_slip where patient_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),1).toString()+"' order by date desc limit 1");
                    while (rst11w1.next()){
                        
                        
                        opvisitid = rst11w1.getObject(1).toString();
                    }
                    
            java.sql.PreparedStatement pstmt2 = connectDB.prepareStatement("insert into hp_patient_billing values(?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,trim(?))");
                            
                            pstmt2.setString(1,jTable1.getValueAt(i,1).toString());
                           
                            pstmt2.setString(2,jTable1.getValueAt(i,2).toString());
                            pstmt2.setString(3,jTable1.getValueAt(i,3).toString());
                            pstmt2.setString(4,"General");
                            pstmt2.setString(5,jTable1.getValueAt(i,4).toString());
                            pstmt2.setString(6,jTable1.getValueAt(i,5).toString());
                            pstmt2.setString(7,jTable1.getValueAt(i,6).toString());
                            pstmt2.setObject(8,actCode);
                            pstmt2.setString(9,jTable1.getValueAt(i,0).toString());
                             pstmt2.setString(10,opvisitid);
                           
                            pstmt2.setString(11,user);
                             pstmt2.setString(12,"false");
                            pstmt2.setString(13,glAcc);
                            pstmt2.setString(14,billNo);
                            pstmt2.setString(15,jTable1.getValueAt(i,7).toString());
                            pstmt2.executeUpdate();
                            java.sql.Statement pstm121t = connectDB.createStatement();
                             java.sql.ResultSet rse121t = pstm121t.executeQuery("select activity from pb_activity where code ='"+actCode+"'");
                                    while (rse121.next()){
                                        
                                        glAcc = rse121t.getObject(1).toString();
                                    }
                                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into hp_patient_card values(?,?,?,?,?,?,?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)");
                                        //1 for (int i = 0; i < jTable1.getRowCount(); i++){
                                        pstmt.setString(1,jTable1.getValueAt(i,1).toString());
                                        pstmt.setObject(2,jTable1.getValueAt(i,4).toString());
                                        pstmt.setString(3,"General");
                                        pstmt.setString(4,jTable1.getValueAt(i,3).toString());
                                        pstmt.setString(5,transNo);
                                        pstmt.setString(7,scheme);
                                        pstmt.setString(6,cardNo);
                                        pstmt.setString(8,cardName);
                                        pstmt.setString(9,isurer);
                                        pstmt.setString(10,expDate);
                                        pstmt.setString(11,"");
                                        pstmt.setObject(12,jTable1.getValueAt(i,6).toString());
                                        pstmt.setString(13,"0.00");
                                        pstmt.setString(14,jTable1.getValueAt(i,0).toString());
                                        pstmt.setObject(15,patientAcc);
                                        pstmt.setString(16,glAcc);
                                        pstmt.setObject(17,jTable1.getValueAt(i,5).toString());
                                        pstmt.setObject(18,staffNo);
                                        pstmt.setBoolean(19,false);
                                        pstmt.setString(20,"Billing");
                                        pstmt.setBoolean(21,false);
                                        pstmt.setString(22,AccDesc);
                                        pstmt.setString(23,opvisitid);
                                        pstmt.setString(24,user);
                                        pstmt.setString(25,billNo);
                                        pstmt.setString(26,"OP");
                                        pstmt.setString(27,"'now'");
                                        pstmt.setString(28,opvisitid);
                                        pstmt.executeUpdate();
                                        
                                        
                                        java.sql.PreparedStatement pstmt2v = connectDB.prepareStatement("insert into ac_ledger values(?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?)");
                                        pstmt2v.setObject(1,actCode);
                                        pstmt2v.setString(2,glAcc);
                                        pstmt2v.setString(3,jTable1.getValueAt(i,1).toString());
                                        pstmt2v.setString(4,jTable1.getValueAt(i,2).toString());
                                        pstmt2v.setString(5,"");
                                        pstmt2v.setString(6,cardNo);
                                        pstmt2v.setString(7,cardName);
                                        pstmt2v.setString(8,"OP");
                                        pstmt2v.setString(9,jTable1.getValueAt(i,8).toString());
                                        pstmt2v.setString(10,jTable1.getValueAt(i,3).toString());
                                        pstmt2v.setString(11,"");
                                        pstmt2v.setString(12,"");
                                        pstmt2v.setString(13,"");
                                        pstmt2v.setString(14,jTable1.getValueAt(i,4).toString());
                                        pstmt2v.setString(15,"Revenue");
                                        pstmt2v.setString(16,"0.00");
                                        pstmt2v.setObject(17,jTable1.getValueAt(i,6).toString());
                                        pstmt2v.setString(18,jTable1.getValueAt(i,0).toString());
                                        pstmt2v.setString(19,transNo);
                                        pstmt2v.setString(20,"false");
                                        pstmt2v.setString(21,"false");
                                        pstmt2v.setString(22,"false");
                                        pstmt2v.setString(23,user);
                                        pstmt2v.executeUpdate();
                                    //}
                             java.sql.PreparedStatement pstmt46 = connectDB.prepareStatement("UPDATE pb_doctors_request SET paid = true,collected = false where inv_no = '"+jTable1.getValueAt(jTable1.getSelectedRow(),7).toString()+"' AND service = '"+jTable1.getValueAt(jTable1.getSelectedRow(),4).toString()+"'");
                    pstmt46.executeUpdate();
           // }     
                    }
                }
                
                }
               // }
                
                javax.swing.JOptionPane.showMessageDialog(this,"Insert Successful","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            //}
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
             for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
           
        }catch(java.sql.SQLException sq){
            
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            System.out.println(sq.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this,sq.getMessage(), "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_jTable1MouseClicked
    private void searchButtonClicked() {
        
  /*      System.out.println("Showing dialog");
   
        java.awt.Point point = this.jTextField7.getLocationOnScreen();
   
        jSearchDialog11.setSize(400,200);
   
        jSearchDialog11.setLocation(point);
   
        jSearchDialog11.show();
   */
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);   // Add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         for (int k = 0; k < jTable1.getRowCount(); k++ ) {
            for (int r = 0; r < jTable1.getColumnCount(); r++ ) {
                jTable1.getModel().setValueAt(null,k,r);
            }
        }
        
        // Add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    public void tableModelTableChanged(javax.swing.event.TableModelEvent evt) {
 /*
       // double totals = 0.00;
        double totals = Double.parseDouble(jTextField1.getText());
        int i = 0;
  
        for (int j = 0; j < jTable1.getRowCount(); j++) {
  
            System.out.println(jTable1.getModel().getValueAt(j, 4).toString());
  
            if (Boolean.valueOf(jTable1.getModel().getValueAt(j, 4).toString()) == java.lang.Boolean.FALSE) {
  
                totals = totals - Double.parseDouble(jTable1.getModel().getValueAt(j, 3).toString());
  
                i++;
            }
        }
  
        jTextField1.setText(Double.toString(totals));
  
     //   jTextField2.setText(Integer.toString(i));
  
        System.out.println(totals);
  
        System.out.println(i);
  
        System.out.println("This table has changed");
  */
    }
    
    private void populateTable1(java.lang.String patient_no) {
        
        
    }
    
    public void run() {
        
        while(getList) {
            
            runGetListThread();
            
            try {
                
                Thread.currentThread().sleep(10000);
                
            } catch(java.lang.InterruptedException IntExec){
                
                javax.swing.JOptionPane.showMessageDialog(this, IntExec.getMessage(), "Interruption Error!", javax.swing.JOptionPane.ERROR_MESSAGE);
                
            }
            
            // getList = false;
            
        }
        
    }
    
    public void runGetListThread() {
        
        int j = 0;
        int i = 0;
        int n = 0;
         int patNo = 0;
        try {
            
            java.sql.Statement stmtTable11 = connectDB.createStatement();
            
           // java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select date,patient_no,name,payment,'false' as bill from hp_patient_visit where transaction_type ilike 'reg%' and date = current_date  ORDER BY date");
            java.sql.ResultSet rsetTable11 = stmtTable11.executeQuery("select distinct count(patient_no) from pb_doctors_request where revenue_code ilike 'dent%' and paid = false AND collected = false and trans_date>=current_date -2 ");
            
            while (rsetTable11.next()) {
                patNo = rsetTable11.getInt(1);
                
            }
            
            java.sql.Statement stmtTable1 = connectDB.createStatement();
            
            java.sql.ResultSet rsetTable1 = stmtTable1.executeQuery("select trans_date,patient_no,patient_name,payment_mode,service,quantity,amount,inv_no,doctor,'false' as bill,bed_no,time_due from pb_doctors_request where revenue_code ilike 'den%' and paid = false AND collected = false and trans_date>=current_date -2 ORDER BY trans_date asc");
            
            
            while (rsetTable1.next()) {
                
                jTable1.setValueAt(rsetTable1.getObject(1), i, 0);
                jTable1.setValueAt(rsetTable1.getObject(2), i, 1);
                jTable1.setValueAt(rsetTable1.getObject(3), i, 2);
                jTable1.setValueAt(rsetTable1.getObject(4), i, 3);
                jTable1.setValueAt(rsetTable1.getObject(5), i, 4);
                jTable1.setValueAt(rsetTable1.getObject(6), i, 5);
                jTable1.setValueAt(rsetTable1.getObject(7), i, 6);
                 jTable1.setValueAt(rsetTable1.getObject(8), i, 7);
                   jTable1.setValueAt(rsetTable1.getObject(9), i, 8);
                  jTable1.setValueAt(java.lang.Boolean.valueOf(false), i, 9);
                   jTable1.setValueAt(rsetTable1.getObject(11), i, 10);
                   jTable1.setValueAt(rsetTable1.getObject(12), i, 11);
               
                
                i++;
                
            }
            
            //}
            
            
            
            
        } catch(java.sql.SQLException sqlExec) {
            
            sqlExec.printStackTrace();
            
            javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());
            
        }
       if(patNo >5){
            
          this.jLabel1.setText("Queue Long '"+patNo+"' Patients Are Waiting"); 
              this.jLabel1.setForeground(new java.awt.Color(255,0,51));
        }else{
               this.jLabel1.setText("Queue Going Smoothly Only '"+patNo+"' Patients Waiting");   
      this.jLabel1.addNotify();   
      
               
               this.jLabel1.setForeground(new java.awt.Color(51,51,255));
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JButton jButton4;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
